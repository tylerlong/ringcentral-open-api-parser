{
  "models": [
    {
      "name": "Attachment",
      "description": "Attachment is a file to be uploaded",
      "fields": [
        {
          "type": "string",
          "description": "Filename with extension, such as \"image.png\"",
          "name": "filename",
          "required": false
        },
        {
          "type": "byte[]",
          "description": "Binary content of the file",
          "name": "content",
          "required": true
        },
        {
          "type": "string",
          "description": "Content type of the file, such as \"image/png\"",
          "name": "contentType",
          "required": false
        }
      ]
    },
    {
      "name": "RcwHistoryListParticipantsParameters",
      "description": "Query parameters for operation rcwHistoryListParticipants",
      "fields": [
        {
          "name": "role",
          "description": "The role of the invitee/participant.",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
            "enum": [
              "Panelist",
              "CoHost",
              "Host",
              "Attendee"
            ],
            "example": "Panelist"
          }
        },
        {
          "name": "originalRole",
          "description": "The original role of the invitee/participant.",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
            "enum": [
              "Panelist",
              "CoHost",
              "Host",
              "Attendee"
            ],
            "example": "Panelist"
          }
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "pageToken",
          "description": "The token indicating the particular page of the result set to be retrieved.\nIf omitted the first page will be returned.\n",
          "explode": false,
          "type": "string"
        }
      ]
    },
    {
      "name": "RcwHistoryListInviteesParameters",
      "description": "Query parameters for operation rcwHistoryListInvitees",
      "fields": [
        {
          "name": "role",
          "description": "The role of the invitee/participant.",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
            "enum": [
              "Panelist",
              "CoHost",
              "Host",
              "Attendee"
            ],
            "example": "Panelist"
          }
        },
        {
          "name": "originalRole",
          "description": "The original role of the invitee/participant.",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
            "enum": [
              "Panelist",
              "CoHost",
              "Host",
              "Attendee"
            ],
            "example": "Panelist"
          }
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "pageToken",
          "description": "The token indicating the particular page of the result set to be retrieved.\nIf omitted the first page will be returned.\n",
          "explode": false,
          "type": "string"
        }
      ]
    },
    {
      "name": "RcwHistoryAdminListRecordingsParameters",
      "description": "Query parameters for operation rcwHistoryAdminListRecordings",
      "fields": [
        {
          "name": "nameFragment",
          "description": "Filter to return only webinar recordings containing particular substring within their names",
          "explode": true,
          "example": "All-hands",
          "type": "string"
        },
        {
          "name": "creationTimeFrom",
          "description": "The beginning of the time window by 'creationTime' .",
          "explode": false,
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "creationTimeTo",
          "description": "The end of the time window by 'creationTime' .",
          "explode": false,
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "status",
          "description": "The status of the recording.",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "Recording status",
            "enum": [
              "Processing",
              "Available",
              "Failed",
              "Purged"
            ],
            "example": "Available"
          }
        },
        {
          "name": "hostUserId",
          "description": "Identifier of the user who hosts a webinar (if omitted, webinars hosted by all company users will be returned)",
          "explode": false,
          "example": [
            "77777777"
          ],
          "type": "array",
          "maxItems": 10,
          "minItems": 0,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          }
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "pageToken",
          "description": "The token indicating the particular page of the result set to be retrieved.\nIf omitted the first page will be returned.\n",
          "explode": false,
          "type": "string"
        }
      ]
    },
    {
      "name": "RcwHistoryListAllCompanySessionsParameters",
      "description": "Query parameters for operation rcwHistoryListAllCompanySessions",
      "fields": [
        {
          "name": "hostUserId",
          "description": "Identifier of the user who hosts a webinar (if omitted, webinars hosted by all company users will be returned)",
          "explode": false,
          "example": [
            "77777777"
          ],
          "type": "array",
          "maxItems": 10,
          "minItems": 0,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          }
        },
        {
          "name": "status",
          "description": "Filter to return only webinar sessions in certain status. Multiple values are supported.",
          "explode": true,
          "example": [
            "Active",
            "Finished"
          ],
          "type": "array",
          "items": {
            "type": "string",
            "description": "Webinar session status",
            "enum": [
              "Scheduled",
              "Active",
              "Finished"
            ],
            "example": "Finished"
          }
        },
        {
          "name": "endTimeFrom",
          "description": "The beginning of the time window by 'endTime' .",
          "explode": false,
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "endTimeTo",
          "description": "The end of the time window by 'endTime' .",
          "explode": false,
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "pageToken",
          "description": "The token indicating the particular page of the result set to be retrieved.\nIf omitted the first page will be returned.\n",
          "explode": false,
          "type": "string"
        }
      ]
    },
    {
      "name": "RcwHistoryListRecordingsParameters",
      "description": "Query parameters for operation rcwHistoryListRecordings",
      "fields": [
        {
          "name": "creationTimeFrom",
          "description": "The beginning of the time window by 'creationTime' .",
          "explode": false,
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "creationTimeTo",
          "description": "The end of the time window by 'creationTime' .",
          "explode": false,
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "status",
          "description": "The status of the recording.",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "Recording status",
            "enum": [
              "Processing",
              "Available",
              "Failed",
              "Purged"
            ],
            "example": "Available"
          }
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "pageToken",
          "description": "The token indicating the particular page of the result set to be retrieved.\nIf omitted the first page will be returned.\n",
          "explode": false,
          "type": "string"
        }
      ]
    },
    {
      "name": "RcwHistoryGetRecordingDownloadParameters",
      "description": "Query parameters for operation rcwHistoryGetRecordingDownload",
      "fields": [
        {
          "name": "recordingMediaType",
          "description": "Recording file media type. 'Video' implies multiplexed audio and video. 'Audio' refers to audio only.",
          "type": "string",
          "enum": [
            "Video",
            "Audio"
          ],
          "example": "Video",
          "default": "Video"
        }
      ]
    },
    {
      "name": "RcwHistoryListAllSessionsParameters",
      "description": "Query parameters for operation rcwHistoryListAllSessions",
      "fields": [
        {
          "name": "nameFragment",
          "description": "Filter to return only webinar sessions containing particular substring within their names",
          "explode": true,
          "example": "All-hands",
          "type": "string"
        },
        {
          "name": "status",
          "description": "Filter to return only webinar sessions in certain status. Multiple values are supported.",
          "explode": true,
          "example": [
            "Active",
            "Finished"
          ],
          "type": "array",
          "items": {
            "type": "string",
            "description": "Webinar session status",
            "enum": [
              "Scheduled",
              "Active",
              "Finished"
            ],
            "example": "Finished"
          }
        },
        {
          "name": "endTimeFrom",
          "description": "The beginning of the time window by 'endTime' .",
          "explode": false,
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "endTimeTo",
          "description": "The end of the time window by 'endTime' .",
          "explode": false,
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "pageToken",
          "description": "The token indicating the particular page of the result set to be retrieved.\nIf omitted the first page will be returned.\n",
          "explode": false,
          "type": "string"
        }
      ]
    },
    {
      "name": "RcwRegListRegistrantsParameters",
      "description": "Query parameters for operation rcwRegListRegistrants",
      "fields": [
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "pageToken",
          "description": "The token indicating the particular page of the result set to be retrieved.\nIf omitted the first page will be returned.\n",
          "explode": false,
          "type": "string"
        },
        {
          "name": "includeQuestionnaire",
          "description": "Indicates if registrant's \"questionnaire\" should be returned",
          "explode": false,
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "RcwRegGetRegistrantParameters",
      "description": "Query parameters for operation rcwRegGetRegistrant",
      "fields": [
        {
          "name": "includeQuestionnaire",
          "description": "Indicates if registrant's \"questionnaire\" should be returned",
          "explode": false,
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "RcwConfigListWebinarsParameters",
      "description": "Query parameters for operation rcwConfigListWebinars",
      "fields": [
        {
          "name": "creationTimeFrom",
          "description": "The beginning of the time window by 'creationTime' .",
          "explode": false,
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "pageToken",
          "description": "The token indicating the particular page of the result set to be retrieved.\nIf omitted the first page will be returned.\n",
          "explode": false,
          "type": "string"
        }
      ]
    },
    {
      "name": "RcwConfigListInviteesParameters",
      "description": "Query parameters for operation rcwConfigListInvitees",
      "fields": [
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "pageToken",
          "description": "The token indicating the particular page of the result set to be retrieved.\nIf omitted the first page will be returned.\n",
          "explode": false,
          "type": "string"
        }
      ]
    },
    {
      "name": "RcwConfigListAllCompanySessionsParameters",
      "description": "Query parameters for operation rcwConfigListAllCompanySessions",
      "fields": [
        {
          "name": "status",
          "description": "Session status (for the purposes of Configuration service)",
          "explode": true,
          "example": "Scheduled",
          "type": "string",
          "enum": [
            "Scheduled",
            "Active",
            "Finished"
          ]
        },
        {
          "name": "endTimeFrom",
          "description": "The beginning of the time window by 'endTime' (it is calculated as scheduledStartTime+scheduledDuration)",
          "explode": false,
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "hostUserId",
          "description": "Identifier of the user who hosts a webinar (if omitted, webinars hosted by all company users will be returned)",
          "explode": false,
          "example": [
            "77777777"
          ],
          "type": "array",
          "maxItems": 10,
          "minItems": 0,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          }
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "pageToken",
          "description": "The token indicating the particular page of the result set to be retrieved.\nIf omitted the first page will be returned.\n",
          "explode": false,
          "type": "string"
        }
      ]
    },
    {
      "name": "RcwConfigListAllSessionsParameters",
      "description": "Query parameters for operation rcwConfigListAllSessions",
      "fields": [
        {
          "name": "nameFragment",
          "description": "Filter to return only webinar sessions containing particular substring within their names",
          "explode": true,
          "example": "All-hands",
          "type": "string"
        },
        {
          "name": "status",
          "description": "Session status (for the purposes of Configuration service)",
          "explode": true,
          "example": "Scheduled",
          "type": "string",
          "enum": [
            "Scheduled",
            "Active",
            "Finished"
          ]
        },
        {
          "name": "endTimeFrom",
          "description": "The beginning of the time window by 'endTime' (it is calculated as scheduledStartTime+scheduledDuration)",
          "explode": false,
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "pageToken",
          "description": "The token indicating the particular page of the result set to be retrieved.\nIf omitted the first page will be returned.\n",
          "explode": false,
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadCallRecordingContentParameters",
      "description": "Query parameters for operation readCallRecordingContent",
      "fields": [
        {
          "name": "contentDisposition",
          "description": "Whether the content is expected to be displayed in the browser, or downloaded and saved locally",
          "type": "string",
          "enum": [
            "Inline",
            "Attachment"
          ]
        },
        {
          "name": "contentDispositionFilename",
          "description": "The default filename of the file to be downloaded",
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadAccountGreetingContentParameters",
      "description": "Query parameters for operation readAccountGreetingContent",
      "fields": [
        {
          "name": "contentDisposition",
          "description": "Whether the content is expected to be displayed in the browser, or downloaded and saved locally",
          "type": "string",
          "enum": [
            "Inline",
            "Attachment"
          ]
        },
        {
          "name": "contentDispositionFilename",
          "description": "The default filename of the file to be downloaded",
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadMultichannelCallRecordingContentParameters",
      "description": "Query parameters for operation readMultichannelCallRecordingContent",
      "fields": [
        {
          "name": "contentDisposition",
          "description": "Whether the content is expected to be displayed in the browser, or downloaded and saved locally",
          "type": "string",
          "enum": [
            "Inline",
            "Attachment"
          ]
        },
        {
          "name": "contentDispositionFilename",
          "description": "The default filename of the file to be downloaded",
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadGreetingContentParameters",
      "description": "Query parameters for operation readGreetingContent",
      "fields": [
        {
          "name": "contentDisposition",
          "description": "Whether the content is expected to be displayed in the browser, or downloaded and saved locally",
          "type": "string",
          "enum": [
            "Inline",
            "Attachment"
          ]
        },
        {
          "name": "contentDispositionFilename",
          "description": "The default filename of the file to be downloaded",
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadScaledProfileImageParameters",
      "description": "Query parameters for operation readScaledProfileImage",
      "fields": [
        {
          "name": "contentDisposition",
          "description": "Whether the content is expected to be displayed in the browser, or downloaded and saved locally",
          "type": "string",
          "enum": [
            "Inline",
            "Attachment"
          ]
        },
        {
          "name": "contentDispositionFilename",
          "description": "The default filename of the file to be downloaded",
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadMessageContentParameters",
      "description": "Query parameters for operation readMessageContent",
      "fields": [
        {
          "name": "contentDisposition",
          "description": "Whether the content is expected to be displayed in the browser, or downloaded and saved locally",
          "type": "string",
          "enum": [
            "Inline",
            "Attachment"
          ]
        },
        {
          "name": "contentDispositionFilename",
          "description": "The default filename of the file to be downloaded",
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadIVRPromptContentParameters",
      "description": "Query parameters for operation readIVRPromptContent",
      "fields": [
        {
          "name": "contentDisposition",
          "description": "Whether the content is expected to be displayed in the browser, or downloaded and saved locally",
          "type": "string",
          "enum": [
            "Inline",
            "Attachment"
          ]
        },
        {
          "name": "contentDispositionFilename",
          "description": "The default filename of the file to be downloaded",
          "type": "string"
        }
      ]
    },
    {
      "name": "GetBridgeByPstnPinParameters",
      "description": "Query parameters for operation getBridgeByPstnPin",
      "fields": [
        {
          "name": "phoneNumber",
          "description": "Phone number to find a phone group for PSTN PIN. If it is not specified, then the default phone group will be used.\n",
          "type": "string"
        },
        {
          "name": "pw",
          "description": "Bridge hash password",
          "type": "string"
        }
      ]
    },
    {
      "name": "GetBridgeByWebPinParameters",
      "description": "Query parameters for operation getBridgeByWebPin",
      "fields": [
        {
          "name": "pw",
          "description": "Bridge hash password",
          "type": "string"
        }
      ]
    },
    {
      "name": "GetBridgeParameters",
      "description": "Query parameters for operation getBridge",
      "fields": [
        {
          "name": "pw",
          "description": "Bridge hash password",
          "type": "string"
        }
      ]
    },
    {
      "name": "GetAccountRecordingsParameters",
      "description": "Query parameters for operation getAccountRecordings",
      "fields": [
        {
          "name": "pageToken",
          "description": "Token to get the next page",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "Number of records returned",
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    {
      "name": "GetExtensionRecordingsParameters",
      "description": "Query parameters for operation getExtensionRecordings",
      "fields": [
        {
          "name": "pageToken",
          "description": "Token to get the next page",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "Number of records returned",
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    {
      "name": "ListVideoMeetingsParameters",
      "description": "Query parameters for operation listVideoMeetings",
      "fields": [
        {
          "name": "text",
          "description": "Search text",
          "type": "string"
        },
        {
          "name": "pageToken",
          "description": "Token to get the next page",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "Number of records returned",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "type",
          "description": "Specify what kind of meeting should be returned. Possible values: All, My, Deleted, Shared\nRequest type meaning in meeting search:\n`None` (not passed) - take meetings only where requested acc/ext is participant OR host OR deputy OR watcher.\n`ALL`- access rights of meeting is equal to Alive AND requested acc/ext  is in watchers list OR host OR deputy\n`My`- access rights of meeting is equal to Alive AND requested acc/ext is host OR deputy\n`Shared` - access rights of meeting is equal to Alive AND requested acc/ext is in watcher list AND not HOST\n`Deleted` - access rights of meeting is equal to Delete and requested acc/ext is host OR deputy\n",
          "type": "string",
          "enum": [
            "All",
            "My",
            "Deleted",
            "Shared"
          ]
        },
        {
          "name": "startTime",
          "description": "Unix timestamp in milliseconds (inclusive) indicates the start time of meetings which should be included in response",
          "type": "integer",
          "format": "int64"
        },
        {
          "name": "endTime",
          "description": "Unix timestamp in milliseconds (inclusive) indicates the end time of meetings which should be included in response",
          "type": "integer",
          "format": "int64"
        }
      ]
    },
    {
      "name": "AuthorizeParameters",
      "description": "Query parameters for operation authorize",
      "fields": [
        {
          "name": "client_id",
          "description": "The registered identifier of a client application",
          "type": "string",
          "example": "AZwEVwGEcfGet2PCouA7K6"
        },
        {
          "name": "response_type",
          "description": "Determines authorization flow type. The only supported value is `code` which corresponds to OAuth 2.0 \"Authorization Code Flow\"\n",
          "type": "string",
          "enum": [
            "code"
          ]
        },
        {
          "name": "redirect_uri",
          "description": "This is the URI where the Authorization Server redirects the User Agent to at the end of the authorization flow.\nThe value of this parameter must exactly match one of the URIs registered for this client application.\nThis parameter is required if there are more than one redirect URIs registered for the app.\n",
          "type": "string",
          "format": "uri"
        },
        {
          "name": "state",
          "description": "An opaque value used by the client to maintain state between the request and callback.\nThe authorization server includes this value when redirecting the User Agent back\nto the client. The parameter SHOULD be used for preventing cross-site request forgery attacks.\n",
          "type": "string"
        },
        {
          "name": "scope",
          "description": "The list of space separated application permissions (OAuth scopes)",
          "type": "string"
        },
        {
          "name": "display",
          "description": "Specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User.\n",
          "type": "string",
          "enum": [
            "page",
            "popup",
            "touch",
            "mobile"
          ],
          "default": "page"
        },
        {
          "name": "prompt",
          "description": "Space-delimited, case-sensitive list of ASCII string values that specifies whether the Authorization Server prompts the End-User for\nre-authentication and consent. The defined values are:\n\n- `login` - RingCentral native login form,\n- `sso` - Single Sign-On login form,\n- `consent` - form to show the requested scope and prompt user for consent.\n\nEither `login` or `sso` (or both) must be specified. The default\nvalue is `login sso`\n",
          "type": "string",
          "default": "login sso"
        },
        {
          "name": "ui_locales",
          "description": "End-User's preferred languages and scripts for the user interface, represented as a space-separated list of\n[RFC-5646](https://datatracker.ietf.org/doc/html/rfc5646) language tag values, ordered by preference.\n\nIf this parameter is provided, its value overrides 'Accept-Language' header value and 'localeId' parameter value (if any)\n",
          "type": "string",
          "example": "en-US"
        },
        {
          "name": "localeId",
          "deprecated": true,
          "description": "DEPRECATED: `ui_locales` parameter should be used instead",
          "type": "string",
          "example": "en-US"
        },
        {
          "name": "code_challenge",
          "description": "The code challenge value as defined by the PKCE specification -\n[RFC-7636 \"Proof Key for Code Exchange by OAuth Public Clients\"](https://datatracker.ietf.org/doc/html/rfc7636)\n",
          "type": "string"
        },
        {
          "name": "code_challenge_method",
          "description": "The code challenge method as defined by the PKCE specification -\n[RFC-7636 \"Proof Key for Code Exchange by OAuth Public Clients\"](https://datatracker.ietf.org/doc/html/rfc7636)\n",
          "type": "string",
          "enum": [
            "plain",
            "S256"
          ],
          "default": "plain"
        },
        {
          "name": "nonce",
          "description": "String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token.\n",
          "type": "string"
        },
        {
          "name": "ui_options",
          "description": "Login form user interface options (space-separated). By default, the UI options that are registered for this client application will be used\n",
          "type": "string"
        },
        {
          "name": "login_hint",
          "description": "Hint to the Authorization Server about the login identifier the End-User might use to log in.",
          "type": "string"
        },
        {
          "name": "brand_id",
          "description": "RingCentral Brand identifier. If it is not provided in the request,\nserver will try to determine brand from the client application profile.\n",
          "type": "string",
          "example": "1210"
        }
      ]
    },
    {
      "name": "RevokeTokenParameters",
      "description": "Query parameters for operation revokeToken",
      "fields": [
        {
          "name": "token",
          "description": "Access or refresh token to be revoked (along with the entire OAuth session)",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListAccountPhoneNumbersV2Parameters",
      "description": "Query parameters for operation listAccountPhoneNumbersV2",
      "fields": [
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "type",
          "description": "Types of phone numbers to be returned",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Type of a phone number",
            "nullable": true,
            "enum": [
              "VoiceFax",
              "VoiceOnly",
              "FaxOnly"
            ]
          }
        },
        {
          "name": "usageType",
          "description": "Usage type(s) of phone numbers to be returned",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "Usage type of a phone number",
            "enum": [
              "MainCompanyNumber",
              "DirectNumber",
              "Inventory",
              "InventoryPartnerBusinessMobileNumber",
              "PartnerBusinessMobileNumber",
              "AdditionalCompanyNumber",
              "CompanyNumber",
              "PhoneLine",
              "CompanyFaxNumber",
              "ForwardedNumber",
              "ForwardedCompanyNumber",
              "ContactCenterNumber",
              "ConferencingNumber",
              "MeetingsNumber",
              "NumberStorage",
              "BusinessMobileNumber",
              "ELIN"
            ]
          }
        },
        {
          "name": "status",
          "description": "Status of a phone number. If the value is `Normal`, the phone\nnumber is ready to be used. Otherwise, it is an external number not yet\nported to RingCentral\n",
          "type": "string",
          "enum": [
            "Normal",
            "Pending",
            "PortedIn",
            "Temporary",
            "Unknown"
          ]
        },
        {
          "name": "tollType",
          "description": "Indicates if a number is toll or toll-free",
          "type": "string",
          "enum": [
            "Toll",
            "TollFree"
          ],
          "example": "Toll"
        },
        {
          "name": "extensionStatus",
          "description": "Extension status",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated",
            "Unassigned"
          ]
        },
        {
          "name": "byocNumber",
          "description": "The parameter reflects whether this number is BYOC or not",
          "type": "boolean"
        },
        {
          "name": "phoneNumber",
          "description": "Phone number in e.164 format to be searched for.\nParameter value can include wildcards (e.g. \"+165012345**\")\nor be an exact number \"+16501234500\" - single number is searched in that case.\nMake sure you escape the \"+\" in the URL as \"%2B\"\n",
          "type": "string",
          "maxLength": 18
        }
      ]
    },
    {
      "name": "ReadDeviceParameters",
      "description": "Query parameters for operation readDevice",
      "fields": [
        {
          "name": "syncEmergencyAddress",
          "description": "Specifies if an emergency address should be synchronized or not",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "UpdateDeviceParameters",
      "description": "Query parameters for operation updateDevice",
      "fields": [
        {
          "name": "prestatement",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListCallRecordingCustomGreetingsParameters",
      "description": "Query parameters for operation listCallRecordingCustomGreetings",
      "fields": [
        {
          "name": "type",
          "type": "string",
          "enum": [
            "StartRecording",
            "StopRecording",
            "AutomaticRecording"
          ]
        }
      ]
    },
    {
      "name": "ReadCallSessionStatusParameters",
      "description": "Query parameters for operation readCallSessionStatus",
      "fields": [
        {
          "name": "timestamp",
          "description": "The date and time of a call session latest change",
          "type": "string"
        },
        {
          "name": "timeout",
          "description": "The time frame of awaiting for a status change before sending\nthe resulting one in response\n",
          "type": "string"
        }
      ]
    },
    {
      "name": "PauseResumeCallRecordingParameters",
      "description": "Query parameters for operation pauseResumeCallRecording",
      "fields": [
        {
          "name": "brandId",
          "description": "Identifies a brand of a logged-in user or a brand of a sign-up session",
          "type": "string",
          "default": "~"
        }
      ]
    },
    {
      "name": "ListCompanyMessageTemplatesParameters",
      "description": "Query parameters for operation listCompanyMessageTemplates",
      "fields": [
        {
          "name": "siteIds",
          "description": "Site ID(s) to filter company message templates, associated with particular sites\nBy default the value is all - templates with all sites will be returned\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    {
      "name": "ReadCompanyCallLogParameters",
      "description": "Query parameters for operation readCompanyCallLog",
      "fields": [
        {
          "name": "extensionNumber",
          "description": "Short extension number of a user. If specified, returns call log for this particular extension only.\nCannot be combined with `phoneNumber` filter\n",
          "example": "101",
          "type": "string"
        },
        {
          "name": "phoneNumber",
          "description": "Phone number of a caller/callee in e.164 format without a '+' sign. If specified, all incoming/outgoing calls\nfrom/to this phone number are returned.\n",
          "example": "12053320032",
          "type": "string"
        },
        {
          "name": "direction",
          "description": "The direction of call records to be included in the result. If omitted, both\ninbound and outbound calls are returned. Multiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "description": "The direction of a call",
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "type",
          "description": "The type of call records to be included in the result.\nIf omitted, all call types are returned. Multiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "The type of call",
            "enum": [
              "Voice",
              "Fax"
            ]
          }
        },
        {
          "name": "view",
          "description": "Defines the level of details for returned call records\n",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "withRecording",
          "deprecated": true,
          "description": "Deprecated, replaced with `recordingType` filter, still supported for compatibility reasons.\nIndicates if only recorded calls should be returned.\n\nIf both `withRecording` and `recordingType` parameters are specified, then `withRecording` is ignored\n",
          "type": "boolean",
          "default": false
        },
        {
          "name": "recordingType",
          "description": "Indicates that call records with recordings of particular type should be returned.\nIf omitted, then calls with and without recordings are returned\n",
          "type": "string",
          "enum": [
            "Automatic",
            "OnDemand",
            "All"
          ]
        },
        {
          "name": "dateFrom",
          "description": "The beginning of the time range to return call records in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z. The default value is `dateTo` minus 24 hours\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "dateTo",
          "description": "The end of the time range to return call records in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z. The default value is current time\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "sessionId",
          "description": "Internal identifier of a call session",
          "type": "string"
        },
        {
          "name": "telephonySessionId",
          "description": "Internal identifier of a telephony session",
          "type": "string"
        },
        {
          "name": "metadataCategory",
          "description": "Category of metadata to be returned. If omitted, all call records are returned.\nMultiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          }
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 100
        }
      ]
    },
    {
      "name": "ReadCompanyCallRecordParameters",
      "description": "Query parameters for operation readCompanyCallRecord",
      "fields": [
        {
          "name": "view",
          "description": "Defines the level of details for returned call records\n",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        }
      ]
    },
    {
      "name": "SyncAccountCallLogParameters",
      "description": "Query parameters for operation syncAccountCallLog",
      "fields": [
        {
          "name": "syncType",
          "description": "Type of call log synchronization request: full or incremental sync",
          "type": "string",
          "enum": [
            "FSync",
            "ISync"
          ],
          "default": "FSync"
        },
        {
          "name": "syncToken",
          "description": "Value of syncToken property of last sync request response. Mandatory parameter for 'ISync' sync type",
          "type": "string"
        },
        {
          "name": "dateFrom",
          "description": "Starting date for the resulting records in ISO 8601 format, including\ntimezone, for example *2016-03-10T18:07:52.534Z*. The range is limited to the last 30 days from the current moment.\nIf not specified, the default value is a log history date (date of account creation/call log deletion), and\nno time range limitation applied\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "recordCount",
          "description": "For `FSync` mode this parameter is mandatory, it limits the number of records to be returned in response.\n\nFor `ISync` mode this parameter specifies the number of records to extend the sync frame with to the past\n(the maximum number of records is 250)\n",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        {
          "name": "statusGroup",
          "description": "Type of calls to be returned",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Missed",
              "All"
            ]
          }
        },
        {
          "name": "view",
          "description": "Defines the level of details for returned call records\n",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "showDeleted",
          "description": "Supported for `ISync` mode. Indicates that deleted call records should be returned",
          "type": "boolean",
          "default": false
        },
        {
          "name": "withRecording",
          "deprecated": true,
          "description": "Deprecated, replaced with `recordingType` filter, still supported for compatibility reasons.\nIndicates if only recorded calls should be returned.\n\nIf both `withRecording` and `recordingType` parameters are specified, then `withRecording` is ignored\n",
          "type": "boolean",
          "default": false
        },
        {
          "name": "recordingType",
          "description": "Indicates that call records with recordings of particular type should be returned.\nIf omitted, then calls with and without recordings are returned\n",
          "type": "string",
          "enum": [
            "Automatic",
            "OnDemand",
            "All"
          ]
        },
        {
          "name": "metadataCategory",
          "description": "Category of metadata to be returned. If omitted, all call records are returned.\nMultiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          }
        }
      ]
    },
    {
      "name": "ListCompanyActiveCallsParameters",
      "description": "Query parameters for operation listCompanyActiveCalls",
      "fields": [
        {
          "name": "direction",
          "description": "The direction of call records to be included in the result. If omitted, both\ninbound and outbound calls are returned. Multiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "description": "The direction of a call",
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "view",
          "description": "Defines the level of details for returned call records\n",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "type",
          "description": "The type of call records to be included in the result.\nIf omitted, all call types are returned. Multiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "The type of call",
            "enum": [
              "Voice",
              "Fax"
            ]
          }
        },
        {
          "name": "transport",
          "description": "The type of call transport. Multiple values are supported. By default, this filter is disabled\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "The type of call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
            "enum": [
              "PSTN",
              "VoIP"
            ]
          }
        },
        {
          "name": "conferenceType",
          "description": "Conference call type: RCC or RC Meetings. If not specified, no conference call filter applied\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AudioConferencing",
              "Meetings"
            ]
          }
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "format": "int32",
          "default": 1,
          "minimum": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100,
          "minimum": 1
        }
      ]
    },
    {
      "name": "ListUserTemplatesParameters",
      "description": "Query parameters for operation listUserTemplates",
      "fields": [
        {
          "name": "type",
          "description": "Type of template",
          "type": "string",
          "enum": [
            "UserSettings",
            "CallHandling",
            "LimitedExtensions"
          ]
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare allowed. Default value is '1'\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items). If not specified, the value is '100' by default",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "AggregateA2PSMSStatusesParameters",
      "description": "Query parameters for operation aggregateA2PSMSStatuses",
      "fields": [
        {
          "name": "batchId",
          "description": "Internal identifier of a message batch to filter the response",
          "example": "55577",
          "type": "string"
        },
        {
          "name": "direction",
          "description": "Direction of a message to filter the message list result.\nBy default, there is no filter applied - both Inbound and Outbound messages are returned\n",
          "example": [
            "Inbound"
          ],
          "type": "array",
          "items": {
            "type": "string",
            "description": "Direction of the SMS message",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "dateFrom",
          "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the 'dateTo' minus 24 hours",
          "example": "2020-11-09T16:07:52.597Z",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "dateTo",
          "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the current time",
          "example": "2020-11-25T16:07:52.597Z",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "phoneNumber",
          "style": "form",
          "explode": true,
          "description": "List of phone numbers (specified in 'to' or 'from' fields of a message) to filter the results. Maximum number of phone numbers allowed to be specified as filters is 15",
          "example": [
            "15551234455",
            "15551235577"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    {
      "name": "ListA2PSMSParameters",
      "description": "Query parameters for operation listA2PSMS",
      "fields": [
        {
          "name": "batchId",
          "description": "Internal identifier of a message batch to filter the response",
          "example": "55577",
          "type": "string"
        },
        {
          "name": "direction",
          "description": "Direction of a message to filter the message list result.\nBy default, there is no filter applied - both Inbound and Outbound messages are returned\n",
          "example": [
            "Inbound"
          ],
          "type": "array",
          "items": {
            "type": "string",
            "description": "Direction of the SMS message",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "dateFrom",
          "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the 'dateTo' minus 24 hours",
          "example": "2020-11-09T16:07:52.597Z",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "dateTo",
          "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the current time",
          "example": "2020-11-25T16:07:52.597Z",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "view",
          "description": "Indicates if the response has to be detailed, includes text in the response if detailed",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "phoneNumber",
          "style": "form",
          "explode": true,
          "description": "List of phone numbers (specified in 'to' or 'from' fields of a message) to filter the results. Maximum number of phone numbers allowed to be specified as filters is 15",
          "example": [
            "15551234455",
            "15551235577"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "pageToken",
          "description": "The page token of the page to be retrieved.",
          "example": "pgt1",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "The number of messages to be returned per request",
          "example": 1,
          "type": "integer",
          "format": "int32",
          "default": 1000
        }
      ]
    },
    {
      "name": "ReadA2PSMSOptOutsParameters",
      "description": "Query parameters for operation readA2PSMSOptOuts",
      "fields": [
        {
          "name": "from",
          "description": "The sender's phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format for filtering messages.\nThe asterisk value \"*\" means any number in `from` field\n",
          "example": "15551234455",
          "type": "string"
        },
        {
          "name": "to",
          "description": "The receiver's phone number (`to` field) in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format for filtering messages\n",
          "example": "15551237755",
          "type": "string"
        },
        {
          "name": "status",
          "description": "The status (opted out, opted in, or both) to be used as the filter",
          "example": "optout",
          "type": "string",
          "default": "optout",
          "enum": [
            "optout",
            "optin",
            "all"
          ]
        },
        {
          "name": "pageToken",
          "description": "The page token of the page to be retrieved",
          "example": "pgt1",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "The number of records to be returned for the page",
          "example": 5,
          "type": "integer",
          "format": "int32",
          "default": 1000
        }
      ]
    },
    {
      "name": "ListA2PBatchesParameters",
      "description": "Query parameters for operation listA2PBatches",
      "fields": [
        {
          "name": "dateFrom",
          "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the 'dateTo' minus 24 hours",
          "example": "2020-11-09T16:07:52.597Z",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "dateTo",
          "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the current time",
          "example": "2020-11-25T16:07:52.597Z",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "from",
          "description": "Phone number in E.164 format from which the messages are going to be sent",
          "example": "15551234455",
          "type": "string"
        },
        {
          "name": "status",
          "style": "form",
          "explode": true,
          "description": "A list of batch statuses to filter the results",
          "example": [
            "Queued",
            "Processing"
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Queued",
              "Processing",
              "Sent",
              "Completed"
            ]
          }
        },
        {
          "name": "pageToken",
          "description": "The page token of the page to be retrieved",
          "example": "pgt1",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "The number of records to be returned per page",
          "example": 1,
          "type": "integer",
          "format": "int64"
        }
      ]
    },
    {
      "name": "ListCompanyAnsweringRulesParameters",
      "description": "Query parameters for operation listCompanyAnsweringRules",
      "fields": [
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        }
      ]
    },
    {
      "name": "ListCallQueuesParameters",
      "description": "Query parameters for operation listCallQueues",
      "fields": [
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        },
        {
          "name": "memberExtensionId",
          "description": "Internal identifier of an extension that is a member of every group within the result",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListCallQueueMembersParameters",
      "description": "Query parameters for operation listCallQueueMembers",
      "fields": [
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare allowed\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ListEmergencyLocationsParameters",
      "description": "Query parameters for operation listEmergencyLocations",
      "fields": [
        {
          "name": "siteId",
          "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "searchString",
          "description": "Filters entries containing the specified substring in 'address'\nand 'name' fields. The character range is 0-64; not case-sensitive.\nIf empty then the filter is ignored\n",
          "type": "string",
          "maxLength": 64
        },
        {
          "name": "addressStatus",
          "type": "string",
          "description": "Emergency address status",
          "enum": [
            "Valid",
            "Invalid",
            "Provisioning"
          ]
        },
        {
          "name": "usageStatus",
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        },
        {
          "name": "domesticCountryId",
          "type": "string"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results, prefixed by\nplus sign '+' (ascending order) or minus sign '-' (descending order)\n",
          "type": "string",
          "enum": [
            "+name",
            "+siteName",
            "+address",
            "+addressStatus",
            "+usageStatus",
            "-name",
            "-siteName",
            "-address",
            "-addressStatus",
            "-usageStatus"
          ],
          "default": "+address"
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items). The values\nsupported: `Max` or numeric value. If not specified,\n100 records are returned per one page\n",
          "type": "integer",
          "format": "int32",
          "default": 100
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values\nare supported\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        }
      ]
    },
    {
      "name": "ReadEmergencyLocationParameters",
      "description": "Query parameters for operation readEmergencyLocation",
      "fields": [
        {
          "name": "syncEmergencyAddress",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "DeleteEmergencyLocationParameters",
      "description": "Query parameters for operation deleteEmergencyLocation",
      "fields": [
        {
          "name": "validateOnly",
          "description": "Flag indicating that validation of emergency location(s) is required\nbefore deletion\n",
          "type": "boolean"
        },
        {
          "name": "newLocationId",
          "description": "Internal identifier of an emergency response location\nthat should be used instead of a deleted one.\n",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListDepartmentMembersParameters",
      "description": "Query parameters for operation listDepartmentMembers",
      "fields": [
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ReadAccountPresenceParameters",
      "description": "Query parameters for operation readAccountPresence",
      "fields": [
        {
          "name": "detailedTelephonyState",
          "description": "Whether to return detailed telephony state",
          "type": "boolean"
        },
        {
          "name": "sipData",
          "description": "Whether to return SIP data",
          "type": "boolean"
        },
        {
          "name": "page",
          "description": "Page number for account presence information",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "perPage",
          "description": "Number for account presence information items per page",
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    {
      "name": "ListAssignedRolesParameters",
      "description": "Query parameters for operation listAssignedRoles",
      "fields": [
        {
          "name": "showHidden",
          "description": "Specifies if hidden roles are shown or not",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListAccountMeetingRecordingsParameters",
      "description": "Query parameters for operation listAccountMeetingRecordings",
      "fields": [
        {
          "name": "meetingId",
          "description": "Internal identifier of a meeting. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
          "type": "string"
        },
        {
          "name": "meetingStartTimeFrom",
          "description": "Recordings of meetings started after the time specified will\nbe returned. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can\nbe specified\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "meetingStartTimeTo",
          "description": "Recordings of meetings started before the time specified will\nbe returned. The default value is current time. Either `meetingId` or `meetingStartTime`/`meetingEndTime`\ncan be specified\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "page",
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "perPage",
          "description": "Number of items per page. The `max` value is supported to indicate the maximum size - 300",
          "maximum": 300,
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ListCallMonitoringGroupsParameters",
      "description": "Query parameters for operation listCallMonitoringGroups",
      "fields": [
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare allowed\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        },
        {
          "name": "memberExtensionId",
          "description": "Internal identifier of an extension that is a member of every\ngroup within the result\n",
          "type": "string"
        },
        {
          "name": "siteId",
          "description": "Internal identifier of a site",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    {
      "name": "ListCallMonitoringGroupMembersParameters",
      "description": "Query parameters for operation listCallMonitoringGroupMembers",
      "fields": [
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare allowed\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ListDirectoryEntriesParameters",
      "description": "Query parameters for operation listDirectoryEntries",
      "fields": [
        {
          "name": "accessibleSitesOnly",
          "description": "Allows to make lookups across a whole directory skipping a filtering logic of Cross-Site access management feature.\n",
          "type": "boolean",
          "default": true
        },
        {
          "name": "showFederated",
          "description": "If `true` then contacts of all accounts in federation are returned. If `false` then only contacts of the current account are returned, and account section is eliminated in this case",
          "type": "boolean",
          "default": true
        },
        {
          "name": "type",
          "description": "Type of an extension. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "type": "string",
          "enum": [
            "User",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ParkLocation",
            "Limited",
            "External",
            "DelegatedLinesGroup"
          ]
        },
        {
          "name": "typeGroup",
          "description": "Type of extension group",
          "type": "string",
          "enum": [
            "User",
            "NonUser"
          ]
        },
        {
          "name": "page",
          "description": "Page number",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Records count to be returned per one page. It can be either integer or string with the specific keyword values:\n- `all` - all records are returned in one page\n- `max` - maximum count of records that can be returned in one page\n",
          "type": "string",
          "format": "int32",
          "default": 1000,
          "maximum": 2000,
          "enum": [
            "max",
            "all"
          ]
        },
        {
          "name": "siteId",
          "description": "Internal identifier of the business site to which extensions belong",
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadDirectoryEntryParameters",
      "description": "Query parameters for operation readDirectoryEntry",
      "fields": [
        {
          "name": "accessibleSitesOnly",
          "description": "Allows to make lookups across a whole directory skipping a filtering logic of Cross-Site access management feature.\n",
          "type": "boolean",
          "default": true
        }
      ]
    },
    {
      "name": "SearchDirectoryEntriesParameters",
      "description": "Query parameters for operation searchDirectoryEntries",
      "fields": [
        {
          "name": "accessibleSitesOnly",
          "description": "Allows to make lookups across a whole directory skipping a filtering logic of Cross-Site access management feature.\n",
          "type": "boolean",
          "default": true
        },
        {
          "name": "accountId",
          "deprecated": true,
          "description": "A list of Account IDs. Deprecated, use the appropriate body field 'accountIds' instead.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "400131426008"
          }
        },
        {
          "name": "department",
          "deprecated": true,
          "description": "Department name. Deprecated, use the appropriate body field 'department' instead.",
          "type": "string",
          "example": "North office"
        },
        {
          "name": "siteId",
          "deprecated": true,
          "description": "A list of Site IDs. Deprecated, use the appropriate body field 'siteIds' instead.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "872781797006"
          }
        },
        {
          "name": "extensionStatus",
          "deprecated": true,
          "description": "List of extension current statuses. Deprecated, use the appropriate body field 'extensionStatuses' instead.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "Enabled"
          }
        },
        {
          "name": "extensionType",
          "deprecated": true,
          "description": "Types of extension to filter the contacts",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Type of extension to filter the contacts",
            "enum": [
              "User",
              "Department",
              "Announcement",
              "Voicemail",
              "DigitalUser",
              "VirtualUser",
              "FaxUser",
              "PagingOnly",
              "SharedLinesGroup",
              "IvrMenu",
              "ApplicationExtension",
              "ParkLocation",
              "Limited",
              "Bot",
              "Site",
              "Room",
              "ProxyAdmin",
              "DelegatedLinesGroup",
              "FlexibleUser",
              "GroupCallPickup",
              "RoomConnector"
            ],
            "example": "User"
          }
        }
      ]
    },
    {
      "name": "ReadDirectoryFederationParameters",
      "description": "Query parameters for operation readDirectoryFederation",
      "fields": [
        {
          "name": "types",
          "description": "Federation types for search",
          "type": "string",
          "enum": [
            "All",
            "Regular",
            "AdminOnly"
          ]
        }
      ]
    },
    {
      "name": "ListPagingGroupUsersParameters",
      "description": "Query parameters for operation listPagingGroupUsers",
      "fields": [
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ListPagingGroupDevicesParameters",
      "description": "Query parameters for operation listPagingGroupDevices",
      "fields": [
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)\n",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ListUserRolesParameters",
      "description": "Query parameters for operation listUserRoles",
      "fields": [
        {
          "name": "custom",
          "description": "Specifies whether to return custom roles or predefined roles only.\nIf not specified, all roles are returned\n",
          "type": "boolean"
        },
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        }
      ]
    },
    {
      "name": "ReadUserRoleParameters",
      "description": "Query parameters for operation readUserRole",
      "fields": [
        {
          "name": "advancedPermissions",
          "description": "Specifies whether to return advanced permissions capabilities within `permissionsCapabilities` resource.\nThe default value is false.\n",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "DeleteCustomRoleParameters",
      "description": "Query parameters for operation deleteCustomRole",
      "fields": [
        {
          "name": "validateOnly",
          "description": "Specifies that role should be validated prior to deletion, whether\nit can be deleted or not\n",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListExtensionsParameters",
      "description": "Query parameters for operation listExtensions",
      "fields": [
        {
          "name": "extensionNumber",
          "description": "Extension short number to filter records",
          "type": "string"
        },
        {
          "name": "email",
          "description": "Extension email address. Multiple values are accepted\n",
          "example": "alice.smith@example.com&email=bob.johnson@example.com",
          "type": "string"
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare allowed\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        },
        {
          "name": "status",
          "description": "Extension status. Multiple values are supported. If `Unassigned`\nis specified, then extensions without `extensionNumber` attribute are returned.\nIf not specified, then all extensions are returned\n",
          "allowEmptyValue": true,
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "Extension status",
            "enum": [
              "Enabled",
              "Disabled",
              "Frozen",
              "NotActivated",
              "Unassigned"
            ]
          }
        },
        {
          "name": "type",
          "description": "Extension type. Multiple values are supported. Please note\nthat legacy 'Department' extension type corresponds to 'Call Queue'\nextensions in modern RingCentral product terminology\n",
          "allowEmptyValue": true,
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "User",
              "FaxUser",
              "FlexibleUser",
              "VirtualUser",
              "DigitalUser",
              "Department",
              "Announcement",
              "Voicemail",
              "SharedLinesGroup",
              "PagingOnly",
              "IvrMenu",
              "ApplicationExtension",
              "ParkLocation",
              "Limited",
              "Bot",
              "ProxyAdmin",
              "DelegatedLinesGroup",
              "Site"
            ]
          }
        }
      ]
    },
    {
      "name": "DeleteExtensionParameters",
      "description": "Query parameters for operation deleteExtension",
      "fields": [
        {
          "name": "savePhoneLines",
          "type": "boolean",
          "default": false
        },
        {
          "name": "savePhoneNumbers",
          "type": "boolean",
          "default": true
        }
      ]
    },
    {
      "name": "ListExtensionDevicesParameters",
      "description": "Query parameters for operation listExtensionDevices",
      "fields": [
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "linePooling",
          "description": "Pooling type of device - Host - a device with standalone paid phone line which can be linked to a soft client instance - Guest - a device with a linked phone line - None - a device without a phone line or with specific line (free, BLA, etc.)",
          "type": "string",
          "enum": [
            "Host",
            "Guest",
            "None"
          ]
        },
        {
          "name": "feature",
          "description": "Device feature or multiple features supported",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "Device feature",
            "enum": [
              "BLA",
              "CommonPhone",
              "Intercom",
              "Paging",
              "HELD"
            ]
          }
        },
        {
          "name": "type",
          "description": "Device type",
          "type": "string",
          "default": "HardPhone",
          "enum": [
            "HardPhone",
            "SoftPhone",
            "OtherPhone",
            "MobileDevice",
            "BLA",
            "Paging",
            "WebPhone",
            "WebRTC",
            "Room"
          ]
        },
        {
          "name": "lineType",
          "description": "The type of phone line",
          "type": "string",
          "enum": [
            "Unknown",
            "Standalone",
            "StandaloneFree",
            "BlaPrimary",
            "BlaSecondary"
          ]
        }
      ]
    },
    {
      "name": "ListExtensionGrantsParameters",
      "description": "Query parameters for operation listExtensionGrants",
      "fields": [
        {
          "name": "extensionType",
          "description": "Type of extension to be returned. Multiple values are supported.\n**Please note that legacy 'Department' extension type corresponds\nto 'Call Queue' extensions in modern RingCentral product terminology**\n",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "User",
              "FaxUser",
              "VirtualUser",
              "DigitalUser",
              "Department",
              "Announcement",
              "Voicemail",
              "SharedLinesGroup",
              "PagingOnly",
              "IvrMenu",
              "ApplicationExtension",
              "ParkLocation",
              "Limited",
              "Bot",
              "Room",
              "DelegatedLinesGroup"
            ]
          }
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare allowed\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ReadConferencingSettingsParameters",
      "description": "Query parameters for operation readConferencingSettings",
      "fields": [
        {
          "name": "countryId",
          "description": "Internal identifier of a country. If not specified, the response\nis returned for the brand country\n",
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadExtensionCallQueuePresenceParameters",
      "description": "Query parameters for operation readExtensionCallQueuePresence",
      "fields": [
        {
          "name": "editableMemberStatus",
          "description": "Filtering by the flag 'Allow members to change their Queue Status'. If 'true' only queues where user can change his availability status are returned",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListUserMessageTemplatesParameters",
      "description": "Query parameters for operation listUserMessageTemplates",
      "fields": [
        {
          "name": "siteIds",
          "description": "Site ID(s) to filter user message templates, associated with particular sites.\nBy default the value is all - templates with all sites will be returned\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "scope",
          "description": "Specifies if a template is available on a user (Personal) or a company (Company) level",
          "type": "string",
          "enum": [
            "Company",
            "Personal"
          ]
        }
      ]
    },
    {
      "name": "SyncMessagesParameters",
      "description": "Query parameters for operation syncMessages",
      "fields": [
        {
          "name": "conversationId",
          "description": "Conversation identifier for the resulting messages. Meaningful\nfor SMS and Pager messages only.\n",
          "type": "integer",
          "format": "int64"
        },
        {
          "name": "dateFrom",
          "description": "The start date/time for resulting messages in ISO 8601 format\nincluding timezone, for example 2016-03-10T18:07:52.534Z. The default value\nis dateTo minus 24 hours\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "dateTo",
          "description": "The end date/time for resulting messages in ISO 8601 format including\ntimezone, for example 2016-03-10T18:07:52.534Z. The default value is current\ntime\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "direction",
          "description": "Direction for the resulting messages. If not specified, both\ninbound and outbound messages are returned. Multiple values are accepted\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ],
            "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n"
          }
        },
        {
          "name": "distinctConversations",
          "description": "If `true`, then the latest messages per every conversation ID\nare returned\n",
          "type": "boolean"
        },
        {
          "name": "messageType",
          "description": "Type for the resulting messages. If not specified, all types\nof messages are returned. Multiple values are accepted\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Fax",
              "SMS",
              "VoiceMail",
              "Pager"
            ],
            "description": "Type of the message"
          }
        },
        {
          "name": "recordCount",
          "description": "Limits the number of records to be returned (works in combination\nwith dateFrom and dateTo if specified)\n",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "syncToken",
          "description": "A `syncToken` value from the previous sync response (for `ISync` mode only, mandatory)",
          "type": "string"
        },
        {
          "name": "syncType",
          "description": "Type of message synchronization request:\n  - FSync -- full sync\n  - ISync -- incremental sync\n",
          "type": "string",
          "enum": [
            "FSync",
            "ISync"
          ]
        },
        {
          "name": "voicemailOwner",
          "description": "Deprecated. Filters voicemail messages based on the owner extension. Supported if the 'SharedVoicemail' \nfeature is enabled.\n",
          "type": "array",
          "default": "Personal",
          "enum": [
            "Any",
            "Personal",
            "Shared"
          ],
          "items": {
            "type": "string",
            "description": "Internal identifier of an extension"
          }
        },
        {
          "name": "owner",
          "description": "Filters shared messages based on the owner extension. Supported if the 'SharedVoicemail' or 'CallQueueSmsRecipient' \nfeature is enabled.\n",
          "type": "array",
          "default": "Personal",
          "enum": [
            "Any",
            "Personal",
            "Shared"
          ],
          "items": {
            "type": "string",
            "description": "Internal identifier of an extension"
          }
        },
        {
          "name": "ownerExtensionType",
          "description": "Filters shared messages based on the owner extension type. Supported if \"SharedVoicemail\" or \"CallQueueSmsRecipient\" \nfeature is enabled.\n",
          "type": "array",
          "items": {
            "type": "string",
            "description": "ExtensionType",
            "enum": [
              "User",
              "Department",
              "Announcement",
              "Voicemail",
              "DigitalUser",
              "VirtualUser",
              "FaxUser",
              "PagingOnly",
              "SharedLinesGroup",
              "DelegatedLinesGroup",
              "GroupCallPickup",
              "IvrMenu",
              "ApplicationExtension",
              "ProxyAdmin",
              "RoomConnector",
              "ParkLocation",
              "Limited",
              "Bot",
              "Site",
              "Room",
              "FlexibleUser"
            ]
          }
        }
      ]
    },
    {
      "name": "ReadUserCallLogParameters",
      "description": "Query parameters for operation readUserCallLog",
      "fields": [
        {
          "name": "extensionNumber",
          "description": "Short extension number of a user. If specified, returns call log for this particular extension only.\nCannot be combined with `phoneNumber` filter\n",
          "example": "101",
          "type": "string"
        },
        {
          "name": "phoneNumber",
          "description": "Phone number of a caller/callee in e.164 format without a '+' sign. If specified, all incoming/outgoing calls\nfrom/to this phone number are returned.\n",
          "example": "12053320032",
          "type": "string"
        },
        {
          "name": "showBlocked",
          "description": "Indicates then calls from/to blocked numbers are returned",
          "type": "boolean",
          "default": true
        },
        {
          "name": "direction",
          "description": "The direction of call records to be included in the result. If omitted, both\ninbound and outbound calls are returned. Multiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "description": "The direction of a call",
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "sessionId",
          "description": "Internal identifier of a call session",
          "type": "string"
        },
        {
          "name": "type",
          "description": "The type of call records to be included in the result.\nIf omitted, all call types are returned. Multiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "The type of call",
            "enum": [
              "Voice",
              "Fax"
            ]
          }
        },
        {
          "name": "transport",
          "description": "The type of call transport. Multiple values are supported. By default, this filter is disabled\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "The type of call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
            "enum": [
              "PSTN",
              "VoIP"
            ]
          }
        },
        {
          "name": "view",
          "description": "Defines the level of details for returned call records\n",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "withRecording",
          "deprecated": true,
          "description": "Deprecated, replaced with `recordingType` filter, still supported for compatibility reasons.\nIndicates if only recorded calls should be returned.\n\nIf both `withRecording` and `recordingType` parameters are specified, then `withRecording` is ignored\n",
          "type": "boolean",
          "default": false
        },
        {
          "name": "recordingType",
          "description": "Indicates that call records with recordings of particular type should be returned.\nIf omitted, then calls with and without recordings are returned\n",
          "type": "string",
          "enum": [
            "Automatic",
            "OnDemand",
            "All"
          ]
        },
        {
          "name": "dateTo",
          "description": "The end of the time range to return call records in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z. The default value is current time\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "dateFrom",
          "description": "The beginning of the time range to return call records in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z. The default value is `dateTo` minus 24 hours\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "telephonySessionId",
          "description": "Internal identifier of a telephony session",
          "type": "string"
        },
        {
          "name": "metadataCategory",
          "description": "Category of metadata to be returned. If omitted, all call records are returned.\nMultiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          }
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are allowed",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items). The default value is 100.\nThe maximum value for `Simple` view is 1000, for `Detailed` view - 250\n",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 100
        },
        {
          "name": "showDeleted",
          "description": "Indicates that deleted calls records should be returned",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "DeleteUserCallLogParameters",
      "description": "Query parameters for operation deleteUserCallLog",
      "fields": [
        {
          "name": "dateTo",
          "description": "The time boundary to delete all older records in ISO 8601 format including\ntimezone, for example *2016-03-10T18:07:52.534Z*. The default value is current time\n",
          "type": "string",
          "format": "date-time"
        }
      ]
    },
    {
      "name": "ReadUserCallRecordParameters",
      "description": "Query parameters for operation readUserCallRecord",
      "fields": [
        {
          "name": "view",
          "description": "Defines the level of details for returned call records\n",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        }
      ]
    },
    {
      "name": "SyncUserCallLogParameters",
      "description": "Query parameters for operation syncUserCallLog",
      "fields": [
        {
          "name": "syncType",
          "description": "Type of call log synchronization request: full or incremental sync",
          "type": "string",
          "enum": [
            "FSync",
            "ISync"
          ],
          "default": "FSync"
        },
        {
          "name": "syncToken",
          "description": "A `syncToken` value from the previous sync response (for `ISync` mode only, mandatory)",
          "type": "string"
        },
        {
          "name": "dateFrom",
          "description": "Starting date for the resulting records in ISO 8601 format, including\ntimezone, for example *2016-03-10T18:07:52.534Z*. The range is limited to the last 30 days from the current moment.\nIf not specified, the default value is a log history date (date of account creation/call log deletion), and\nno time range limitation applied\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "recordCount",
          "description": "For `FSync` mode this parameter is mandatory, it limits the number of records to be returned in response.\n\nFor `ISync` mode this parameter specifies the number of records to extend the sync frame with to the past\n(the maximum number of records is 250)\n",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "statusGroup",
          "description": "Type of calls to be returned",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Missed",
              "All"
            ]
          }
        },
        {
          "name": "view",
          "description": "Defines the level of details for returned call records\n",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "showDeleted",
          "description": "Supported for `ISync` mode. Indicates that deleted call records should be returned",
          "type": "boolean",
          "default": false
        },
        {
          "name": "withRecording",
          "deprecated": true,
          "description": "Deprecated, replaced with `recordingType` filter, still supported for compatibility reasons.\nIndicates if only recorded calls should be returned.\n\nIf both `withRecording` and `recordingType` parameters are specified, then `withRecording` is ignored\n",
          "type": "boolean",
          "default": false
        },
        {
          "name": "recordingType",
          "description": "Indicates that call records with recordings of particular type should be returned.\nIf omitted, then calls with and without recordings are returned\n",
          "type": "string",
          "enum": [
            "Automatic",
            "OnDemand",
            "All"
          ]
        },
        {
          "name": "metadataCategory",
          "description": "Category of metadata to be returned. If omitted, all call records are returned.\nMultiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          }
        }
      ]
    },
    {
      "name": "ListOfAvailableForAssigningRolesParameters",
      "description": "Query parameters for operation listOfAvailableForAssigningRoles",
      "fields": [
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        }
      ]
    },
    {
      "name": "ListExtensionActiveCallsParameters",
      "description": "Query parameters for operation listExtensionActiveCalls",
      "fields": [
        {
          "name": "direction",
          "description": "The direction of call records to be included in the result. If omitted, both\ninbound and outbound calls are returned. Multiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "description": "The direction of a call",
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "view",
          "description": "Defines the level of details for returned call records\n",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "type",
          "description": "The type of call records to be included in the result.\nIf omitted, all call types are returned. Multiple values are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "The type of call",
            "enum": [
              "Voice",
              "Fax"
            ]
          }
        },
        {
          "name": "transport",
          "description": "The type of call transport. Multiple values are supported. By default, this filter is disabled\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "The type of call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
            "enum": [
              "PSTN",
              "VoIP"
            ]
          }
        },
        {
          "name": "conferenceType",
          "description": "Conference call type: RCC or RC Meetings. If not specified, no conference call filter applied\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AudioConferencing",
              "Meetings"
            ]
          }
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are allowed",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ListAnsweringRulesParameters",
      "description": "Query parameters for operation listAnsweringRules",
      "fields": [
        {
          "name": "type",
          "description": "Filters custom call handling rules of the extension",
          "type": "string",
          "enum": [
            "Custom"
          ]
        },
        {
          "name": "view",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Detailed",
            "Simple"
          ]
        },
        {
          "name": "enabledOnly",
          "description": "If true, then only active call handling rules are returned",
          "type": "boolean",
          "default": false
        },
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        }
      ]
    },
    {
      "name": "ReadAnsweringRuleParameters",
      "description": "Query parameters for operation readAnsweringRule",
      "fields": [
        {
          "name": "showInactiveNumbers",
          "description": "Indicates whether inactive numbers should be returned or not",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "ReadAuthorizationProfileParameters",
      "description": "Query parameters for operation readAuthorizationProfile",
      "fields": [
        {
          "name": "targetExtensionId",
          "type": "string"
        }
      ]
    },
    {
      "name": "CheckUserPermissionParameters",
      "description": "Query parameters for operation checkUserPermission",
      "fields": [
        {
          "name": "permissionId",
          "type": "string"
        },
        {
          "name": "targetExtensionId",
          "type": "string"
        }
      ]
    },
    {
      "name": "GetExtensionEmergencyLocationsParameters",
      "description": "Query parameters for operation getExtensionEmergencyLocations",
      "fields": [
        {
          "name": "siteId",
          "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "searchString",
          "description": "Filters entries by the specified substring (search by chassis\nID, switch name or address) The characters range is 0-64 (if\nempty the filter is ignored)\n",
          "type": "string"
        },
        {
          "name": "domesticCountryId",
          "type": "string"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results prefixed by '+'\nsign (ascending order) or '-' sign (descending order). The default\nsorting is by `name`\n",
          "type": "string",
          "default": "+visibility",
          "enum": [
            "+name",
            "+siteName",
            "+address",
            "+addressStatus",
            "+usageStatus",
            "+visibility",
            "-name",
            "-siteName",
            "-address",
            "-addressStatus",
            "-usageStatus",
            "-visibility"
          ]
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items). The values supported:\n`Max` or numeric value. If not specified, 100 records are returned\nper one page\n",
          "format": "int32",
          "type": "integer"
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive\nnumber values are supported\n",
          "type": "integer",
          "default": 1,
          "format": "int32"
        },
        {
          "name": "visibility",
          "type": "string"
        }
      ]
    },
    {
      "name": "DeleteExtensionEmergencyLocationParameters",
      "description": "Query parameters for operation deleteExtensionEmergencyLocation",
      "fields": [
        {
          "name": "validateOnly",
          "description": "Flag indicating that only validation of Emergency Response Locations\nto be deleted is required\n",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListForwardingNumbersParameters",
      "description": "Query parameters for operation listForwardingNumbers",
      "fields": [
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        }
      ]
    },
    {
      "name": "DeleteMeetingParameters",
      "description": "Query parameters for operation deleteMeeting",
      "fields": [
        {
          "name": "occurrenceId",
          "description": "Internal identifier of a recurrent meeting occurrence",
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadUserPresenceStatusParameters",
      "description": "Query parameters for operation readUserPresenceStatus",
      "fields": [
        {
          "name": "detailedTelephonyState",
          "description": "Specifies whether to return a detailed telephony state or not",
          "type": "boolean"
        },
        {
          "name": "sipData",
          "description": "Specifies whether to return SIP data or not",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListContactsParameters",
      "description": "Query parameters for operation listContacts",
      "fields": [
        {
          "name": "startsWith",
          "description": "If specified, only contacts which 'First name' or 'Last name' start\nwith the mentioned substring will be returned. Case-insensitive\n",
          "type": "string"
        },
        {
          "name": "sortBy",
          "description": "Sorts results by the specified property",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "FirstName",
              "LastName",
              "Company"
            ]
          }
        },
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "phoneNumber",
          "description": "Phone number in e.164 format",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    {
      "name": "CreateContactParameters",
      "description": "Query parameters for operation createContact",
      "fields": [
        {
          "name": "dialingPlan",
          "description": "Country code value complying with the [ISO 3166-1 alpha-2](https://ru.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nformat. The default value is home country of the current extension\n",
          "type": "string"
        }
      ]
    },
    {
      "name": "UpdateContactParameters",
      "description": "Query parameters for operation updateContact",
      "fields": [
        {
          "name": "dialingPlan",
          "description": "Country code value complying with the [ISO 3166-1 alpha-2](https://ru.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\nThe default value is home country of the current extension\n",
          "type": "string"
        }
      ]
    },
    {
      "name": "PatchContactParameters",
      "description": "Query parameters for operation patchContact",
      "fields": [
        {
          "name": "dialingPlan",
          "description": "Country code value complying with the [ISO 3166-1 alpha-2](https://ru.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nformat. The default value is home country of the current extension\n",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListUserAssignedRolesParameters",
      "description": "Query parameters for operation listUserAssignedRoles",
      "fields": [
        {
          "name": "showHidden",
          "description": "Specifies if hidden roles are shown or not",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListUserMeetingRecordingsParameters",
      "description": "Query parameters for operation listUserMeetingRecordings",
      "fields": [
        {
          "name": "meetingId",
          "description": "Internal identifier of a meeting. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
          "type": "string"
        },
        {
          "name": "meetingStartTimeFrom",
          "description": "Recordings of meetings started after the time specified will be returned. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "meetingStartTimeTo",
          "description": "Recordings of meetings started before the time specified will be returned. The default value is current time. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "page",
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "perPage",
          "description": "Number of items per page. The `max` value is supported to indicate the maximum size - 300",
          "maximum": 300,
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ReadExtensionFeaturesParameters",
      "description": "Query parameters for operation readExtensionFeatures",
      "fields": [
        {
          "name": "availableOnly",
          "description": "Allows to filter features by availability for an extension\n",
          "type": "boolean",
          "default": false
        },
        {
          "name": "featureId",
          "description": "Internal identifier(s) of the feature(s)",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    {
      "name": "ListMessagesParameters",
      "description": "Query parameters for operation listMessages",
      "fields": [
        {
          "name": "availability",
          "description": "Specifies the availability status for resulting messages.\nMultiple values are accepted\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Alive",
              "Deleted",
              "Purged"
            ],
            "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n"
          }
        },
        {
          "name": "conversationId",
          "description": "Specifies a conversation identifier for the resulting messages",
          "type": "string"
        },
        {
          "name": "dateFrom",
          "description": "Start date/time for resulting messages in ISO 8601 format\nincluding timezone, for example 2016-03-10T18:07:52.534Z. The default value\nis dateTo minus 24 hours\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "dateTo",
          "description": "End date/time for resulting messages in ISO 8601 format including\ntimezone, for example 2016-03-10T18:07:52.534Z. The default value is current\ntime\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "direction",
          "description": "Direction for resulting messages. If not specified, both\ninbound and outbound messages are returned. Multiple values are accepted\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ],
            "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n"
          }
        },
        {
          "name": "distinctConversations",
          "description": "If `true`, then the latest messages per every conversation ID\nare returned\n",
          "type": "boolean"
        },
        {
          "name": "messageType",
          "description": "Type of resulting messages. If not specified, all messages\nwithout message type filtering are returned. Multiple values are accepted\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Fax",
              "SMS",
              "VoiceMail",
              "Pager"
            ],
            "description": "Type of the message"
          }
        },
        {
          "name": "readStatus",
          "description": "Read status for resulting messages. Multiple values are\naccepted\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "description": "Message read status",
            "type": "string",
            "enum": [
              "Read",
              "Unread"
            ]
          }
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        },
        {
          "name": "phoneNumber",
          "description": "Phone number. If specified, messages are returned for this\nparticular phone number only\n",
          "type": "string"
        },
        {
          "name": "voicemailOwner",
          "description": "Deprecated. Filters voicemail messages based on the owner extension. Supported if the 'SharedVoicemail' \nfeature is enabled.\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "owner",
          "description": "Filters shared messages based on the owner extension. Supported if the 'SharedVoicemail' or 'CallQueueSmsRecipient' \nfeature is enabled.\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "ownerExtensionType",
          "description": "Filters shared messages based on the owner extension type. Supported if \"SharedVoicemail\" or \"CallQueueSmsRecipient\" \nfeature is enabled.\n",
          "type": "array",
          "items": {
            "type": "string",
            "description": "ExtensionType",
            "enum": [
              "User",
              "Department",
              "Announcement",
              "Voicemail",
              "DigitalUser",
              "VirtualUser",
              "FaxUser",
              "PagingOnly",
              "SharedLinesGroup",
              "DelegatedLinesGroup",
              "GroupCallPickup",
              "IvrMenu",
              "ApplicationExtension",
              "ProxyAdmin",
              "RoomConnector",
              "ParkLocation",
              "Limited",
              "Bot",
              "Site",
              "Room",
              "FlexibleUser"
            ]
          }
        }
      ]
    },
    {
      "name": "DeleteMessageByFilterParameters",
      "description": "Query parameters for operation deleteMessageByFilter",
      "fields": [
        {
          "name": "conversationId",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "dateTo",
          "description": "Messages received earlier then the date specified will be deleted.\nThe default value is current date/time\n",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "type",
          "description": "Type of messages to be deleted",
          "type": "string",
          "default": "All",
          "enum": [
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text",
            "All"
          ]
        }
      ]
    },
    {
      "name": "DeleteMessageParameters",
      "description": "Query parameters for operation deleteMessage",
      "fields": [
        {
          "name": "purge",
          "description": "If the value is `true`, then the message is purged immediately\nwith all the attachments\n",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "CreateCustomUserGreetingParameters",
      "description": "Query parameters for operation createCustomUserGreeting",
      "fields": [
        {
          "name": "apply",
          "description": "Specifies whether to apply an answering rule or not. If set to\ntrue then `answeringRule` parameter is mandatory. If set to false, then\nthe answering rule is not applied even if specified\n",
          "type": "boolean",
          "default": true
        }
      ]
    },
    {
      "name": "ListBlockedAllowedNumbersParameters",
      "description": "Query parameters for operation listBlockedAllowedNumbers",
      "fields": [
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "status",
          "type": "string",
          "description": "Status of a phone number",
          "default": "Blocked",
          "enum": [
            "Blocked",
            "Allowed"
          ]
        }
      ]
    },
    {
      "name": "SyncAddressBookParameters",
      "description": "Query parameters for operation syncAddressBook",
      "fields": [
        {
          "name": "syncType",
          "description": "Type of synchronization",
          "type": "string",
          "enum": [
            "FSync",
            "ISync"
          ]
        },
        {
          "name": "syncToken",
          "description": "Value of syncToken property of the last sync request response\n",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "Number of records per page to be returned. Max number of\nrecords is 250, which is also the default.\nFor 'FSync' - if the number of records exceeds the parameter value\n(either specified or default), all of the pages can be retrieved\nin several requests. For 'ISync' - if the number of records exceeds\npage size, then the number of incoming changes to this\nnumber is limited\n",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "pageId",
          "description": "Internal identifier of a page. It can be obtained from the 'nextPageId'\nparameter passed in response body\n",
          "type": "integer",
          "format": "int64"
        }
      ]
    },
    {
      "name": "ListExtensionPhoneNumbersParameters",
      "description": "Query parameters for operation listExtensionPhoneNumbers",
      "fields": [
        {
          "name": "status",
          "description": "Status of a phone number. If the value is `Normal`, the phone\nnumber is ready to be used. Otherwise, it is an external number not yet\nported to RingCentral\n",
          "type": "string",
          "enum": [
            "Normal",
            "Pending",
            "PortedIn",
            "Temporary",
            "Unknown"
          ]
        },
        {
          "name": "usageType",
          "description": "Usage type of a phone number",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "Usage type of a phone number. Numbers of 'NumberPool' and 'NumberStorage' type are not returned in \nphone number list requests\n",
            "enum": [
              "MainCompanyNumber",
              "AdditionalCompanyNumber",
              "CompanyNumber",
              "DirectNumber",
              "CompanyFaxNumber",
              "ForwardedNumber",
              "ForwardedCompanyNumber",
              "ContactCenterNumber",
              "ConferencingNumber",
              "MeetingsNumber",
              "NumberPool",
              "NumberStorage",
              "BusinessMobileNumber",
              "PartnerBusinessMobileNumber",
              "IntegrationNumber"
            ]
          }
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare allowed. Default value is '1'\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items). If not specified, the value is '100' by default",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ListAutomaticLocationUpdatesUsersParameters",
      "description": "Query parameters for operation listAutomaticLocationUpdatesUsers",
      "fields": [
        {
          "name": "type",
          "description": "Extension type. Multiple values are supported",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "User",
              "Limited"
            ]
          }
        },
        {
          "name": "searchString",
          "description": "Filters entries containing the specified substring in user name,\nextension or department. The characters range is 0-64; not case-sensitive.\nIf empty then the filter is ignored\n",
          "type": "string"
        },
        {
          "name": "department",
          "description": "Department name to filter the users. The value range is 0-64;\nnot case-sensitive. If not specified then the parameter is ignored. Multiple\nvalues are supported\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "siteId",
          "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "featureEnabled",
          "description": "Filters entries by their status of Automatic Location Updates\nfeature\n",
          "type": "boolean"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results prefixed by plus sign '+' (ascending order),\nor minus sign '-' (descending order). \nSupported values: 'name', 'modelName', 'siteName', 'featureEnabled'.\nThe default sorting is by `name`\n",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items). The values supported:\n`Max` or numeric value. If not specified, 100 records are returned per one\npage\n",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare supported\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        }
      ]
    },
    {
      "name": "ListNetworksParameters",
      "description": "Query parameters for operation listNetworks",
      "fields": [
        {
          "name": "siteId",
          "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "searchString",
          "description": "Filters entries by the specified substring (search by chassis\nID, switch name or address) The characters range is 0-64 (if empty the filter\nis ignored)\n",
          "type": "string"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results prefixed by plus sign '+' (ascending order),\nor minus sign '-' (descending order). \nSupported values: 'name', 'modelName', 'siteName', 'featureEnabled'.\nThe default sorting is by `name`\n",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items). The values supported:\n`Max` or a numeric value. If not specified, 100 records are returned per page\n",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare supported\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        }
      ]
    },
    {
      "name": "ListAccountSwitchesParameters",
      "description": "Query parameters for operation listAccountSwitches",
      "fields": [
        {
          "name": "siteId",
          "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "searchString",
          "description": "Filters entries by the specified substring (search by chassis\nID, switch name or address) The characters range is 0-64 (if empty the filter\nis ignored)\n",
          "type": "string"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results prefixed by plus sign '+' (ascending order),\nor minus sign '-' (descending order). \nSupported values: 'name', 'modelName', 'siteName', 'featureEnabled'.\nThe default sorting is by `name`\n",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items). The values supported:\n`Max` or numeric value. If not specified, 100 records are returned per one\npage'\n",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare supported\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        }
      ]
    },
    {
      "name": "ListWirelessPointsParameters",
      "description": "Query parameters for operation listWirelessPoints",
      "fields": [
        {
          "name": "siteId",
          "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "searchString",
          "description": "Filters entries by the specified substring (search by chassis\nID, switch name or address) The characters range is 0-64 (if empty the filter\nis ignored)\n",
          "type": "string"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results prefixed by plus sign '+' (ascending order),\nor minus sign '-' (descending order). \nSupported values: 'name', 'modelName', 'siteName', 'featureEnabled'.\nThe default sorting is by `name`\n",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items). The values supported:\n`Max` or numeric value. If not specified, 100 records are returned per one\npage\n",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values\nare supported\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        }
      ]
    },
    {
      "name": "ListDevicesAutomaticLocationUpdatesParameters",
      "description": "Query parameters for operation listDevicesAutomaticLocationUpdates",
      "fields": [
        {
          "name": "siteId",
          "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "featureEnabled",
          "description": "Filters entries by their status of Automatic Location Updates\nfeature\n",
          "type": "boolean"
        },
        {
          "name": "modelId",
          "description": "Internal identifier of a device model for filtering. Multiple\nvalues are supported\n",
          "type": "string"
        },
        {
          "name": "compatibleOnly",
          "description": "Filters devices which support HELD protocol",
          "type": "boolean"
        },
        {
          "name": "searchString",
          "description": "Filters entries which have device name or model name containing\nthe mentioned substring. The value should be split by spaces; the range\nis 0 - 64 characters, not case-sensitive. If empty the filter is ignored\n",
          "type": "string"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results prefixed by plus sign '+' (ascending order),\nor minus sign '-' (descending order). \nSupported values: 'name', 'modelName', 'siteName', 'featureEnabled'.\nThe default sorting is by `name`\n",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items). The values supported:\n`Max` or numeric value. If not specified, 100 records are returned per one\npage\n",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare supported\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        }
      ]
    },
    {
      "name": "ListAccountPhoneNumbersParameters",
      "description": "Query parameters for operation listAccountPhoneNumbers",
      "fields": [
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        },
        {
          "name": "usageType",
          "description": "Usage type of a phone number",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "Usage type of a phone number. Numbers of 'NumberPool' and 'NumberStorage' type are not returned in \nphone number list requests\n",
            "enum": [
              "MainCompanyNumber",
              "AdditionalCompanyNumber",
              "CompanyNumber",
              "DirectNumber",
              "CompanyFaxNumber",
              "ForwardedNumber",
              "ForwardedCompanyNumber",
              "ContactCenterNumber",
              "ConferencingNumber",
              "MeetingsNumber",
              "NumberPool",
              "NumberStorage",
              "BusinessMobileNumber",
              "PartnerBusinessMobileNumber",
              "IntegrationNumber"
            ]
          }
        },
        {
          "name": "paymentType",
          "description": "Payment type. 'External' is returned for forwarded numbers\nwhich are not terminated in the RingCentral phone system\n",
          "type": "string",
          "enum": [
            "External",
            "TollFree",
            "Local",
            "BusinessMobileNumberProvider",
            "ExternalNumberProvider",
            "ExternalNumberProviderTollFree"
          ]
        },
        {
          "name": "status",
          "description": "Status of a phone number. If the value is `Normal`, the phone\nnumber is ready to be used. Otherwise, it is an external number not yet\nported to RingCentral\n",
          "type": "string",
          "enum": [
            "Normal",
            "Pending",
            "PortedIn",
            "Temporary",
            "Unknown"
          ]
        }
      ]
    },
    {
      "name": "ParsePhoneNumberParameters",
      "description": "Query parameters for operation parsePhoneNumber",
      "fields": [
        {
          "name": "homeCountry",
          "description": "ISO 3166 alpha2 code of the home country to be used if it is impossible to determine country from the number itself.\nBy default, this parameter is preset to the current user's home country or brand country if the user is undefined\n",
          "type": "string",
          "example": "US"
        },
        {
          "name": "nationalAsPriority",
          "description": "The default value is `false`. If `true`, the numbers that are\ncloser to the home country are given higher priority\n",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "ListDomesticCountriesParameters",
      "description": "Query parameters for operation listDomesticCountries",
      "fields": [
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ListStatesParameters",
      "description": "Query parameters for operation listStates",
      "fields": [
        {
          "name": "allCountries",
          "description": "If set to `true` then states of all countries are returned and\n`countryId` is ignored, even if specified. If the value is empty\nthen the parameter is ignored\n",
          "type": "boolean"
        },
        {
          "name": "countryId",
          "description": "Internal identifier of a country",
          "type": "integer",
          "format": "int64"
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        },
        {
          "name": "withPhoneNumbers",
          "description": "If `true` the list of states with phone numbers available for\nbuying is returned\n",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "ListLocationsParameters",
      "description": "Query parameters for operation listLocations",
      "fields": [
        {
          "name": "orderBy",
          "description": "Sorts results by the property specified",
          "type": "string",
          "default": "City",
          "enum": [
            "Npa",
            "City"
          ]
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        },
        {
          "name": "stateId",
          "description": "Internal identifier of a state",
          "type": "string"
        },
        {
          "name": "withNxx",
          "description": "Specifies if `nxx` codes are returned",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListPermissionsParameters",
      "description": "Query parameters for operation listPermissions",
      "fields": [
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "assignable",
          "description": "Specifies whether to return only assignable permissions",
          "type": "boolean"
        },
        {
          "name": "servicePlanId",
          "description": "Internal identifier of a service plan",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListPermissionCategoriesParameters",
      "description": "Query parameters for operation listPermissionCategories",
      "fields": [
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "servicePlanId",
          "description": "Internal identifier of a service plan",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListStandardGreetingsParameters",
      "description": "Query parameters for operation listStandardGreetings",
      "fields": [
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "type",
          "description": "Type of greeting, specifying the case when the greeting is played",
          "type": "string",
          "enum": [
            "Introductory",
            "Announcement",
            "ConnectingMessage",
            "ConnectingAudio",
            "Voicemail",
            "Unavailable",
            "HoldMusic",
            "Company"
          ]
        },
        {
          "name": "usageType",
          "description": "Usage type of greeting, specifying if the greeting is applied for user extension or department (call queue) extension",
          "type": "string",
          "enum": [
            "UserExtensionAnsweringRule",
            "ExtensionAnsweringRule",
            "DepartmentExtensionAnsweringRule",
            "CompanyAnsweringRule",
            "CompanyAfterHoursAnsweringRule",
            "VoicemailExtensionAnsweringRule",
            "AnnouncementExtensionAnsweringRule",
            "SharedLinesGroupAnsweringRule"
          ]
        }
      ]
    },
    {
      "name": "ListTimezonesParameters",
      "description": "Query parameters for operation listTimezones",
      "fields": [
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare allowed. Default value is '1'\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items). If not specified, the value is '100' by default",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ListFaxCoverPagesParameters",
      "description": "Query parameters for operation listFaxCoverPages",
      "fields": [
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ListStandardUserRoleParameters",
      "description": "Query parameters for operation listStandardUserRole",
      "fields": [
        {
          "name": "servicePlanId",
          "description": "Internal identifier of a service plan.",
          "type": "string"
        },
        {
          "name": "page",
          "description": "The result set page number (1-indexed) to return",
          "explode": false,
          "example": 1,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 1
        },
        {
          "name": "perPage",
          "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
          "explode": false,
          "example": 100,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        },
        {
          "name": "advancedPermissions",
          "description": "Specifies whether to return advanced permissions capabilities within `permissionsCapabilities` resource.\nThe default value is false.\n",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListCountriesParameters",
      "description": "Query parameters for operation listCountries",
      "fields": [
        {
          "name": "loginAllowed",
          "description": "Specifies whether the logging-in with the phone numbers of this country\nis enabled or not\n",
          "type": "boolean"
        },
        {
          "name": "signupAllowed",
          "description": "Indicates whether a signup/billing is allowed for a country. If\nnot specified all countries are returned (according to other\nspecified filters if any)\n",
          "type": "boolean"
        },
        {
          "name": "numberSelling",
          "description": "Specifies if RingCentral sells phone numbers of this country\n",
          "type": "boolean"
        },
        {
          "name": "page",
          "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates a page size (number of items)\n",
          "type": "integer",
          "format": "int32",
          "default": 100
        },
        {
          "name": "freeSoftphoneLine",
          "description": "Specifies if free phone line for softphone is available for a\ncountry or not\n",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "CaiSummarizeParameters",
      "description": "Query parameters for operation caiSummarize",
      "fields": [
        {
          "name": "webhook",
          "description": "The webhook URI to which the job response will be returned",
          "style": "form",
          "explode": true,
          "type": "string",
          "format": "uri"
        }
      ]
    },
    {
      "name": "CaiPunctuateParameters",
      "description": "Query parameters for operation caiPunctuate",
      "fields": [
        {
          "name": "webhook",
          "description": "The webhook URI to which the job response will be returned",
          "style": "form",
          "explode": true,
          "type": "string",
          "format": "uri"
        }
      ]
    },
    {
      "name": "CaiEnrollmentsListParameters",
      "description": "Query parameters for operation caiEnrollmentsList",
      "fields": [
        {
          "name": "partial",
          "description": "Indicates if partially enrolled speakers should be returned",
          "style": "form",
          "explode": true,
          "type": "boolean"
        },
        {
          "name": "perPage",
          "description": "Number of enrollments to be returned per page",
          "style": "form",
          "explode": true,
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "page",
          "description": "Page number to be returned",
          "style": "form",
          "explode": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    {
      "name": "CaiSpeechToTextParameters",
      "description": "Query parameters for operation caiSpeechToText",
      "fields": [
        {
          "name": "webhook",
          "description": "The webhook URI to which the job response will be returned",
          "style": "form",
          "explode": true,
          "type": "string",
          "format": "uri"
        }
      ]
    },
    {
      "name": "CaiSpeakerDiarizeParameters",
      "description": "Query parameters for operation caiSpeakerDiarize",
      "fields": [
        {
          "name": "webhook",
          "description": "The webhook URI to which the job response will be returned",
          "style": "form",
          "explode": true,
          "type": "string",
          "format": "uri"
        }
      ]
    },
    {
      "name": "CaiSpeakerIdentifyParameters",
      "description": "Query parameters for operation caiSpeakerIdentify",
      "fields": [
        {
          "name": "webhook",
          "description": "The webhook URI to which the job response will be returned",
          "style": "form",
          "explode": true,
          "type": "string",
          "format": "uri"
        }
      ]
    },
    {
      "name": "GetRecordingInsightsParameters",
      "description": "Query parameters for operation getRecordingInsights",
      "fields": [
        {
          "name": "insightTypes",
          "description": "AI Insight Types",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "NextSteps",
              "Transcript",
              "Summary",
              "Highlights",
              "BulletedSummary",
              "AIScore",
              "CallNotes"
            ]
          }
        }
      ]
    },
    {
      "name": "GetSessionInsightsParameters",
      "description": "Query parameters for operation getSessionInsights",
      "fields": [
        {
          "name": "insightTypes",
          "description": "AI Insight Types",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "NextSteps",
              "Transcript",
              "Summary",
              "Highlights",
              "BulletedSummary",
              "AIScore",
              "CallNotes"
            ]
          }
        }
      ]
    },
    {
      "name": "CaiAnalyzeInteractionParameters",
      "description": "Query parameters for operation caiAnalyzeInteraction",
      "fields": [
        {
          "name": "webhook",
          "description": "The webhook URI to which the job response will be returned",
          "style": "form",
          "explode": true,
          "type": "string",
          "format": "uri"
        }
      ]
    },
    {
      "name": "ScimSearchViaGet2Parameters",
      "description": "Query parameters for operation scimSearchViaGet2",
      "fields": [
        {
          "name": "filter",
          "description": "Only support 'userName' or 'email' filter expressions for now",
          "type": "string"
        },
        {
          "name": "startIndex",
          "description": "Start index (1-based)",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "count",
          "description": "Page size",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "AnalyticsCallsAggregationFetchParameters",
      "description": "Query parameters for operation analyticsCallsAggregationFetch",
      "fields": [
        {
          "name": "page",
          "description": "The current page number (positive numbers only)",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        {
          "name": "perPage",
          "description": "Number of records displayed on a page (positive numbers only, max value of 200)",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 200
        }
      ]
    },
    {
      "name": "AnalyticsCallsTimelineFetchParameters",
      "description": "Query parameters for operation analyticsCallsTimelineFetch",
      "fields": [
        {
          "name": "interval",
          "description": "Aggregation interval",
          "title": "Interval",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ]
        },
        {
          "name": "page",
          "description": "The current page number (positive numbers only)",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        {
          "name": "perPage",
          "description": "Number of records displayed on a page (positive numbers only, max value of 20)",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 20
        }
      ]
    },
    {
      "name": "ReadGlipEventsNewParameters",
      "description": "Query parameters for operation readGlipEventsNew",
      "fields": [
        {
          "name": "recordCount",
          "description": "Number of groups to be fetched by one request. The maximum value is 250, by default - 30.",
          "maximum": 250,
          "type": "integer",
          "format": "int32",
          "default": 30
        },
        {
          "name": "pageToken",
          "description": "Token of a page to be returned",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListRecentChatsNewParameters",
      "description": "Query parameters for operation listRecentChatsNew",
      "fields": [
        {
          "name": "type",
          "description": "Type of chats to be fetched. By default, all chat types are returned",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Everyone",
              "Group",
              "Personal",
              "Direct",
              "Team"
            ]
          }
        },
        {
          "name": "recordCount",
          "description": "Max number of chats to be fetched by one request (Not more than 250).",
          "maximum": 250,
          "type": "integer",
          "format": "int32",
          "default": 30
        }
      ]
    },
    {
      "name": "CreateGlipFileNewParameters",
      "description": "Query parameters for operation createGlipFileNew",
      "fields": [
        {
          "name": "groupId",
          "description": "Internal identifier of a group to which the post with attachment will be added to",
          "type": "integer",
          "format": "int64"
        },
        {
          "name": "name",
          "description": "Name of a file attached",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListGlipChatsNewParameters",
      "description": "Query parameters for operation listGlipChatsNew",
      "fields": [
        {
          "name": "type",
          "description": "Type of chats to be fetched. By default, all type of chats will be fetched",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Personal",
              "Direct",
              "Group",
              "Team",
              "Everyone"
            ]
          }
        },
        {
          "name": "recordCount",
          "description": "Number of chats to be fetched by one request. The maximum value is 250, by default - 30.",
          "maximum": 250,
          "type": "integer",
          "format": "int32",
          "default": 30
        },
        {
          "name": "pageToken",
          "description": "Pagination token.",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListChatTasksNewParameters",
      "description": "Query parameters for operation listChatTasksNew",
      "fields": [
        {
          "name": "creationTimeTo",
          "description": "The end datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, e.g. 2019-03-10T18:23:45Z\n",
          "type": "string",
          "default": "now"
        },
        {
          "name": "creationTimeFrom",
          "description": "The start datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, e.g. 2016-02-23T00:00:00\n",
          "type": "string"
        },
        {
          "name": "creatorId",
          "description": "Internal identifier of a task creator",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "status",
          "description": "Task execution status",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Pending",
              "InProgress",
              "Completed"
            ]
          }
        },
        {
          "name": "assignmentStatus",
          "description": "Task assignment status",
          "type": "string",
          "enum": [
            "Unassigned",
            "Assigned"
          ]
        },
        {
          "name": "assigneeId",
          "description": "Internal identifier of a task assignee",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "assigneeStatus",
          "description": "Task execution status by assignee(-s) specified in assigneeId",
          "type": "string",
          "enum": [
            "Pending",
            "Completed"
          ]
        },
        {
          "name": "pageToken",
          "description": "Token of the current page. If token is omitted then the first\npage should be returned\n",
          "type": "string"
        },
        {
          "name": "recordCount",
          "description": "Number of records to be returned per screen",
          "maximum": 250,
          "minimum": 1,
          "type": "integer",
          "format": "int32",
          "default": 30
        }
      ]
    },
    {
      "name": "ReadGlipPostsNewParameters",
      "description": "Query parameters for operation readGlipPostsNew",
      "fields": [
        {
          "name": "recordCount",
          "description": "Max number of posts to be fetched by one request (not more than 250)",
          "maximum": 250,
          "type": "integer",
          "format": "int32",
          "default": 30
        },
        {
          "name": "pageToken",
          "description": "Pagination token.",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListChatNotesNewParameters",
      "description": "Query parameters for operation listChatNotesNew",
      "fields": [
        {
          "name": "creationTimeTo",
          "description": "The end datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, e.g. 2019-03-10T18:23:45. The default value is\nNow.\n",
          "type": "string"
        },
        {
          "name": "creationTimeFrom",
          "description": "The start datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone\n",
          "type": "string"
        },
        {
          "name": "creatorId",
          "description": "Internal identifier of the user that created the note. Multiple\nvalues are supported\n",
          "type": "string"
        },
        {
          "name": "status",
          "description": "Status of notes to be fetched; if not specified all notes are\nfetched by default.\n",
          "type": "string",
          "enum": [
            "Active",
            "Draft"
          ]
        },
        {
          "name": "pageToken",
          "description": "Pagination token",
          "type": "string"
        },
        {
          "name": "recordCount",
          "description": "Max number of notes to be fetched by one request; the value range is 1-250.",
          "maximum": 250,
          "type": "integer",
          "format": "int32",
          "default": 30
        }
      ]
    },
    {
      "name": "ListGlipConversationsNewParameters",
      "description": "Query parameters for operation listGlipConversationsNew",
      "fields": [
        {
          "name": "recordCount",
          "description": "Number of conversations to be fetched by one request. The maximum value is 250, by default - 30",
          "maximum": 250,
          "type": "integer",
          "format": "int32",
          "default": 30
        },
        {
          "name": "pageToken",
          "description": "Pagination token.",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListDataExportTasksNewParameters",
      "description": "Query parameters for operation listDataExportTasksNew",
      "fields": [
        {
          "name": "status",
          "description": "Status of the task(s) to be returned. Multiple values are supported",
          "type": "string",
          "enum": [
            "Accepted",
            "InProgress",
            "Completed",
            "Failed",
            "Expired"
          ]
        },
        {
          "name": "page",
          "description": "Page number to be retrieved; value range is > 0",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Number of records to be returned per page; value range is 1 - 250",
          "type": "integer",
          "format": "int32",
          "default": 30
        }
      ]
    },
    {
      "name": "ListGlipTeamsNewParameters",
      "description": "Query parameters for operation listGlipTeamsNew",
      "fields": [
        {
          "name": "recordCount",
          "description": "Number of teams to be fetched by one request. The maximum value is 250, by default - 30",
          "maximum": 250,
          "type": "integer",
          "format": "int32",
          "default": 30
        },
        {
          "name": "pageToken",
          "description": "Pagination token.",
          "type": "string"
        }
      ]
    },
    {
      "name": "PatchNoteNewParameters",
      "description": "Query parameters for operation patchNoteNew",
      "fields": [
        {
          "name": "releaseLock",
          "description": "If true then note lock (if any) will be released upon request",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "ListFavoriteChatsNewParameters",
      "description": "Query parameters for operation listFavoriteChatsNew",
      "fields": [
        {
          "name": "recordCount",
          "description": "Max number of chats to be fetched by one request (Not more than 250).",
          "maximum": 250,
          "type": "integer",
          "format": "int32",
          "default": 30
        }
      ]
    },
    {
      "name": "SendWelcomeEmailV2Request",
      "description": "Request body for operation sendWelcomeEmailV2",
      "fields": [
        {
          "type": "string",
          "format": "email",
          "example": "user@email.com",
          "name": "email"
        }
      ]
    },
    {
      "name": "CreateIVRPromptRequest",
      "description": "Request body for operation createIVRPrompt",
      "fields": [
        {
          "description": "Audio file that will be used as a prompt. Attachment cannot be empty, only audio files are supported",
          "name": "attachment",
          "required": true,
          "$ref": "Attachment"
        },
        {
          "type": "string",
          "description": "Description of file contents.",
          "name": "name",
          "required": false
        }
      ]
    },
    {
      "name": "CreateCompanyGreetingRequest",
      "description": "Request body for operation createCompanyGreeting",
      "fields": [
        {
          "type": "string",
          "description": "Type of greeting, specifying the case when the greeting\nis played.\n",
          "enum": [
            "Company",
            "StartRecording",
            "StopRecording",
            "AutomaticRecording",
            "TemplateGreeting"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a language. See Get Language\nList\n",
          "name": "languageId",
          "required": false
        },
        {
          "description": "Media file to upload",
          "name": "binary",
          "required": true,
          "$ref": "Attachment"
        },
        {
          "$ref": "GreetingAnsweringRuleId",
          "name": "answeringRule",
          "required": false
        }
      ]
    },
    {
      "name": "CreateUserMeetingProfileImageRequest",
      "description": "Request body for operation createUserMeetingProfileImage",
      "fields": [
        {
          "description": "Profile image file size cannot exceed 2Mb. Supported formats are: JPG/JPEG, GIF and PNG",
          "name": "profilePic",
          "required": true,
          "$ref": "Attachment"
        }
      ]
    },
    {
      "name": "UpdateUserProfileImageRequest",
      "description": "Request body for operation updateUserProfileImage",
      "fields": [
        {
          "name": "image",
          "$ref": "Attachment"
        }
      ]
    },
    {
      "name": "CreateUserProfileImageRequest",
      "description": "Request body for operation createUserProfileImage",
      "fields": [
        {
          "name": "image",
          "required": true,
          "$ref": "Attachment"
        }
      ]
    },
    {
      "name": "CreateFaxMessageRequest",
      "description": "Request body for operation createFaxMessage",
      "fields": [
        {
          "type": "string",
          "description": "Fax only. Resolution of a fax message. 'High' for black and\nwhite image scanned at 200 dpi, 'Low' for black and white image scanned\nat 100 dpi\n",
          "enum": [
            "High",
            "Low"
          ],
          "name": "faxResolution",
          "required": false
        },
        {
          "type": "array",
          "description": "Recipient's phone number(s)",
          "items": {
            "$ref": "FaxReceiver"
          },
          "name": "to",
          "required": true
        },
        {
          "type": "string",
          "description": "Timestamp to send a fax at. If not specified, current or the past\na fax message is sent immediately\n",
          "format": "date-time",
          "name": "sendTime",
          "required": false
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "isoCode",
          "required": false
        },
        {
          "type": "integer",
          "description": "Cover page identifier. If `coverIndex` is set to '0' (zero) a cover page\nis not attached. For a list of available cover page identifiers (1-13)\nplease call the Fax Cover Pages method. If not specified, the default cover\npage is attached (which is configured in 'Outbound Fax Settings')\n",
          "format": "int32",
          "name": "coverIndex",
          "required": false
        },
        {
          "type": "string",
          "description": "Cover page text, entered by a fax sender and printed\non a cover page. Maximum length is limited to 1024 symbols\n",
          "maxLength": 1024,
          "name": "coverPageText",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "description": "File to upload",
            "$ref": "Attachment"
          },
          "name": "attachments",
          "required": true
        }
      ]
    },
    {
      "name": "CreateCustomUserGreetingRequest",
      "description": "Request body for operation createCustomUserGreeting",
      "fields": [
        {
          "type": "string",
          "description": "Type of greeting, specifying the case when the greeting is played.",
          "enum": [
            "Introductory",
            "Announcement",
            "ConnectingMessage",
            "ConnectingAudio",
            "Voicemail",
            "Unavailable",
            "HoldMusic",
            "TemplateGreeting"
          ],
          "name": "type",
          "required": true
        },
        {
          "description": "Media file to upload",
          "name": "binary",
          "required": true,
          "$ref": "Attachment"
        },
        {
          "$ref": "GreetingAnsweringRuleId",
          "name": "answeringRule",
          "required": false
        }
      ]
    },
    {
      "name": "CreateGlipFileNewRequest",
      "description": "Request body for operation createGlipFileNew",
      "fields": [
        {
          "description": "The file (binary or multipart/form-data) to upload",
          "name": "body",
          "required": true,
          "$ref": "Attachment"
        }
      ]
    },
    {
      "name": "SubscriptionListResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "array",
          "minItems": 0,
          "maxItems": 20,
          "items": {
            "$ref": "SubscriptionInfo"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "MobileDeliveryMode",
      "fields": [
        {
          "type": "string",
          "description": "The transport type for this subscription, or the channel by which an app should be notified of an event",
          "enum": [
            "RC/APNS",
            "RC/GCM"
          ],
          "name": "transportType",
          "required": true
        },
        {
          "type": "string",
          "description": "Certificate name for mobile notification transports",
          "name": "certificateName",
          "required": true
        },
        {
          "type": "string",
          "description": "Device instance ID for mobile notification transports",
          "example": "38b062ae-85f8-4dcc-8734-04d3f7393d42",
          "name": "registrationId",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Specifies if notification messages will be encrypted or not.",
          "enum": [
            false
          ],
          "readOnly": true,
          "name": "encryption",
          "required": true
        }
      ]
    },
    {
      "name": "MobileDeliveryModeRequest",
      "fields": [
        {
          "type": "string",
          "description": "The transport type for this subscription, or the channel by which an app should be notified of an event",
          "enum": [
            "RC/APNS",
            "RC/GCM"
          ],
          "name": "transportType",
          "required": true
        },
        {
          "type": "string",
          "description": "Certificate name for mobile notification transports",
          "name": "certificateName",
          "required": true
        },
        {
          "type": "string",
          "description": "Device instance ID for mobile notification transports",
          "example": "38b062ae-85f8-4dcc-8734-04d3f7393d42",
          "name": "registrationId",
          "required": true
        }
      ]
    },
    {
      "name": "ParameterizedErrorResponseModel",
      "description": "Standard error response which may include parameterized errors",
      "fields": [
        {
          "type": "array",
          "description": "The array of errors (there will be just one in the most of the cases)",
          "minItems": 1,
          "items": {
            "$ref": "ApiErrorWithParameter"
          },
          "name": "errors",
          "required": true
        }
      ]
    },
    {
      "name": "ApiErrorResponseModel",
      "description": "Standard error response model which is returned in case of any unsuccessful operation",
      "fields": [
        {
          "type": "array",
          "description": "The array of errors (there will be just one in the most of the cases)",
          "minItems": 1,
          "items": {
            "$ref": "ApiError"
          },
          "name": "errors",
          "required": true
        }
      ]
    },
    {
      "name": "WebhookDeliveryModeRequest",
      "fields": [
        {
          "type": "string",
          "description": "The transport type for this subscription, or the channel by which an app should be notified of an event",
          "enum": [
            "WebHook"
          ],
          "name": "transportType",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "The URL to which notifications should be delivered. This is only applicable for the `WebHook` transport type, for which it is a required field.\n",
          "example": "https://acme.com/myservice/webhook",
          "name": "address",
          "required": true
        },
        {
          "type": "string",
          "description": "An optional validation token used to verify the authenticity of the incoming webhook. Applicable only for the `WebHook` transport type.",
          "writeOnly": true,
          "name": "verificationToken",
          "required": false
        }
      ]
    },
    {
      "name": "ApiError",
      "description": "Generalized API error structure suitable for any error type",
      "fields": [
        {
          "type": "string",
          "description": "Logical error code (typically, 3 letters followed with number, dash separated)",
          "example": "XXX-123",
          "name": "errorCode",
          "required": true
        },
        {
          "type": "string",
          "description": "User-friendly error message",
          "example": "Something went wrong",
          "name": "message",
          "required": true
        }
      ]
    },
    {
      "name": "WebSocketDeliveryMode",
      "fields": [
        {
          "type": "string",
          "description": "The transport type for this subscription, or the channel by which an app should be notified of an event",
          "enum": [
            "WebSocket"
          ],
          "name": "transportType",
          "required": true
        }
      ]
    },
    {
      "name": "DisabledFilterInfo",
      "fields": [
        {
          "type": "string",
          "description": "Event filter that is disabled for the user",
          "name": "filter",
          "required": true
        },
        {
          "type": "string",
          "description": "Reason why the filter is disabled for the user",
          "name": "reason",
          "required": true
        },
        {
          "type": "string",
          "description": "Error message",
          "name": "message",
          "required": false
        }
      ]
    },
    {
      "name": "PubNubDeliveryMode",
      "fields": [
        {
          "type": "string",
          "description": "The transport type for this subscription, or the channel by which an app should be notified of an event",
          "enum": [
            "PubNub"
          ],
          "name": "transportType",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Optional. Specifies if notification messages will be encrypted\nor not. Please note that for some event filters (e.g. presence) encryption is mandatory and\n`false` value provided by caller will be ignored.\n",
          "default": false,
          "name": "encryption",
          "required": true
        },
        {
          "type": "string",
          "description": "PubNub channel name\n",
          "example": "54770517599294_6dda849e",
          "readOnly": true,
          "name": "address",
          "required": true
        },
        {
          "type": "string",
          "description": "PubNub credential required to subscribe to the channel",
          "readOnly": true,
          "name": "subscriberKey",
          "required": true
        },
        {
          "type": "string",
          "description": "PubNub credential required to subscribe to the channel",
          "readOnly": true,
          "name": "secretKey",
          "required": true
        },
        {
          "type": "string",
          "description": "(Only for a \"PubNub\" transport, returned only if `encryption` is `true`)\nEncryption algorithm used\n",
          "enum": [
            "AES"
          ],
          "readOnly": true,
          "name": "encryptionAlgorithm",
          "required": false
        },
        {
          "type": "string",
          "description": "(Only for a \"PubNub\" transport, returned only if `encryption` is `true`)\nCryptographic key to decrypt PubNub notification messages\n",
          "readOnly": true,
          "name": "encryptionKey",
          "required": false
        }
      ]
    },
    {
      "name": "PubNubDeliveryModeRequest",
      "fields": [
        {
          "type": "string",
          "description": "The transport type for this subscription, or the channel by which an app should be notified of an event",
          "enum": [
            "PubNub"
          ],
          "name": "transportType",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Optional. Specifies if notification messages will be encrypted\nor not. Please note that for some event filters (e.g. presence) encryption is mandatory and\n`false` value provided by caller will be ignored.\n",
          "default": false,
          "name": "encryption",
          "required": false
        }
      ]
    },
    {
      "name": "UpdateSubscriptionRequest",
      "fields": [
        {
          "type": "array",
          "description": "The list of event filters corresponding to events the user is subscribed to",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1
          },
          "name": "eventFilters",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": 1200,
          "description": "Subscription lifetime in seconds. The maximum subscription lifetime depends upon the specified `transportType`:\n\n| Transport type      | Maximum permitted lifetime     |\n| ------------------- | ------------------------------ |\n| `WebHook`           | 315360000 seconds (10 years)   |\n| `RC/APNS`, `RC/GSM` | 7776000 seconds (90 days)      |\n| `PubNub`            | 900 seconds (15 minutes)       |\n| `WebSocket`         | n/a (the parameter is ignored) |\n",
          "name": "expiresIn",
          "required": false
        }
      ]
    },
    {
      "name": "CreateWebhookSubscriptionRequest",
      "fields": [
        {
          "type": "array",
          "description": "The list of event filters corresponding to events the user is subscribed to",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1
          },
          "name": "eventFilters",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": 1200,
          "description": "Subscription lifetime in seconds. The maximum subscription lifetime depends upon the specified `transportType`:\n\n| Transport type      | Maximum permitted lifetime     |\n| ------------------- | ------------------------------ |\n| `WebHook`           | 315360000 seconds (10 years)   |\n| `RC/APNS`, `RC/GSM` | 7776000 seconds (90 days)      |\n| `PubNub`            | 900 seconds (15 minutes)       |\n| `WebSocket`         | n/a (the parameter is ignored) |\n",
          "name": "expiresIn",
          "required": false
        },
        {
          "$ref": "WebhookDeliveryModeRequest",
          "name": "deliveryMode",
          "required": true
        }
      ]
    },
    {
      "name": "SubscriptionInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a subscription resource",
          "readOnly": true,
          "name": "uri",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "readOnly": true,
          "example": "95fecfc9-9cdc-4e94-a78a-89fd65889d37",
          "name": "id",
          "required": true
        },
        {
          "type": "array",
          "description": "The list of event filter names corresponding to events the user is subscribed to",
          "minItems": 0,
          "items": {
            "type": "string",
            "minLength": 1
          },
          "name": "eventFilters",
          "required": true
        },
        {
          "type": "array",
          "minItems": 0,
          "description": "The list of event filter names corresponding to events the user is not subscribed to due to\ncertain limitations\n",
          "items": {
            "$ref": "DisabledFilterInfo"
          },
          "readOnly": true,
          "name": "disabledFilters",
          "required": false
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Subscription expiration time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n",
          "readOnly": true,
          "name": "expirationTime",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "Subscription lifetime in seconds",
          "name": "expiresIn",
          "required": false
        },
        {
          "type": "string",
          "description": "Subscription status",
          "enum": [
            "Active",
            "Blacklisted"
          ],
          "readOnly": true,
          "name": "status",
          "required": true
        },
        {
          "type": "string",
          "description": "Subscription creation time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534*\n",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "$ref": "NotificationDeliveryMode",
          "name": "deliveryMode",
          "required": true
        },
        {
          "description": "Returned if a WebHook subscription is blacklisted",
          "readOnly": true,
          "$ref": "SubscriptionInfoBlacklistedData",
          "name": "blacklistedData",
          "required": false
        }
      ]
    },
    {
      "name": "WebhookDeliveryMode",
      "fields": [
        {
          "type": "string",
          "description": "The transport type for this subscription, or the channel by which an app should be notified of an event",
          "enum": [
            "WebHook"
          ],
          "name": "transportType",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "The URL to which notifications should be delivered. This is only applicable for the `WebHook` transport type, for which it is a required field.\n",
          "example": "https://acme.com/myservice/webhook",
          "name": "address",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Specifies if notification messages will be encrypted or not.",
          "enum": [
            false
          ],
          "readOnly": true,
          "name": "encryption",
          "required": true
        }
      ]
    },
    {
      "name": "NotificationDeliveryMode",
      "description": "Notification delivery transport information",
      "fields": [
        {
          "type": "string",
          "description": "The transport type for this subscription, or the channel by which an app should be notified of an event",
          "enum": [
            "WebHook",
            "RC/APNS",
            "RC/GCM",
            "PubNub",
            "WebSocket",
            "Internal"
          ],
          "name": "transportType",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "PubNub channel name\n",
          "example": "54770517599294_6dda849e",
          "readOnly": true,
          "name": "address",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Optional. Specifies if notification messages will be encrypted\nor not. Please note that for some event filters (e.g. presence) encryption is mandatory and\n`false` value provided by caller will be ignored.\n",
          "enum": [
            false
          ],
          "readOnly": true,
          "default": false,
          "name": "encryption",
          "required": true
        },
        {
          "type": "string",
          "description": "Certificate name for mobile notification transports",
          "name": "certificateName",
          "required": true
        },
        {
          "type": "string",
          "description": "Device instance ID for mobile notification transports",
          "example": "38b062ae-85f8-4dcc-8734-04d3f7393d42",
          "name": "registrationId",
          "required": true
        },
        {
          "type": "string",
          "description": "PubNub credential required to subscribe to the channel",
          "readOnly": true,
          "name": "subscriberKey",
          "required": true
        },
        {
          "type": "string",
          "description": "PubNub credential required to subscribe to the channel",
          "readOnly": true,
          "name": "secretKey",
          "required": true
        },
        {
          "type": "string",
          "description": "(Only for a \"PubNub\" transport, returned only if `encryption` is `true`)\nEncryption algorithm used\n",
          "enum": [
            "AES"
          ],
          "readOnly": true,
          "name": "encryptionAlgorithm",
          "required": false
        },
        {
          "type": "string",
          "description": "(Only for a \"PubNub\" transport, returned only if `encryption` is `true`)\nCryptographic key to decrypt PubNub notification messages\n",
          "readOnly": true,
          "name": "encryptionKey",
          "required": false
        },
        {
          "type": "string",
          "description": "The name of internal channel (defined in the backend service configuration) to deliver notifications through.\n",
          "example": "my-server-channel",
          "name": "configName",
          "required": true
        }
      ]
    },
    {
      "name": "InternalDeliveryMode",
      "fields": [
        {
          "type": "string",
          "description": "The transport type for this subscription, or the channel by which an app should be notified of an event",
          "enum": [
            "Internal"
          ],
          "name": "transportType",
          "required": true
        },
        {
          "type": "string",
          "description": "The name of internal channel (defined in the backend service configuration) to deliver notifications through.\n",
          "example": "my-server-channel",
          "name": "configName",
          "required": true
        }
      ]
    },
    {
      "name": "ApiErrorWithParameter",
      "description": "Generalized API error structure suitable for any error type",
      "fields": [
        {
          "type": "string",
          "description": "Logical error code (typically, 3 letters followed with number, dash separated)",
          "example": "XXX-123",
          "name": "errorCode",
          "required": true
        },
        {
          "type": "string",
          "description": "User-friendly error message",
          "example": "Something went wrong",
          "name": "message",
          "required": true
        },
        {
          "type": "string",
          "description": "The name of the API parameter/attribute which caused the error",
          "name": "parameterName",
          "required": false
        },
        {
          "type": "string",
          "description": "The value of the API parameter/attribute which caused the error",
          "name": "parameterValue",
          "required": false
        }
      ]
    },
    {
      "name": "RcwLinkedUserModel",
      "description": "The internal IDs of RC-authenticated users.",
      "fields": [
        {
          "$ref": "RcwDomainUserModel",
          "name": "linkedUser"
        }
      ]
    },
    {
      "name": "RcwImmutableResourceIdModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id"
        }
      ]
    },
    {
      "name": "RcwDomainUserModel",
      "fields": [
        {
          "type": "string",
          "maxLength": 256,
          "description": "User ID",
          "name": "userId",
          "required": true
        },
        {
          "type": "string",
          "maxLength": 256,
          "description": "Account ID",
          "name": "accountId",
          "required": true
        },
        {
          "type": "string",
          "description": "Identity domain",
          "enum": [
            "pbx",
            "ilm"
          ],
          "default": "pbx",
          "name": "domain",
          "required": true
        }
      ]
    },
    {
      "name": "RcwBaseContactModel",
      "fields": [
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName"
        }
      ]
    },
    {
      "name": "RcwResourceBaseModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        }
      ]
    },
    {
      "name": "RcwUserModel",
      "fields": [
        {
          "type": "string",
          "maxLength": 256,
          "description": "User ID",
          "name": "userId",
          "required": true
        },
        {
          "type": "string",
          "maxLength": 256,
          "description": "Account ID",
          "name": "accountId",
          "required": true
        }
      ]
    },
    {
      "name": "WebinarResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Webinar title",
          "maxLength": 512,
          "minLength": 1,
          "example": "All-Hands Webinar",
          "name": "title",
          "required": true
        },
        {
          "type": "string",
          "description": "User-friendly description of the Webinar",
          "maxLength": 4096,
          "minLength": 0,
          "example": "Quarterly All-hands event to present recent news about our company to employees",
          "default": "",
          "name": "description",
          "required": false
        },
        {
          "$ref": "WebinarSettingsModel",
          "name": "settings",
          "required": false
        },
        {
          "$ref": "HostModel",
          "name": "host",
          "required": true
        }
      ]
    },
    {
      "name": "WebinarTitleModel",
      "fields": [
        {
          "type": "string",
          "description": "Webinar title",
          "maxLength": 512,
          "minLength": 1,
          "example": "All-Hands Webinar",
          "name": "title",
          "required": true
        },
        {
          "type": "string",
          "description": "User-friendly description of the Webinar",
          "maxLength": 4096,
          "minLength": 0,
          "example": "Quarterly All-hands event to present recent news about our company to employees",
          "default": "",
          "name": "description",
          "required": false
        }
      ]
    },
    {
      "name": "HostModel",
      "description": "The internal IDs of RC-authenticated users.",
      "fields": [
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName"
        },
        {
          "$ref": "RcwDomainUserModel",
          "name": "linkedUser"
        }
      ]
    },
    {
      "name": "WebinarSettingsModel",
      "description": "Various settings which define behavior of this Webinar's Sessions",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates if recording is enabled (if false all other recording settings cannot be enabled)",
          "default": true,
          "name": "recordingEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if recording should start automatically when a Webinar goes live",
          "default": true,
          "name": "autoRecord"
        },
        {
          "type": "boolean",
          "description": "Indicates if recording can be shared",
          "readOnly": true,
          "default": true,
          "name": "recordingSharingEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if recording can be downloaded",
          "readOnly": true,
          "default": true,
          "name": "recordingDownloadEnabled"
        },
        {
          "deprecated": true,
          "type": "boolean",
          "description": "DEPRECATED AND REPLACED BY 'pastSessionDeletionEnabled' setting.\nIndicates if recording can be deleted (this setting is read-only at webinar/session level)\n",
          "readOnly": true,
          "default": false,
          "name": "recordingDeletionEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if deletion of past session along with its artifacts is enabled for host.\nThis setting is read-only at webinar level\n",
          "readOnly": true,
          "default": false,
          "name": "pastSessionDeletionEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if Panelists should be places to waiting room after joining",
          "default": false,
          "name": "panelistWaitingRoom"
        },
        {
          "type": "boolean",
          "description": "Indicates if Panelists' video should be 'on' by default",
          "default": true,
          "name": "panelistVideoEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if Panelists' screen sharing should be 'on' by default",
          "default": true,
          "name": "panelistScreenSharingEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if Panelists can mute/unmute themselves by default",
          "default": true,
          "name": "panelistMuteControlEnabled"
        },
        {
          "type": "string",
          "description": "Indicates if Panelists have to be authenticated users",
          "enum": [
            "Guest",
            "AuthenticatedUser",
            "AuthenticatedCoworker"
          ],
          "default": "AuthenticatedCoworker",
          "name": "panelistAuthentication"
        },
        {
          "type": "string",
          "description": "Indicates if attendees have to be authenticated users",
          "enum": [
            "Guest",
            "AuthenticatedUser",
            "AuthenticatedCoworker"
          ],
          "default": "AuthenticatedCoworker",
          "name": "attendeeAuthentication"
        },
        {
          "type": "string",
          "description": "Indicates who can access webinar artifacts. Applies to recordings at present.\nApplicable to other artifacts such as Q&A, Polls in the future.\n",
          "enum": [
            "Guest",
            "AuthenticatedUser",
            "AuthenticatedCoworker"
          ],
          "default": "AuthenticatedUser",
          "name": "artifactsAccessAuthentication"
        },
        {
          "type": "boolean",
          "description": "Indicates if dial-in PSTN audio option is enabled by default",
          "default": false,
          "name": "pstnEnabled"
        },
        {
          "type": "string",
          "description": "Webinar password",
          "name": "password"
        },
        {
          "type": "boolean",
          "description": "Indicates if Q&A is enabled for the webinar (if false all other Q&A settings cannot be enabled)",
          "default": true,
          "name": "qnaEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if anonymous Q&A is enabled for the webinar",
          "default": true,
          "name": "qnaAnonymousEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicate if the moderated Q&A enabled for webinar",
          "default": true,
          "name": "moderatedQnaEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if polls are enabled for the webinar (if false all other polls settings cannot be enabled)",
          "default": true,
          "name": "pollsEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if anonymous poll answers are enabled for the webinar",
          "default": true,
          "name": "pollsAnonymousEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if a registration is enabled for the webinar (if false all other registration settings are ignored)",
          "default": false,
          "name": "registrationEnabled"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "URI to redirect users after the webinar",
          "example": "https://www.acme.com/thankyou",
          "name": "postWebinarRedirectUri"
        },
        {
          "type": "boolean",
          "description": "Indicates if livestreaming to external streaming provider is enabled",
          "readOnly": true,
          "default": true,
          "name": "externalLivestreamEnabled"
        }
      ]
    },
    {
      "name": "WebinarHostModel",
      "fields": [
        {
          "$ref": "HostModel",
          "name": "host",
          "required": true
        }
      ]
    },
    {
      "name": "SessionResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Session start time. If a session hasn't been started this fields should be set to \"scheduledStartTime\"\n",
          "format": "date-time",
          "name": "startTime",
          "required": false
        },
        {
          "type": "string",
          "description": "Session end time. If a session hasn't been finished this fields should be set to (\"startTime\"+\"scheduledDuration\")\n",
          "format": "date-time",
          "name": "endTime",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Session duration in seconds rounded up (returned if 'startTime' and 'endTime' are not empty)",
          "example": 3600,
          "name": "duration",
          "required": false
        },
        {
          "type": "string",
          "description": "Session title. If blank - derived from webinar title.",
          "maxLength": 512,
          "example": "Live Broadcasting US",
          "name": "title",
          "required": false
        },
        {
          "type": "string",
          "maxLength": 4096,
          "description": "User-friendly description of the Session. If blank - derived from webinar title.",
          "example": "Live session for US-based participants",
          "name": "description",
          "required": false
        },
        {
          "type": "string",
          "description": "Session scheduled start time.",
          "format": "date-time",
          "name": "scheduledStartTime",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The scheduled duration of the Session in seconds.",
          "example": 1800,
          "name": "scheduledDuration",
          "required": false
        },
        {
          "type": "string",
          "description": "IANA-compatible time zone name (see https://www.iana.org/time-zones).",
          "example": "America/New_York",
          "name": "timeZone",
          "required": false
        },
        {
          "type": "string",
          "description": "Session locale code. Can't be blank or null.",
          "example": "en-US",
          "default": "en-US",
          "name": "localeCode",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The time offset (positive, in seconds) indicating how much in advance\n(comparing to \"scheduledStartTime\") panel members should join for the pre-webinar team sync\n",
          "minimum": 0,
          "default": 0,
          "example": 900,
          "name": "panelJoinTimeOffset",
          "required": false
        },
        {
          "type": "string",
          "description": "The time when broadcasting started.",
          "format": "date-time",
          "name": "broadcastingStartTime",
          "required": false
        },
        {
          "type": "string",
          "description": "The time when broadcasting ended.",
          "format": "date-time",
          "name": "broadcastingEndTime",
          "required": false
        },
        {
          "type": "string",
          "description": "Webinar session status",
          "enum": [
            "Scheduled",
            "Active",
            "Finished"
          ],
          "example": "Finished",
          "name": "status",
          "required": false
        },
        {
          "type": "string",
          "description": "Session runtime status (for 'Active' Sessions only).\nIt is omitted (or null) if the status is not Active\n",
          "enum": [
            "Idle",
            "Practice",
            "GoingLive",
            "Live",
            "Break",
            "Debrief"
          ],
          "name": "runtimeStatus",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The number of participants (of all roles) who joined the webinar",
          "example": 150,
          "name": "participantCount",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The number of attendees who joined the webinar",
          "example": 145,
          "name": "attendeeCount",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Unique number of participants (of all roles) who joined the webinar",
          "example": 140,
          "name": "uniqueParticipantCount",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Unique number of attendees who joined the webinar",
          "example": 135,
          "name": "uniqueAttendeeCount",
          "required": false
        },
        {
          "type": "string",
          "description": "The RCV bridge id",
          "example": "839874770",
          "name": "videoBridgeId",
          "required": false
        },
        {
          "$ref": "RecordingExtendedModel",
          "name": "recording",
          "required": false
        },
        {
          "type": "array",
          "minItems": 0,
          "description": "The list of livestreams configured for the session",
          "items": {
            "$ref": "SessionLivestreamMinimalModel"
          },
          "name": "livestreams",
          "required": false
        }
      ]
    },
    {
      "name": "RecordingSharingModel",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "description": "Shared URI of the recording. If a password was required to join a webinar, the URI should contain the password encoded",
          "example": "https://v.ringcentral.com/w/a/recording/de7yd8ew7yfsdfjh899843rgj?pw=a1b2c3d4",
          "name": "recordingSharedUri",
          "required": true
        }
      ]
    },
    {
      "name": "SessionLivestreamMinimalModel",
      "fields": [
        {
          "type": "string",
          "description": "Identifier of the livestream",
          "example": "40740e06-4eec-4458-a86e-8578e192274q",
          "name": "livestreamId",
          "required": true
        },
        {
          "type": "string",
          "description": "Name of the livestreaming service provider",
          "example": "YoutTube",
          "name": "serviceProvider",
          "required": true
        },
        {
          "type": "string",
          "description": "Last known state of the livestream as notified by Webinar Livestreaming Controller Service (WLCS).\nValue may not be consistent with latest state, especially for livestream associated with OAuth2.0 based service providers.\nThus, state must be obtained directly from WLCS\n",
          "enum": [
            "Initialized",
            "Authorized",
            "Configured",
            "PublishSetup",
            "Publishing",
            "Paused",
            "Error",
            "Break",
            "Deleted",
            "Completed"
          ],
          "example": "Initialized",
          "name": "livestreamStatus",
          "required": true
        },
        {
          "type": "string",
          "description": "Last known state of the livestream as notified by Webinar Livestreaming Controller Service (WLCS).\nValue may not be consistent with latest state, especially for livestream associated with OAuth2.0 based service providers.\nThus, state must be obtained directly from WLCS\n",
          "enum": [
            "Initialized",
            "Authorized",
            "Configured",
            "PublishSetup",
            "Publishing",
            "Paused",
            "Error",
            "Break",
            "Deleted",
            "Completed"
          ],
          "example": "Initialized",
          "name": "previousLivestreamStatus",
          "required": false
        },
        {
          "type": "string",
          "description": "Time at which the session started to publish media to livestream service provider.",
          "format": "date-time",
          "name": "livestreamStartTime",
          "required": false
        },
        {
          "$ref": "ApiError",
          "name": "error",
          "required": false
        }
      ]
    },
    {
      "name": "RecordingExtendedModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Recording status",
          "enum": [
            "Processing",
            "Available",
            "Failed",
            "Purged"
          ],
          "example": "Available",
          "name": "status",
          "required": true
        },
        {
          "$ref": "ApiError",
          "name": "failureReason",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 1,
          "description": "Recording duration in seconds",
          "example": 3600,
          "name": "duration",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if Host or Admin has shared a recording.\nCan be set to true only then recording status is 'Available'.\n",
          "example": true,
          "name": "shared",
          "required": false
        },
        {
          "type": "string",
          "nullable": true,
          "format": "date-time",
          "description": "Time after which recording shared link cannot be accessed by recipients.",
          "example": "2023-10-01T10:05:00.000Z",
          "name": "sharedUriExpirationTime",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "description": "Shared URI of the recording. If a password was required to join a webinar, the URI should contain the password encoded",
          "example": "https://v.ringcentral.com/w/a/recording/de7yd8ew7yfsdfjh899843rgj?pw=a1b2c3d4",
          "name": "recordingSharedUri",
          "required": true
        }
      ]
    },
    {
      "name": "SessionLivestreamListModel",
      "fields": [
        {
          "type": "array",
          "minItems": 0,
          "description": "The list of livestreams configured for the session",
          "items": {
            "$ref": "SessionLivestreamMinimalModel"
          },
          "name": "livestreams"
        }
      ]
    },
    {
      "name": "SessionGeneratedModel",
      "fields": [
        {
          "type": "string",
          "description": "The RCV bridge id",
          "example": "839874770",
          "name": "videoBridgeId"
        }
      ]
    },
    {
      "name": "SessionBaseModel",
      "fields": [
        {
          "type": "string",
          "description": "Session start time. If a session hasn't been started this fields should be set to \"scheduledStartTime\"\n",
          "format": "date-time",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Session end time. If a session hasn't been finished this fields should be set to (\"startTime\"+\"scheduledDuration\")\n",
          "format": "date-time",
          "name": "endTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Session duration in seconds rounded up (returned if 'startTime' and 'endTime' are not empty)",
          "example": 3600,
          "name": "duration"
        },
        {
          "type": "string",
          "description": "Session title. If blank - derived from webinar title.",
          "maxLength": 512,
          "example": "Live Broadcasting US",
          "name": "title"
        },
        {
          "type": "string",
          "maxLength": 4096,
          "description": "User-friendly description of the Session. If blank - derived from webinar title.",
          "example": "Live session for US-based participants",
          "name": "description"
        },
        {
          "type": "string",
          "description": "Session scheduled start time.",
          "format": "date-time",
          "name": "scheduledStartTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The scheduled duration of the Session in seconds.",
          "example": 1800,
          "name": "scheduledDuration"
        },
        {
          "type": "string",
          "description": "IANA-compatible time zone name (see https://www.iana.org/time-zones).",
          "example": "America/New_York",
          "name": "timeZone"
        },
        {
          "type": "string",
          "description": "Session locale code. Can't be blank or null.",
          "example": "en-US",
          "default": "en-US",
          "name": "localeCode"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The time offset (positive, in seconds) indicating how much in advance\n(comparing to \"scheduledStartTime\") panel members should join for the pre-webinar team sync\n",
          "minimum": 0,
          "default": 0,
          "example": 900,
          "name": "panelJoinTimeOffset"
        },
        {
          "type": "string",
          "description": "The time when broadcasting started.",
          "format": "date-time",
          "name": "broadcastingStartTime"
        },
        {
          "type": "string",
          "description": "The time when broadcasting ended.",
          "format": "date-time",
          "name": "broadcastingEndTime"
        },
        {
          "type": "string",
          "description": "Webinar session status",
          "enum": [
            "Scheduled",
            "Active",
            "Finished"
          ],
          "example": "Finished",
          "name": "status"
        },
        {
          "type": "string",
          "description": "Session runtime status (for 'Active' Sessions only).\nIt is omitted (or null) if the status is not Active\n",
          "enum": [
            "Idle",
            "Practice",
            "GoingLive",
            "Live",
            "Break",
            "Debrief"
          ],
          "name": "runtimeStatus"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The number of participants (of all roles) who joined the webinar",
          "example": 150,
          "name": "participantCount"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The number of attendees who joined the webinar",
          "example": 145,
          "name": "attendeeCount"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Unique number of participants (of all roles) who joined the webinar",
          "example": 140,
          "name": "uniqueParticipantCount"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Unique number of attendees who joined the webinar",
          "example": 135,
          "name": "uniqueAttendeeCount"
        }
      ]
    },
    {
      "name": "SessionRecordingExtendedModel",
      "fields": [
        {
          "$ref": "RecordingExtendedModel",
          "name": "recording"
        }
      ]
    },
    {
      "name": "SessionMinimalModel",
      "fields": [
        {
          "type": "string",
          "description": "Session start time. If a session hasn't been started this fields should be set to \"scheduledStartTime\"\n",
          "format": "date-time",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Session end time. If a session hasn't been finished this fields should be set to (\"startTime\"+\"scheduledDuration\")\n",
          "format": "date-time",
          "name": "endTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Session duration in seconds rounded up (returned if 'startTime' and 'endTime' are not empty)",
          "example": 3600,
          "name": "duration"
        },
        {
          "type": "string",
          "description": "Session title. If blank - derived from webinar title.",
          "maxLength": 512,
          "example": "Live Broadcasting US",
          "name": "title"
        },
        {
          "type": "string",
          "maxLength": 4096,
          "description": "User-friendly description of the Session. If blank - derived from webinar title.",
          "example": "Live session for US-based participants",
          "name": "description"
        }
      ]
    },
    {
      "name": "RecordingBaseModel",
      "fields": [
        {
          "type": "string",
          "description": "Recording status",
          "enum": [
            "Processing",
            "Available",
            "Failed",
            "Purged"
          ],
          "example": "Available",
          "name": "status",
          "required": true
        },
        {
          "$ref": "ApiError",
          "name": "failureReason",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 1,
          "description": "Recording duration in seconds",
          "example": 3600,
          "name": "duration",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if Host or Admin has shared a recording.\nCan be set to true only then recording status is 'Available'.\n",
          "example": true,
          "name": "shared",
          "required": false
        },
        {
          "type": "string",
          "nullable": true,
          "format": "date-time",
          "description": "Time after which recording shared link cannot be accessed by recipients.",
          "example": "2023-10-01T10:05:00.000Z",
          "name": "sharedUriExpirationTime",
          "required": false
        }
      ]
    },
    {
      "name": "OriginalRoleModel",
      "description": "Role assigned to participant when invite was sent or during join time (if an invite was not sent)",
      "fields": [
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "originalRole",
          "required": true
        }
      ]
    },
    {
      "name": "RcwPagingModel",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "description": "Number of items per page",
          "example": 100,
          "name": "perPage",
          "required": true
        },
        {
          "type": "string",
          "description": "Current page token",
          "name": "pageToken",
          "required": true
        },
        {
          "type": "string",
          "description": "Next page token (absent for the last page of the result set)",
          "name": "nextPageToken",
          "required": false
        },
        {
          "type": "string",
          "description": "Previous page token (absent for the first page of the result set)",
          "name": "previousPageToken",
          "required": false
        }
      ]
    },
    {
      "name": "ParticipantListResource",
      "fields": [
        {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "ParticipantExtendedModel"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "RcwPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "RcwRoleAttributeModel",
      "description": "The attribute declaration to indicate webinar session participant/invitee role",
      "fields": [
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "role",
          "required": true
        }
      ]
    },
    {
      "name": "ParticipantBaseModel",
      "description": "The internal IDs of RC-authenticated users.",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": false
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": false
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "role",
          "required": true
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "originalRole",
          "required": true
        },
        {
          "$ref": "RcwDomainUserModel",
          "name": "linkedUser",
          "required": false
        },
        {
          "type": "string",
          "description": "A token to access avatar image from CDN. Available only for authenticated panelists",
          "example": "wedyugwied8wud98u90i329silqdjalidj",
          "readOnly": true,
          "name": "avatarToken",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of the participant specified in invite or determined at join time",
          "enum": [
            "User",
            "Room"
          ],
          "default": "User",
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Boolean to indicate if the participant was blocked from Q&A\n",
          "example": true,
          "name": "qnaBlocked",
          "required": false
        }
      ]
    },
    {
      "name": "ParticipantReducedModel",
      "description": "The internal IDs of RC-authenticated users.",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": false
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": false
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "role",
          "required": true
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "originalRole",
          "required": true
        },
        {
          "$ref": "RcwDomainUserModel",
          "name": "linkedUser",
          "required": false
        },
        {
          "type": "string",
          "description": "A token to access avatar image from CDN. Available only for authenticated panelists",
          "example": "wedyugwied8wud98u90i329silqdjalidj",
          "readOnly": true,
          "name": "avatarToken",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of the participant specified in invite or determined at join time",
          "enum": [
            "User",
            "Room"
          ],
          "default": "User",
          "name": "type",
          "required": true
        }
      ]
    },
    {
      "name": "AvatarOwnerModel",
      "fields": [
        {
          "type": "string",
          "description": "A token to access avatar image from CDN. Available only for authenticated panelists",
          "example": "wedyugwied8wud98u90i329silqdjalidj",
          "readOnly": true,
          "name": "avatarToken"
        }
      ]
    },
    {
      "name": "RcwPagingForwardModel",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "description": "Number of items per page",
          "example": 100,
          "name": "perPage",
          "required": true
        },
        {
          "type": "string",
          "description": "Current page token",
          "name": "pageToken",
          "required": true
        },
        {
          "type": "string",
          "description": "Next page token (absent for the last page of the result set)",
          "name": "nextPageToken",
          "required": false
        },
        {
          "type": "string",
          "description": "Previous page token (absent for the first page of the result set)\nMay be omitted if the result set does not support backward navigation.\n",
          "name": "previousPageToken",
          "required": false
        }
      ]
    },
    {
      "name": "ParticipantTypeModel",
      "fields": [
        {
          "type": "string",
          "description": "The type of the participant specified in invite or determined at join time",
          "enum": [
            "User",
            "Room"
          ],
          "default": "User",
          "name": "type",
          "required": true
        }
      ]
    },
    {
      "name": "RcwResourceIdModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "name": "id"
        }
      ]
    },
    {
      "name": "ParticipantExtendedModel",
      "description": "The internal IDs of RC-authenticated users.",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": false
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": false
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "role",
          "required": true
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "originalRole",
          "required": true
        },
        {
          "$ref": "RcwDomainUserModel",
          "name": "linkedUser",
          "required": false
        },
        {
          "type": "string",
          "description": "A token to access avatar image from CDN. Available only for authenticated panelists",
          "example": "wedyugwied8wud98u90i329silqdjalidj",
          "readOnly": true,
          "name": "avatarToken",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of the participant specified in invite or determined at join time",
          "enum": [
            "User",
            "Room"
          ],
          "default": "User",
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Boolean to indicate if the participant was blocked from Q&A\n",
          "example": true,
          "name": "qnaBlocked",
          "required": false
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time (earliest) when this participant joined the session",
          "name": "joinTime",
          "required": false
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time (latest) when this participant left the session",
          "name": "leaveTime",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if this participant was ejected from the webinar",
          "name": "wasEjected",
          "required": false
        },
        {
          "type": "string",
          "description": "For invited participants - Invitee ID (matches Configuration API Invitee IDs)",
          "name": "inviteeId",
          "required": false
        },
        {
          "type": "string",
          "description": "Registrant ID",
          "example": "12345678",
          "name": "registrantId",
          "required": false
        },
        {
          "type": "string",
          "description": "The hash string which is unique for each unique user",
          "example": "qzR4wNbddziRil7i033ELlb3KXrJDsw8mOyj970J+so=",
          "name": "uniqueUserHash",
          "required": false
        }
      ]
    },
    {
      "name": "InviteeListResource",
      "fields": [
        {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "InviteeModel"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "RcwPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "InviteeModel",
      "description": "The internal IDs of RC-authenticated users.",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": false
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": false
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "role",
          "required": true
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "originalRole",
          "required": true
        },
        {
          "$ref": "RcwDomainUserModel",
          "name": "linkedUser",
          "required": false
        },
        {
          "type": "string",
          "description": "A token to access avatar image from CDN. Available only for authenticated panelists",
          "example": "wedyugwied8wud98u90i329silqdjalidj",
          "readOnly": true,
          "name": "avatarToken",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of the participant specified in invite or determined at join time",
          "enum": [
            "User",
            "Room"
          ],
          "default": "User",
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Boolean to indicate if the participant was blocked from Q&A\n",
          "example": true,
          "name": "qnaBlocked",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if invite/cancellation emails was sent to this invitee.\n",
          "example": true,
          "name": "sendInvite",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Indicates that this invitee joined the session",
          "example": true,
          "name": "joined",
          "required": true
        }
      ]
    },
    {
      "name": "RecordingAdminModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Recording status",
          "enum": [
            "Processing",
            "Available",
            "Failed",
            "Purged"
          ],
          "example": "Available",
          "name": "status",
          "required": true
        },
        {
          "$ref": "ApiError",
          "name": "failureReason",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 1,
          "description": "Recording duration in seconds",
          "example": 3600,
          "name": "duration",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if Host or Admin has shared a recording.\nCan be set to true only then recording status is 'Available'.\n",
          "example": true,
          "name": "shared",
          "required": false
        },
        {
          "type": "string",
          "nullable": true,
          "format": "date-time",
          "description": "Time after which recording shared link cannot be accessed by recipients.",
          "example": "2023-10-01T10:05:00.000Z",
          "name": "sharedUriExpirationTime",
          "required": false
        },
        {
          "$ref": "SessionRefAdminModel",
          "name": "session",
          "required": false
        }
      ]
    },
    {
      "name": "RecordingModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Recording status",
          "enum": [
            "Processing",
            "Available",
            "Failed",
            "Purged"
          ],
          "example": "Available",
          "name": "status",
          "required": true
        },
        {
          "$ref": "ApiError",
          "name": "failureReason",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 1,
          "description": "Recording duration in seconds",
          "example": 3600,
          "name": "duration",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if Host or Admin has shared a recording.\nCan be set to true only then recording status is 'Available'.\n",
          "example": true,
          "name": "shared",
          "required": false
        },
        {
          "type": "string",
          "nullable": true,
          "format": "date-time",
          "description": "Time after which recording shared link cannot be accessed by recipients.",
          "example": "2023-10-01T10:05:00.000Z",
          "name": "sharedUriExpirationTime",
          "required": false
        }
      ]
    },
    {
      "name": "RecordingAdminListResource",
      "fields": [
        {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "RecordingAdminModel"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "RcwPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "WebinarRefModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Webinar title",
          "maxLength": 512,
          "minLength": 1,
          "example": "All-Hands Webinar",
          "name": "title",
          "required": true
        },
        {
          "type": "string",
          "description": "User-friendly description of the Webinar",
          "maxLength": 4096,
          "minLength": 0,
          "example": "Quarterly All-hands event to present recent news about our company to employees",
          "default": "",
          "name": "description",
          "required": false
        },
        {
          "$ref": "HostModel",
          "name": "host",
          "required": true
        }
      ]
    },
    {
      "name": "RecordingItemModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Recording status",
          "enum": [
            "Processing",
            "Available",
            "Failed",
            "Purged"
          ],
          "example": "Available",
          "name": "status",
          "required": true
        },
        {
          "$ref": "ApiError",
          "name": "failureReason",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 1,
          "description": "Recording duration in seconds",
          "example": 3600,
          "name": "duration",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if Host or Admin has shared a recording.\nCan be set to true only then recording status is 'Available'.\n",
          "example": true,
          "name": "shared",
          "required": false
        },
        {
          "type": "string",
          "nullable": true,
          "format": "date-time",
          "description": "Time after which recording shared link cannot be accessed by recipients.",
          "example": "2023-10-01T10:05:00.000Z",
          "name": "sharedUriExpirationTime",
          "required": false
        },
        {
          "$ref": "SessionRefModel",
          "name": "session",
          "required": false
        }
      ]
    },
    {
      "name": "SessionRefAdminModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Session start time. If a session hasn't been started this fields should be set to \"scheduledStartTime\"\n",
          "format": "date-time",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Session end time. If a session hasn't been finished this fields should be set to (\"startTime\"+\"scheduledDuration\")\n",
          "format": "date-time",
          "name": "endTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Session duration in seconds rounded up (returned if 'startTime' and 'endTime' are not empty)",
          "example": 3600,
          "name": "duration"
        },
        {
          "type": "string",
          "description": "Session title. If blank - derived from webinar title.",
          "maxLength": 512,
          "example": "Live Broadcasting US",
          "name": "title"
        },
        {
          "type": "string",
          "maxLength": 4096,
          "description": "User-friendly description of the Session. If blank - derived from webinar title.",
          "example": "Live session for US-based participants",
          "name": "description"
        },
        {
          "$ref": "WebinarRefModel",
          "name": "webinar"
        }
      ]
    },
    {
      "name": "SessionRefModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Session start time. If a session hasn't been started this fields should be set to \"scheduledStartTime\"\n",
          "format": "date-time",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Session end time. If a session hasn't been finished this fields should be set to (\"startTime\"+\"scheduledDuration\")\n",
          "format": "date-time",
          "name": "endTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Session duration in seconds rounded up (returned if 'startTime' and 'endTime' are not empty)",
          "example": 3600,
          "name": "duration"
        },
        {
          "type": "string",
          "description": "Session title. If blank - derived from webinar title.",
          "maxLength": 512,
          "example": "Live Broadcasting US",
          "name": "title"
        },
        {
          "type": "string",
          "maxLength": 4096,
          "description": "User-friendly description of the Session. If blank - derived from webinar title.",
          "example": "Live session for US-based participants",
          "name": "description"
        },
        {
          "$ref": "WebinarRefModel",
          "name": "webinar"
        }
      ]
    },
    {
      "name": "RecordingAdminExtendedItemModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Recording status",
          "enum": [
            "Processing",
            "Available",
            "Failed",
            "Purged"
          ],
          "example": "Available",
          "name": "status",
          "required": true
        },
        {
          "$ref": "ApiError",
          "name": "failureReason",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 1,
          "description": "Recording duration in seconds",
          "example": 3600,
          "name": "duration",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if Host or Admin has shared a recording.\nCan be set to true only then recording status is 'Available'.\n",
          "example": true,
          "name": "shared",
          "required": false
        },
        {
          "type": "string",
          "nullable": true,
          "format": "date-time",
          "description": "Time after which recording shared link cannot be accessed by recipients.",
          "example": "2023-10-01T10:05:00.000Z",
          "name": "sharedUriExpirationTime",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "description": "Shared URI of the recording. If a password was required to join a webinar, the URI should contain the password encoded",
          "example": "https://v.ringcentral.com/w/a/recording/de7yd8ew7yfsdfjh899843rgj?pw=a1b2c3d4",
          "name": "recordingSharedUri",
          "required": true
        },
        {
          "$ref": "SessionRefAdminModel",
          "name": "session",
          "required": false
        }
      ]
    },
    {
      "name": "RecordingItemExtendedModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Recording status",
          "enum": [
            "Processing",
            "Available",
            "Failed",
            "Purged"
          ],
          "example": "Available",
          "name": "status",
          "required": true
        },
        {
          "$ref": "ApiError",
          "name": "failureReason",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 1,
          "description": "Recording duration in seconds",
          "example": 3600,
          "name": "duration",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if Host or Admin has shared a recording.\nCan be set to true only then recording status is 'Available'.\n",
          "example": true,
          "name": "shared",
          "required": false
        },
        {
          "type": "string",
          "nullable": true,
          "format": "date-time",
          "description": "Time after which recording shared link cannot be accessed by recipients.",
          "example": "2023-10-01T10:05:00.000Z",
          "name": "sharedUriExpirationTime",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "description": "Shared URI of the recording. If a password was required to join a webinar, the URI should contain the password encoded",
          "example": "https://v.ringcentral.com/w/a/recording/de7yd8ew7yfsdfjh899843rgj?pw=a1b2c3d4",
          "name": "recordingSharedUri",
          "required": true
        },
        {
          "$ref": "SessionRefModel",
          "name": "session",
          "required": false
        }
      ]
    },
    {
      "name": "SessionGlobalListResource",
      "fields": [
        {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "SessionGlobalResource"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "RcwPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "SessionGlobalResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "$ref": "WebinarRefModel",
          "name": "webinar",
          "required": true
        },
        {
          "type": "string",
          "description": "Session start time. If a session hasn't been started this fields should be set to \"scheduledStartTime\"\n",
          "format": "date-time",
          "name": "startTime",
          "required": false
        },
        {
          "type": "string",
          "description": "Session end time. If a session hasn't been finished this fields should be set to (\"startTime\"+\"scheduledDuration\")\n",
          "format": "date-time",
          "name": "endTime",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Session duration in seconds rounded up (returned if 'startTime' and 'endTime' are not empty)",
          "example": 3600,
          "name": "duration",
          "required": false
        },
        {
          "type": "string",
          "description": "Session title. If blank - derived from webinar title.",
          "maxLength": 512,
          "example": "Live Broadcasting US",
          "name": "title",
          "required": false
        },
        {
          "type": "string",
          "maxLength": 4096,
          "description": "User-friendly description of the Session. If blank - derived from webinar title.",
          "example": "Live session for US-based participants",
          "name": "description",
          "required": false
        },
        {
          "type": "string",
          "description": "Session scheduled start time.",
          "format": "date-time",
          "name": "scheduledStartTime",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The scheduled duration of the Session in seconds.",
          "example": 1800,
          "name": "scheduledDuration",
          "required": false
        },
        {
          "type": "string",
          "description": "IANA-compatible time zone name (see https://www.iana.org/time-zones).",
          "example": "America/New_York",
          "name": "timeZone",
          "required": false
        },
        {
          "type": "string",
          "description": "Session locale code. Can't be blank or null.",
          "example": "en-US",
          "default": "en-US",
          "name": "localeCode",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The time offset (positive, in seconds) indicating how much in advance\n(comparing to \"scheduledStartTime\") panel members should join for the pre-webinar team sync\n",
          "minimum": 0,
          "default": 0,
          "example": 900,
          "name": "panelJoinTimeOffset",
          "required": false
        },
        {
          "type": "string",
          "description": "The time when broadcasting started.",
          "format": "date-time",
          "name": "broadcastingStartTime",
          "required": false
        },
        {
          "type": "string",
          "description": "The time when broadcasting ended.",
          "format": "date-time",
          "name": "broadcastingEndTime",
          "required": false
        },
        {
          "type": "string",
          "description": "Webinar session status",
          "enum": [
            "Scheduled",
            "Active",
            "Finished"
          ],
          "example": "Finished",
          "name": "status",
          "required": false
        },
        {
          "type": "string",
          "description": "Session runtime status (for 'Active' Sessions only).\nIt is omitted (or null) if the status is not Active\n",
          "enum": [
            "Idle",
            "Practice",
            "GoingLive",
            "Live",
            "Break",
            "Debrief"
          ],
          "name": "runtimeStatus",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The number of participants (of all roles) who joined the webinar",
          "example": 150,
          "name": "participantCount",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The number of attendees who joined the webinar",
          "example": 145,
          "name": "attendeeCount",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Unique number of participants (of all roles) who joined the webinar",
          "example": 140,
          "name": "uniqueParticipantCount",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Unique number of attendees who joined the webinar",
          "example": 135,
          "name": "uniqueAttendeeCount",
          "required": false
        },
        {
          "type": "string",
          "description": "The RCV bridge id",
          "example": "839874770",
          "name": "videoBridgeId",
          "required": false
        },
        {
          "$ref": "RecordingModel",
          "name": "recording",
          "required": false
        },
        {
          "type": "array",
          "minItems": 0,
          "description": "The list of livestreams configured for the session",
          "items": {
            "$ref": "SessionLivestreamMinimalModel"
          },
          "name": "livestreams",
          "required": false
        }
      ]
    },
    {
      "name": "SessionRecordingModel",
      "fields": [
        {
          "$ref": "RecordingModel",
          "name": "recording"
        }
      ]
    },
    {
      "name": "RecordingListResource",
      "fields": [
        {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "RecordingItemModel"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "RcwPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "RecordingDownloadModel",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Download URI (available only for webinar host or admin)",
          "name": "downloadUri",
          "required": true
        },
        {
          "type": "string",
          "description": "MIME type of the file to download.",
          "enum": [
            "video/mp4",
            "audio/m4a"
          ],
          "default": "video/mp4",
          "name": "downloadContentType",
          "required": true
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Download file size in bytes",
          "example": 20821092300,
          "name": "downloadSize",
          "required": true
        }
      ]
    },
    {
      "name": "RegSessionModel",
      "fields": [
        {
          "type": "string",
          "readOnly": true,
          "description": "ID of the session",
          "example": "123456789",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "enum": [
            "Open",
            "Closed"
          ],
          "description": "Status of the registration",
          "example": "Open",
          "name": "registrationStatus",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "The URI of the registration landing page",
          "readOnly": true,
          "example": "https://abcde12345.webinar.ringcentral.com/register",
          "name": "registrationPageUri",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "description": "The URI of the branding descriptor",
          "readOnly": true,
          "example": "https://abcde12345.webinar.ringcentral.com/branding",
          "name": "brandingDescriptorUri",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The current number of registrants",
          "readOnly": true,
          "example": 10,
          "name": "registrantCount",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The current number of post webinar registrants",
          "readOnly": true,
          "example": 10,
          "name": "postWebinarRegistrantCount",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates that there are non-test registrants",
          "readOnly": true,
          "example": true,
          "name": "hasRealRegistrants",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "readOnly": true,
          "description": "Sequence number for iCalendar email attachments",
          "name": "icalendarSequence",
          "required": false
        },
        {
          "$ref": "RegSessionModelSettings",
          "name": "settings",
          "required": false
        }
      ]
    },
    {
      "name": "RegistrantModelResponsePostWithQuestionnaire",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": true
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": true
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The personalized URI for this registrant to join the Webinar",
          "example": "https://v.ringcentral.com/w/a/join/iuyef77fsj473wn10ashjfk34",
          "name": "joinUri",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The personalized URI for this registrant to cancel the registration",
          "example": "https://abcde12345.webinar.ringcentral.com/register?jlt=iuyef77fsj473wn10ashjfk34&action=cancel",
          "name": "cancellationUri",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if the registrant was registered to on-demand webinar",
          "readOnly": true,
          "nullable": false,
          "name": "registeredPostWebinar",
          "required": false
        },
        {
          "type": "string",
          "description": "Visitor ID passed from registration page",
          "name": "visitorId",
          "required": false
        },
        {
          "type": "string",
          "description": "ID of a registrant passed from external system",
          "name": "externalId",
          "required": false
        },
        {
          "type": "string",
          "description": "Registration time (can be earlier than \"creationTime\" due to indirect persistence)",
          "format": "date-time",
          "readOnly": true,
          "name": "registrationTime",
          "required": false
        },
        {
          "type": "string",
          "x-sensitive-data": "normalized-anonymized",
          "format": "ipv4",
          "description": "IP address of the registrant's user agent",
          "name": "ipAddress",
          "required": false
        },
        {
          "type": "string",
          "description": "Registration channel source (coming from registration URI)",
          "name": "source",
          "required": false
        },
        {
          "type": "string",
          "description": "ID of session participant (from Runtime Service - if this registrant attended the webinar)",
          "name": "participantId",
          "required": false
        },
        {
          "type": "array",
          "description": "Answers on custom registration questions",
          "minItems": 0,
          "items": {
            "$ref": "RegAnswerModel"
          },
          "name": "questionnaire",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "readOnly": true,
          "description": "Sequence number for iCalendar email attachments",
          "name": "icalendarSequence",
          "required": false
        }
      ]
    },
    {
      "name": "RegQuestionBaseModel",
      "fields": [
        {
          "type": "string",
          "description": "ID of the custom question",
          "example": "123456789",
          "name": "questionId",
          "required": true
        }
      ]
    },
    {
      "name": "FixedAnswerModel",
      "fields": [
        {
          "type": "string",
          "description": "ID of the custom question",
          "example": "123456789",
          "name": "questionId",
          "required": true
        },
        {
          "type": "array",
          "description": "The list of answer IDs",
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "name": "answerIds",
          "required": true
        }
      ]
    },
    {
      "name": "VariableAnswerModel",
      "fields": [
        {
          "type": "string",
          "description": "ID of the custom question",
          "example": "123456789",
          "name": "questionId",
          "required": true
        },
        {
          "type": "string",
          "x-sensitive-data": "normalized-anonymized",
          "description": "Answer text",
          "name": "answerText",
          "required": true
        }
      ]
    },
    {
      "name": "RegistrantMinimalModel",
      "fields": [
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": true
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": true
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The personalized URI for this registrant to join the Webinar",
          "example": "https://v.ringcentral.com/w/a/join/iuyef77fsj473wn10ashjfk34",
          "name": "joinUri",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The personalized URI for this registrant to cancel the registration",
          "example": "https://abcde12345.webinar.ringcentral.com/register?jlt=iuyef77fsj473wn10ashjfk34&action=cancel",
          "name": "cancellationUri",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if the registrant was registered to on-demand webinar",
          "readOnly": true,
          "nullable": false,
          "name": "registeredPostWebinar",
          "required": false
        }
      ]
    },
    {
      "name": "RegistrantBaseModelWithQuestionnaire",
      "fields": [
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": true
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": true
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The personalized URI for this registrant to join the Webinar",
          "example": "https://v.ringcentral.com/w/a/join/iuyef77fsj473wn10ashjfk34",
          "name": "joinUri",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The personalized URI for this registrant to cancel the registration",
          "example": "https://abcde12345.webinar.ringcentral.com/register?jlt=iuyef77fsj473wn10ashjfk34&action=cancel",
          "name": "cancellationUri",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if the registrant was registered to on-demand webinar",
          "readOnly": true,
          "nullable": false,
          "name": "registeredPostWebinar",
          "required": false
        },
        {
          "type": "string",
          "description": "Visitor ID passed from registration page",
          "name": "visitorId",
          "required": false
        },
        {
          "type": "string",
          "description": "ID of a registrant passed from external system",
          "name": "externalId",
          "required": false
        },
        {
          "type": "string",
          "description": "Registration time (can be earlier than \"creationTime\" due to indirect persistence)",
          "format": "date-time",
          "readOnly": true,
          "name": "registrationTime",
          "required": false
        },
        {
          "type": "string",
          "x-sensitive-data": "normalized-anonymized",
          "format": "ipv4",
          "description": "IP address of the registrant's user agent",
          "name": "ipAddress",
          "required": false
        },
        {
          "type": "string",
          "description": "Registration channel source (coming from registration URI)",
          "name": "source",
          "required": false
        },
        {
          "type": "string",
          "description": "ID of session participant (from Runtime Service - if this registrant attended the webinar)",
          "name": "participantId",
          "required": false
        },
        {
          "type": "array",
          "description": "Answers on custom registration questions",
          "minItems": 0,
          "items": {
            "$ref": "RegAnswerModel"
          },
          "name": "questionnaire",
          "required": false
        }
      ]
    },
    {
      "name": "RegistrantBaseModel",
      "fields": [
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": true
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": true
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The personalized URI for this registrant to join the Webinar",
          "example": "https://v.ringcentral.com/w/a/join/iuyef77fsj473wn10ashjfk34",
          "name": "joinUri",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The personalized URI for this registrant to cancel the registration",
          "example": "https://abcde12345.webinar.ringcentral.com/register?jlt=iuyef77fsj473wn10ashjfk34&action=cancel",
          "name": "cancellationUri",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if the registrant was registered to on-demand webinar",
          "readOnly": true,
          "nullable": false,
          "name": "registeredPostWebinar",
          "required": false
        },
        {
          "type": "string",
          "description": "Visitor ID passed from registration page",
          "name": "visitorId",
          "required": false
        },
        {
          "type": "string",
          "description": "ID of a registrant passed from external system",
          "name": "externalId",
          "required": false
        },
        {
          "type": "string",
          "description": "Registration time (can be earlier than \"creationTime\" due to indirect persistence)",
          "format": "date-time",
          "readOnly": true,
          "name": "registrationTime",
          "required": false
        },
        {
          "type": "string",
          "x-sensitive-data": "normalized-anonymized",
          "format": "ipv4",
          "description": "IP address of the registrant's user agent",
          "name": "ipAddress",
          "required": false
        },
        {
          "type": "string",
          "description": "Registration channel source (coming from registration URI)",
          "name": "source",
          "required": false
        },
        {
          "type": "string",
          "description": "ID of session participant (from Runtime Service - if this registrant attended the webinar)",
          "name": "participantId",
          "required": false
        }
      ]
    },
    {
      "name": "RegistrantListResource",
      "fields": [
        {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "RegistrantModelWithQuestionnaire"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "RcwPagingForwardModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "RegistrantModelWithQuestionnaire",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": true
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": true
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The personalized URI for this registrant to join the Webinar",
          "example": "https://v.ringcentral.com/w/a/join/iuyef77fsj473wn10ashjfk34",
          "name": "joinUri",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The personalized URI for this registrant to cancel the registration",
          "example": "https://abcde12345.webinar.ringcentral.com/register?jlt=iuyef77fsj473wn10ashjfk34&action=cancel",
          "name": "cancellationUri",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if the registrant was registered to on-demand webinar",
          "readOnly": true,
          "nullable": false,
          "name": "registeredPostWebinar",
          "required": false
        },
        {
          "type": "string",
          "description": "Visitor ID passed from registration page",
          "name": "visitorId",
          "required": false
        },
        {
          "type": "string",
          "description": "ID of a registrant passed from external system",
          "name": "externalId",
          "required": false
        },
        {
          "type": "string",
          "description": "Registration time (can be earlier than \"creationTime\" due to indirect persistence)",
          "format": "date-time",
          "readOnly": true,
          "name": "registrationTime",
          "required": false
        },
        {
          "type": "string",
          "x-sensitive-data": "normalized-anonymized",
          "format": "ipv4",
          "description": "IP address of the registrant's user agent",
          "name": "ipAddress",
          "required": false
        },
        {
          "type": "string",
          "description": "Registration channel source (coming from registration URI)",
          "name": "source",
          "required": false
        },
        {
          "type": "string",
          "description": "ID of session participant (from Runtime Service - if this registrant attended the webinar)",
          "name": "participantId",
          "required": false
        },
        {
          "type": "array",
          "description": "Answers on custom registration questions",
          "minItems": 0,
          "items": {
            "$ref": "RegAnswerModel"
          },
          "name": "questionnaire",
          "required": false
        }
      ]
    },
    {
      "name": "RegAnswerModel",
      "fields": [
        {
          "type": "string",
          "description": "ID of the custom question",
          "example": "123456789",
          "name": "questionId",
          "required": true
        },
        {
          "type": "array",
          "description": "The list of answer IDs",
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "name": "answerIds",
          "required": true
        },
        {
          "type": "string",
          "x-sensitive-data": "normalized-anonymized",
          "description": "Answer text",
          "name": "answerText",
          "required": true
        }
      ]
    },
    {
      "name": "WebinarCreationRequest",
      "fields": [
        {
          "type": "string",
          "description": "Webinar title",
          "minLength": 1,
          "maxLength": 512,
          "x-sensitive-data": "masked",
          "example": "All-Hands Webinar",
          "name": "title",
          "required": true
        },
        {
          "type": "string",
          "description": "User-friendly description of the Webinar",
          "minLength": 0,
          "maxLength": 4096,
          "x-sensitive-data": "masked",
          "example": "Quarterly All-hands event to present recent news about our company to employees",
          "name": "description",
          "required": false
        },
        {
          "$ref": "WcsWebinarSettingsModel",
          "name": "settings",
          "required": false
        },
        {
          "$ref": "RcwLinkedUserModel",
          "name": "host",
          "required": false
        }
      ]
    },
    {
      "name": "WebinarBaseModel",
      "fields": [
        {
          "type": "string",
          "description": "Webinar title",
          "minLength": 1,
          "maxLength": 512,
          "x-sensitive-data": "masked",
          "example": "All-Hands Webinar",
          "name": "title"
        },
        {
          "type": "string",
          "description": "User-friendly description of the Webinar",
          "minLength": 0,
          "maxLength": 4096,
          "x-sensitive-data": "masked",
          "example": "Quarterly All-hands event to present recent news about our company to employees",
          "name": "description"
        },
        {
          "$ref": "WcsWebinarSettingsModel",
          "name": "settings"
        }
      ]
    },
    {
      "name": "WcsWebinarResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Webinar title",
          "minLength": 1,
          "maxLength": 512,
          "x-sensitive-data": "masked",
          "example": "All-Hands Webinar",
          "name": "title",
          "required": false
        },
        {
          "type": "string",
          "description": "User-friendly description of the Webinar",
          "minLength": 0,
          "maxLength": 4096,
          "x-sensitive-data": "masked",
          "example": "Quarterly All-hands event to present recent news about our company to employees",
          "name": "description",
          "required": false
        },
        {
          "$ref": "WcsWebinarSettingsModel",
          "name": "settings",
          "required": false
        },
        {
          "$ref": "WcsHostModel",
          "name": "host",
          "required": true
        }
      ]
    },
    {
      "name": "WcsWebinarSettingsModel",
      "description": "Various settings which define behavior of this Webinar's Sessions",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates if recording is enabled (if false all other recording settings cannot be enabled)",
          "default": true,
          "readOnly": true,
          "name": "recordingEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if recording should start automatically when a Webinar goes live",
          "default": false,
          "name": "autoRecord"
        },
        {
          "type": "boolean",
          "description": "Indicates if recording can be shared (this setting is read-only at webinar level)",
          "readOnly": true,
          "default": true,
          "name": "recordingSharingEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if recording can be downloaded (this setting is read-only at webinar level)",
          "readOnly": true,
          "default": true,
          "name": "recordingDownloadEnabled"
        },
        {
          "deprecated": true,
          "type": "boolean",
          "description": "DEPRECATED AND REPLACED BY 'pastSessionDeletionEnabled' setting.\nIndicates if recording can be deleted (this setting is read-only at webinar level)\n",
          "readOnly": true,
          "default": false,
          "name": "recordingDeletionEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if deletion of past session along with its artifacts is enabled for Host.\nThis setting is read-only at webinar level\n",
          "readOnly": true,
          "default": false,
          "name": "pastSessionDeletionEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if Panelists should be places to waiting room after joining",
          "default": false,
          "name": "panelistWaitingRoom"
        },
        {
          "type": "boolean",
          "description": "Indicates if Panelists' video should be 'on' by default",
          "default": true,
          "name": "panelistVideoEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if Panelists' screen sharing should be 'on' by default",
          "default": true,
          "name": "panelistScreenSharingEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if Panelists can mute/unmute themselves by default",
          "default": true,
          "name": "panelistMuteControlEnabled"
        },
        {
          "type": "string",
          "description": "Indicates if Panelists have to be authenticated users",
          "enum": [
            "Guest",
            "AuthenticatedUser",
            "AuthenticatedCoworker"
          ],
          "default": "Guest",
          "name": "panelistAuthentication"
        },
        {
          "type": "string",
          "description": "Indicates if attendees have to be authenticated users",
          "enum": [
            "Guest",
            "AuthenticatedUser",
            "AuthenticatedCoworker"
          ],
          "default": "Guest",
          "name": "attendeeAuthentication"
        },
        {
          "type": "string",
          "description": "Indicates who can access webinar artifacts. Applies to recordings at present.\nApplicable to other artifacts such as Q&A, Polls in the future.\n",
          "enum": [
            "Guest",
            "AuthenticatedUser",
            "AuthenticatedCoworker"
          ],
          "default": "AuthenticatedUser",
          "name": "artifactsAccessAuthentication"
        },
        {
          "type": "boolean",
          "description": "Indicates if dial-in PSTN audio option is enabled for Panelists",
          "default": false,
          "name": "pstnEnabled"
        },
        {
          "type": "string",
          "maxLength": 64,
          "x-sensitive-data": "masked",
          "description": "Webinar password. If company-level \"passwordEnabled\" is true and \"password\" is null / omitted,\nthe backend generates the password\n",
          "name": "password"
        },
        {
          "type": "boolean",
          "description": "Indicates if Q&A is enabled for the webinar (if false all other Q&A settings cannot be enabled)",
          "default": true,
          "name": "qnaEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if anonymous Q&A is enabled for the webinar",
          "default": true,
          "name": "qnaAnonymousEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if polls are enabled for the webinar (if false all other polls settings cannot be enabled)",
          "readOnly": true,
          "default": true,
          "name": "pollsEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if anonymous poll answers are enabled for the webinar",
          "readOnly": true,
          "default": true,
          "name": "pollsAnonymousEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates if a registration is enabled for the webinar (if false all other registration settings are ignored)",
          "default": false,
          "name": "registrationEnabled"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "URI to redirect users after the webinar",
          "example": "https://www.acme.com/thankyou",
          "name": "postWebinarRedirectUri"
        },
        {
          "type": "boolean",
          "description": "Indicates if livestreaming to external streaming provider is enabled",
          "readOnly": true,
          "default": true,
          "name": "externalLivestreamEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicate if the moderated Q&A enabled for webinar",
          "default": false,
          "name": "moderatedQnaEnabled"
        }
      ]
    },
    {
      "name": "WcsHostModel",
      "description": "The internal IDs of RC-authenticated users.",
      "fields": [
        {
          "type": "boolean",
          "description": "Describes host's license, 'true' - license is active",
          "name": "entitled",
          "required": true
        },
        {
          "type": "string",
          "maxLength": 256,
          "description": "User ID",
          "name": "userId",
          "required": true
        },
        {
          "type": "string",
          "maxLength": 256,
          "description": "Account ID",
          "name": "accountId",
          "required": true
        },
        {
          "$ref": "RcwDomainUserModel",
          "name": "linkedUser",
          "required": false
        }
      ]
    },
    {
      "name": "WebinarListResource",
      "fields": [
        {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "WcsWebinarResource"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "RcwPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "WebinarInfoModel",
      "fields": [
        {
          "type": "string",
          "description": "Webinar title",
          "minLength": 1,
          "maxLength": 512,
          "x-sensitive-data": "masked",
          "example": "All-Hands Webinar",
          "name": "title"
        },
        {
          "type": "string",
          "description": "User-friendly description of the Webinar",
          "minLength": 0,
          "maxLength": 4096,
          "x-sensitive-data": "masked",
          "example": "Quarterly All-hands event to present recent news about our company to employees",
          "name": "description"
        }
      ]
    },
    {
      "name": "WebinarGeneratedModel",
      "fields": [
        {
          "$ref": "WcsHostModel",
          "name": "host",
          "required": true
        }
      ]
    },
    {
      "name": "WcsSessionBaseModel",
      "fields": [
        {
          "type": "string",
          "description": "Session scheduled start time.",
          "format": "date-time",
          "name": "scheduledStartTime",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 30,
          "maximum": 43200,
          "description": "The duration of the Session in seconds.",
          "example": 1800,
          "name": "scheduledDuration",
          "required": true
        },
        {
          "type": "string",
          "description": "IANA-compatible time zone name (see https://www.iana.org/time-zones).",
          "maxLength": 64,
          "minLength": 3,
          "example": "America/New_York",
          "name": "timeZone",
          "required": true
        },
        {
          "type": "string",
          "description": "Localized time zone description.",
          "example": "Eastern Time (America/New_York)",
          "name": "localizedTimeZoneDescription",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The time offset (positive, in seconds) indicating how much in advance\n(comparing to \"scheduledStartTime\") panel members should join for the pre-webinar team sync\n",
          "minimum": 0,
          "default": 0,
          "example": 900,
          "name": "panelJoinTimeOffset",
          "required": false
        },
        {
          "type": "string",
          "description": "Session title. Can be left blank - then Webinar title should be used for presentation.",
          "maxLength": 512,
          "minLength": 0,
          "x-sensitive-data": "masked",
          "example": "Live Broadcasting US",
          "name": "title",
          "required": false
        },
        {
          "type": "string",
          "description": "User-friendly description of the Session. Can be left blank - then Webinar title should be used for presentation.",
          "maxLength": 4096,
          "minLength": 0,
          "x-sensitive-data": "masked",
          "example": "Live session for US-based participants",
          "name": "description",
          "required": false
        },
        {
          "type": "string",
          "description": "Session status (for the purposes of Configuration service)",
          "enum": [
            "Scheduled",
            "Active",
            "Finished"
          ],
          "example": "Scheduled",
          "name": "status",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The URI to join the webinar as a host",
          "example": "https://v.ringcentral.com/w/join/de7yd8ew7yfsdfjh899843rgj",
          "name": "hostJoinUri",
          "required": false
        }
      ]
    },
    {
      "name": "WcsSessionGeneratedModel",
      "fields": [
        {
          "type": "string",
          "description": "The RCV bridge id",
          "readOnly": true,
          "example": "839874770",
          "name": "videoBridgeId"
        },
        {
          "type": "string",
          "format": "password",
          "readOnly": true,
          "x-sensitive-data": "masked",
          "description": "The RCV bridge password. Returned only if requested by Host/Co-host/Panelist and a password for the bridge is set.",
          "example": "abc123",
          "name": "videoBridgePassword"
        },
        {
          "type": "string",
          "format": "password",
          "readOnly": true,
          "x-sensitive-data": "masked",
          "description": "The RCV bridge PSTN password. Returned only if requested by Host/Co-host/Panelist and a PSTN password for the bridge is set.",
          "example": "abc123",
          "name": "videoBridgePstnPassword"
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The URI for attendees to join the Webinar (if it is a public webinar)",
          "example": "https://v.ringcentral.com/w/a/join/iuyef77fsj473wn10ashjfk34",
          "name": "attendeeJoinUri"
        },
        {
          "type": "boolean",
          "readOnly": true,
          "description": "Calculated attribute indicating if there are any unsent/deferred invites to session participants",
          "name": "hasUnsentInvites"
        }
      ]
    },
    {
      "name": "WcsSessionResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Session scheduled start time.",
          "format": "date-time",
          "name": "scheduledStartTime",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 30,
          "maximum": 43200,
          "description": "The duration of the Session in seconds.",
          "example": 1800,
          "name": "scheduledDuration",
          "required": true
        },
        {
          "type": "string",
          "description": "IANA-compatible time zone name (see https://www.iana.org/time-zones).",
          "maxLength": 64,
          "minLength": 3,
          "example": "America/New_York",
          "name": "timeZone",
          "required": true
        },
        {
          "type": "string",
          "description": "Localized time zone description.",
          "example": "Eastern Time (America/New_York)",
          "name": "localizedTimeZoneDescription",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The time offset (positive, in seconds) indicating how much in advance\n(comparing to \"scheduledStartTime\") panel members should join for the pre-webinar team sync\n",
          "minimum": 0,
          "default": 0,
          "example": 900,
          "name": "panelJoinTimeOffset",
          "required": false
        },
        {
          "type": "string",
          "description": "Session title. Can be left blank - then Webinar title should be used for presentation.",
          "maxLength": 512,
          "minLength": 0,
          "x-sensitive-data": "masked",
          "example": "Live Broadcasting US",
          "name": "title",
          "required": false
        },
        {
          "type": "string",
          "description": "User-friendly description of the Session. Can be left blank - then Webinar title should be used for presentation.",
          "maxLength": 4096,
          "minLength": 0,
          "x-sensitive-data": "masked",
          "example": "Live session for US-based participants",
          "name": "description",
          "required": false
        },
        {
          "type": "string",
          "description": "Session status (for the purposes of Configuration service)",
          "enum": [
            "Scheduled",
            "Active",
            "Finished"
          ],
          "example": "Scheduled",
          "name": "status",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The URI to join the webinar as a host",
          "example": "https://v.ringcentral.com/w/join/de7yd8ew7yfsdfjh899843rgj",
          "name": "hostJoinUri",
          "required": false
        },
        {
          "type": "string",
          "description": "Session locale code. Can't be blank or null",
          "maxLength": 8,
          "minLength": 2,
          "example": "en-US",
          "name": "localeCode",
          "required": false
        },
        {
          "type": "string",
          "description": "The RCV bridge id",
          "readOnly": true,
          "example": "839874770",
          "name": "videoBridgeId",
          "required": false
        },
        {
          "type": "string",
          "format": "password",
          "readOnly": true,
          "x-sensitive-data": "masked",
          "description": "The RCV bridge password. Returned only if requested by Host/Co-host/Panelist and a password for the bridge is set.",
          "example": "abc123",
          "name": "videoBridgePassword",
          "required": false
        },
        {
          "type": "string",
          "format": "password",
          "readOnly": true,
          "x-sensitive-data": "masked",
          "description": "The RCV bridge PSTN password. Returned only if requested by Host/Co-host/Panelist and a PSTN password for the bridge is set.",
          "example": "abc123",
          "name": "videoBridgePstnPassword",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The URI for attendees to join the Webinar (if it is a public webinar)",
          "example": "https://v.ringcentral.com/w/a/join/iuyef77fsj473wn10ashjfk34",
          "name": "attendeeJoinUri",
          "required": false
        },
        {
          "type": "boolean",
          "readOnly": true,
          "description": "Calculated attribute indicating if there are any unsent/deferred invites to session participants",
          "name": "hasUnsentInvites",
          "required": false
        }
      ]
    },
    {
      "name": "WcsSessionWithLocaleCodeModel",
      "fields": [
        {
          "type": "string",
          "description": "Session scheduled start time.",
          "format": "date-time",
          "name": "scheduledStartTime",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 30,
          "maximum": 43200,
          "description": "The duration of the Session in seconds.",
          "example": 1800,
          "name": "scheduledDuration",
          "required": true
        },
        {
          "type": "string",
          "description": "IANA-compatible time zone name (see https://www.iana.org/time-zones).",
          "maxLength": 64,
          "minLength": 3,
          "example": "America/New_York",
          "name": "timeZone",
          "required": true
        },
        {
          "type": "string",
          "description": "Localized time zone description.",
          "example": "Eastern Time (America/New_York)",
          "name": "localizedTimeZoneDescription",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The time offset (positive, in seconds) indicating how much in advance\n(comparing to \"scheduledStartTime\") panel members should join for the pre-webinar team sync\n",
          "minimum": 0,
          "default": 0,
          "example": 900,
          "name": "panelJoinTimeOffset",
          "required": false
        },
        {
          "type": "string",
          "description": "Session title. Can be left blank - then Webinar title should be used for presentation.",
          "maxLength": 512,
          "minLength": 0,
          "x-sensitive-data": "masked",
          "example": "Live Broadcasting US",
          "name": "title",
          "required": false
        },
        {
          "type": "string",
          "description": "User-friendly description of the Session. Can be left blank - then Webinar title should be used for presentation.",
          "maxLength": 4096,
          "minLength": 0,
          "x-sensitive-data": "masked",
          "example": "Live session for US-based participants",
          "name": "description",
          "required": false
        },
        {
          "type": "string",
          "description": "Session status (for the purposes of Configuration service)",
          "enum": [
            "Scheduled",
            "Active",
            "Finished"
          ],
          "example": "Scheduled",
          "name": "status",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The URI to join the webinar as a host",
          "example": "https://v.ringcentral.com/w/join/de7yd8ew7yfsdfjh899843rgj",
          "name": "hostJoinUri",
          "required": false
        },
        {
          "type": "string",
          "description": "Session locale code. Can't be blank or null",
          "maxLength": 8,
          "minLength": 2,
          "example": "en-US",
          "name": "localeCode",
          "required": false
        }
      ]
    },
    {
      "name": "BulkUpdateInviteesRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "AddInviteeRequest"
          },
          "name": "addedInvitees"
        },
        {
          "type": "array",
          "items": {
            "name": "RcwResourceIdModel",
            "description": "The attribute declaration to indicate webinar session participant/invitee role",
            "required": [
              "role"
            ],
            "$ref": "BulkUpdateInviteesRequestUpdatedInvitees"
          },
          "name": "updatedInvitees"
        },
        {
          "type": "array",
          "items": {
            "$ref": "RcwResourceIdModel"
          },
          "name": "deletedInvitees"
        }
      ]
    },
    {
      "name": "InviteeSettingsModel",
      "fields": [
        {
          "type": "string",
          "description": "The type of the webinar invitee",
          "enum": [
            "User",
            "Room"
          ],
          "default": "User",
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "Indicates if invite/cancellation emails have to be sent to this invitee.\nFor \"Host\" it cannot be set to false.\nIf it is true it can't be changed back to false.\n",
          "default": true,
          "name": "sendInvite"
        }
      ]
    },
    {
      "name": "InviteeResource",
      "description": "The attribute declaration to indicate webinar session participant/invitee role",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": false
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": false
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": false
        },
        {
          "type": "string",
          "description": "Job title",
          "maxLength": 64,
          "x-sensitive-data": "masked",
          "example": "Product Manager",
          "name": "jobTitle",
          "required": false
        },
        {
          "$ref": "RcwDomainUserModel",
          "name": "linkedUser",
          "required": false
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "role",
          "required": true
        },
        {
          "type": "string",
          "description": "The type of the webinar invitee",
          "enum": [
            "User",
            "Room"
          ],
          "default": "User",
          "name": "type",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if invite/cancellation emails have to be sent to this invitee.\nFor \"Host\" it cannot be set to false.\nIf it is true it can't be changed back to false.\n",
          "default": true,
          "name": "sendInvite",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Personalized join link for the Invitee",
          "maxLength": 256,
          "minLength": 5,
          "readOnly": true,
          "example": "https://v.ringcentral.com/w/join/de7yd8ew7yfsdfjh899843rgj",
          "name": "joinUri",
          "required": false
        },
        {
          "type": "string",
          "maxLength": 12,
          "minLength": 1,
          "x-sensitive-data": "masked",
          "description": "Phone (PSTN) participant code",
          "name": "phoneParticipantCode",
          "required": false
        }
      ]
    },
    {
      "name": "BulkUpdateInviteesResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "InviteeResource"
          },
          "name": "addedInvitees"
        },
        {
          "type": "array",
          "items": {
            "$ref": "InviteeResource"
          },
          "name": "updatedInvitees"
        },
        {
          "type": "array",
          "items": {
            "$ref": "RcwResourceIdModel"
          },
          "name": "deletedInvitees"
        }
      ]
    },
    {
      "name": "AddInviteeRequest",
      "description": "The attribute declaration to indicate webinar session participant/invitee role",
      "fields": [
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": false
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": false
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": false
        },
        {
          "type": "string",
          "description": "Job title",
          "maxLength": 64,
          "x-sensitive-data": "masked",
          "example": "Product Manager",
          "name": "jobTitle",
          "required": false
        },
        {
          "$ref": "RcwDomainUserModel",
          "name": "linkedUser",
          "required": false
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "role",
          "required": true
        },
        {
          "type": "string",
          "description": "The type of the webinar invitee",
          "enum": [
            "User",
            "Room"
          ],
          "default": "User",
          "name": "type",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if invite/cancellation emails have to be sent to this invitee.\nFor \"Host\" it cannot be set to false.\nIf it is true it can't be changed back to false.\n",
          "default": true,
          "name": "sendInvite",
          "required": false
        }
      ]
    },
    {
      "name": "InviteeGeneratedModel",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Personalized join link for the Invitee",
          "maxLength": 256,
          "minLength": 5,
          "readOnly": true,
          "example": "https://v.ringcentral.com/w/join/de7yd8ew7yfsdfjh899843rgj",
          "name": "joinUri"
        },
        {
          "type": "string",
          "maxLength": 12,
          "minLength": 1,
          "x-sensitive-data": "masked",
          "description": "Phone (PSTN) participant code",
          "name": "phoneParticipantCode"
        }
      ]
    },
    {
      "name": "UpdateInviteeRequest",
      "description": "The attribute declaration to indicate webinar session participant/invitee role",
      "fields": [
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": false
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": false
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": false
        },
        {
          "type": "string",
          "description": "Job title",
          "maxLength": 64,
          "x-sensitive-data": "masked",
          "example": "Product Manager",
          "name": "jobTitle",
          "required": false
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "role",
          "required": true
        },
        {
          "type": "string",
          "description": "The type of the webinar invitee",
          "enum": [
            "User",
            "Room"
          ],
          "default": "User",
          "name": "type",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if invite/cancellation emails have to be sent to this invitee.\nFor \"Host\" it cannot be set to false.\nIf it is true it can't be changed back to false.\n",
          "default": true,
          "name": "sendInvite",
          "required": false
        }
      ]
    },
    {
      "name": "InviteeContactModel",
      "fields": [
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName"
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Job title",
          "maxLength": 64,
          "x-sensitive-data": "masked",
          "example": "Product Manager",
          "name": "jobTitle"
        }
      ]
    },
    {
      "name": "InviteeBaseModel",
      "description": "The attribute declaration to indicate webinar session participant/invitee role",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName",
          "required": false
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName",
          "required": false
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email",
          "required": false
        },
        {
          "type": "string",
          "description": "Job title",
          "maxLength": 64,
          "x-sensitive-data": "masked",
          "example": "Product Manager",
          "name": "jobTitle",
          "required": false
        },
        {
          "$ref": "RcwDomainUserModel",
          "name": "linkedUser",
          "required": false
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "role",
          "required": true
        },
        {
          "type": "string",
          "description": "The type of the webinar invitee",
          "enum": [
            "User",
            "Room"
          ],
          "default": "User",
          "name": "type",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates if invite/cancellation emails have to be sent to this invitee.\nFor \"Host\" it cannot be set to false.\nIf it is true it can't be changed back to false.\n",
          "default": true,
          "name": "sendInvite",
          "required": false
        }
      ]
    },
    {
      "name": "WcsInviteeListResource",
      "fields": [
        {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "InviteeResource"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "RcwPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "WcsSessionGlobalListResource",
      "fields": [
        {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "SessionGlobalListEntry"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "RcwPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "WcsWebinarRefModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Webinar title",
          "minLength": 1,
          "maxLength": 512,
          "x-sensitive-data": "masked",
          "example": "All-Hands Webinar",
          "name": "title",
          "required": true
        },
        {
          "type": "string",
          "description": "User-friendly description of the Webinar",
          "minLength": 0,
          "maxLength": 4096,
          "x-sensitive-data": "masked",
          "example": "Quarterly All-hands event to present recent news about our company to employees",
          "name": "description",
          "required": false
        },
        {
          "$ref": "RcwLinkedUserModel",
          "name": "host",
          "required": false
        }
      ]
    },
    {
      "name": "SessionGlobalListEntry",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Object creation time",
          "format": "date-time",
          "readOnly": true,
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Object last modification time",
          "format": "date-time",
          "readOnly": true,
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "$ref": "WcsWebinarRefModel",
          "name": "webinar",
          "required": true
        },
        {
          "type": "string",
          "description": "Session scheduled start time.",
          "format": "date-time",
          "name": "scheduledStartTime",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 30,
          "maximum": 43200,
          "description": "The duration of the Session in seconds.",
          "example": 1800,
          "name": "scheduledDuration",
          "required": true
        },
        {
          "type": "string",
          "description": "IANA-compatible time zone name (see https://www.iana.org/time-zones).",
          "maxLength": 64,
          "minLength": 3,
          "example": "America/New_York",
          "name": "timeZone",
          "required": true
        },
        {
          "type": "string",
          "description": "Localized time zone description.",
          "example": "Eastern Time (America/New_York)",
          "name": "localizedTimeZoneDescription",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The time offset (positive, in seconds) indicating how much in advance\n(comparing to \"scheduledStartTime\") panel members should join for the pre-webinar team sync\n",
          "minimum": 0,
          "default": 0,
          "example": 900,
          "name": "panelJoinTimeOffset",
          "required": false
        },
        {
          "type": "string",
          "description": "Session title. Can be left blank - then Webinar title should be used for presentation.",
          "maxLength": 512,
          "minLength": 0,
          "x-sensitive-data": "masked",
          "example": "Live Broadcasting US",
          "name": "title",
          "required": false
        },
        {
          "type": "string",
          "description": "User-friendly description of the Session. Can be left blank - then Webinar title should be used for presentation.",
          "maxLength": 4096,
          "minLength": 0,
          "x-sensitive-data": "masked",
          "example": "Live session for US-based participants",
          "name": "description",
          "required": false
        },
        {
          "type": "string",
          "description": "Session status (for the purposes of Configuration service)",
          "enum": [
            "Scheduled",
            "Active",
            "Finished"
          ],
          "example": "Scheduled",
          "name": "status",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "maxLength": 256,
          "minLength": 5,
          "description": "The URI to join the webinar as a host",
          "example": "https://v.ringcentral.com/w/join/de7yd8ew7yfsdfjh899843rgj",
          "name": "hostJoinUri",
          "required": false
        },
        {
          "type": "string",
          "description": "Session locale code. Can't be blank or null",
          "maxLength": 8,
          "minLength": 2,
          "example": "en-US",
          "name": "localeCode",
          "required": false
        }
      ]
    },
    {
      "name": "BridgePinsWithAliases",
      "fields": [
        {
          "$ref": "BridgePstnPins",
          "name": "pstn"
        },
        {
          "type": "string",
          "description": "Bridge short identifier (Web PIN). The digital unique code which is used to join to a meeting. If it is not specified\nwhile creation, then a code will be generated. If it is a default bridge, then this code is\nPersonal Meeting Identifier (PMI).\n\nNOTE: Changing this PIN via update method is deprecated. So to change Web PIN use the method:\n_*[PATCH] /rcvideo/v2/bridges/{bridgeId}/pin/web*_\n",
          "example": "018209241352",
          "name": "web"
        },
        {
          "type": "array",
          "description": "List of bridge aliases. An alias is a unique personal meeting name that can be specified for the default bridge.\nIt can be used to join to a meeting in the same way as the short identifier.\n",
          "example": [
            "joseph1990",
            "qa_team_2_lead"
          ],
          "items": {
            "type": "string"
          },
          "name": "aliases"
        }
      ]
    },
    {
      "name": "User",
      "fields": [
        {
          "type": "string",
          "description": "User account identifier",
          "example": "664287016",
          "name": "accountId",
          "required": true
        },
        {
          "type": "string",
          "description": "User extension identifier",
          "example": "664307016",
          "name": "extensionId",
          "required": true
        }
      ]
    },
    {
      "name": "RecordingsPreferences",
      "description": "Recordings preferences",
      "fields": [
        {
          "$ref": "EveryoneCanControl",
          "name": "everyoneCanControl"
        },
        {
          "$ref": "AutoShared",
          "name": "autoShared"
        }
      ]
    },
    {
      "name": "BridgeResponseSecurityPassword",
      "fields": [
        {
          "type": "string",
          "description": "Meeting password.\nThis field will be returned only if the request was done by bridge owner, his delegate or any user who has\nthe Super Admin privilege.\n",
          "example": "Wq123ygs15",
          "name": "plainText"
        },
        {
          "type": "string",
          "description": "Meeting password for PSTN users.\nThis field will be returned only if the request was done by bridge owner, his delegate or any user who has\nthe Super Admin privilege.\n",
          "example": "7492486829",
          "name": "pstn"
        },
        {
          "type": "string",
          "description": "Meeting password hash.\nThis field will be returned only if the request was done by bridge owner, his delegate or any user who has\nthe Super Admin privilege.\n",
          "example": "99e4f8e6a241fc71279449a9c8f46eef",
          "name": "joinQuery"
        }
      ]
    },
    {
      "name": "AutoShared",
      "description": "Controls whether recording can be auto shared",
      "fields": [
        {
          "type": "boolean",
          "description": "Controls whether preference is enabled",
          "example": true,
          "name": "enabled"
        },
        {
          "type": "boolean",
          "description": "Describes whether preference is locked on Service Web",
          "example": false,
          "name": "locked"
        }
      ]
    },
    {
      "name": "BridgePstnPins",
      "fields": [
        {
          "type": "string",
          "description": "Host PSTN PIN. If it is not specified while creation, then a PIN will be generated.",
          "example": "432331057631",
          "name": "host"
        },
        {
          "type": "string",
          "description": "Participant PSTN PIN. If it is not specified while creation, then a PIN will be generated.",
          "example": "013409241367",
          "name": "participant"
        }
      ]
    },
    {
      "name": "BridgePins",
      "fields": [
        {
          "$ref": "BridgePstnPins",
          "name": "pstn"
        },
        {
          "type": "string",
          "description": "Bridge short identifier (Web PIN). The digital unique code which is used to join to a meeting. If it is not specified\nwhile creation, then a code will be generated. If it is a default bridge, then this code is\nPersonal Meeting Identifier (PMI).\n\nNOTE: Changing this PIN via update method is deprecated. So to change Web PIN use the method:\n_*[PATCH] /rcvideo/v2/bridges/{bridgeId}/pin/web*_\n",
          "example": "018209241352",
          "name": "web"
        }
      ]
    },
    {
      "name": "BridgeRequestSecurity",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a meeting is password protected.\n\nBy default, Instant and Scheduled bridges are not password protected. For default (PMI) bridge, password\nprotection will be turned on and the password will be generated if it is not specified while creation.\n\nWhile creation to set password protection you should set this field to true and specify a password in the\n**password** field. If you want to change password or set password protection for an unprotected bridge,\nyou should set this field to true and specify a password in the **password** field in the update operation.\n\nTo make protected bridge as unprotected you should set this field to false in the update operation.\n",
          "example": true,
          "name": "passwordProtected"
        },
        {
          "type": "string",
          "description": "Specifies a password if bridge meetings should be password protected (passwordProtected field is true).\nBesides that, if the field is specified in the request but **passwordProtected** field is missing then\nit means that **passwordProtected** field is set to true.\n",
          "example": "Wq123ygs15",
          "name": "password"
        },
        {
          "type": "boolean",
          "description": "If true, only authenticated users can join to a meeting.",
          "default": false,
          "name": "noGuests"
        },
        {
          "type": "boolean",
          "description": "If true, only users have the same account can join to a meeting.",
          "default": false,
          "name": "sameAccount"
        },
        {
          "type": "boolean",
          "description": "If true, end to end encryption will be enabled for a meeting.",
          "default": false,
          "name": "e2ee"
        }
      ]
    },
    {
      "name": "BridgeResponse",
      "fields": [
        {
          "type": "string",
          "description": "Unique bridge identifier",
          "example": "iad41-c04-ndb256065cf14ae6a1832389d9c2e",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Custom name of a bridge",
          "example": "Weekly Meeting with Joseph",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Type of bridge. It specifies bridge life cycle.\n1) Instant - The bridge will be used for a meeting only once immediately after creation. Then it will be deleted.\n2) Scheduled - The bridge will be used for scheduled one or more meetings. If the bridge is not used for a long\ntime after the last meeting, then it will be deleted.\n3) PMI - The bridge will contain Personal Meeting Identifier owned by a user. It is the default user bridge.\nEach user may have only one default (PMI) bridge. Such bridge will be deleted only in case the user is deleted\nfrom the system.\n",
          "example": "Instant",
          "enum": [
            "Instant",
            "Scheduled",
            "PMI"
          ],
          "name": "type"
        },
        {
          "$ref": "User",
          "name": "host"
        },
        {
          "$ref": "BridgePinsWithAliases",
          "name": "pins"
        },
        {
          "$ref": "BridgeResponseSecurity",
          "name": "security"
        },
        {
          "$ref": "BridgePreferences",
          "name": "preferences"
        },
        {
          "$ref": "BridgeDiscovery",
          "name": "discovery"
        }
      ]
    },
    {
      "name": "BridgeResponseSecurity",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a meeting is password protected.",
          "name": "passwordProtected"
        },
        {
          "$ref": "BridgeResponseSecurityPassword",
          "name": "password"
        },
        {
          "type": "boolean",
          "description": "If true, only authenticated users can join to a meeting.",
          "example": false,
          "name": "noGuests"
        },
        {
          "type": "boolean",
          "description": "If true, only users have the same account can join to a meeting.",
          "example": false,
          "name": "sameAccount"
        },
        {
          "type": "boolean",
          "description": "If true, end to end encryption will be enabled for a meeting.",
          "default": false,
          "name": "e2ee"
        }
      ]
    },
    {
      "name": "CreateBridgeRequest",
      "fields": [
        {
          "type": "string",
          "description": "Custom name of a bridge",
          "example": "Weekly Meeting with Joseph",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Type of bridge. It specifies bridge life cycle.\n1) Instant - The bridge will be used for a meeting only once immediately after creation. Then it will be deleted.\n2) Scheduled - The bridge will be used for scheduled one or more meetings. If the bridge is not used for a long\ntime after the last meeting, then it will be deleted.\n3) PMI - The bridge will contain Personal Meeting Identifier owned by a user. It is the default user bridge.\nEach user may have only one default (PMI) bridge. Such bridge will be deleted only in case the user is deleted\nfrom the system.\n",
          "default": "Instant",
          "enum": [
            "Instant",
            "Scheduled",
            "PMI"
          ],
          "name": "type"
        },
        {
          "$ref": "BridgePins",
          "name": "pins"
        },
        {
          "$ref": "BridgeRequestSecurity",
          "name": "security"
        },
        {
          "$ref": "BridgePreferences",
          "name": "preferences"
        }
      ]
    },
    {
      "name": "BridgeDiscovery",
      "fields": [
        {
          "type": "string",
          "description": "URI that can be used to join to the meeting.\nIt contains password parameter only if the request was done by bridge owner, his delegate or any user who has\nthe Super Admin privilege.\n",
          "example": "https://v.ringcentral.com/join/018209241352?pw=99e4f8e6a241fc71279449a9c8f46eef",
          "name": "web"
        }
      ]
    },
    {
      "name": "BridgeJoinPstnPreferences",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies whether to play 'Announce yourself' prompt",
          "default": true,
          "name": "promptAnnouncement"
        },
        {
          "type": "boolean",
          "description": "Specifies whether to play 'There are X participants' prompt",
          "default": true,
          "name": "promptParticipants"
        }
      ]
    },
    {
      "name": "EveryoneCanControl",
      "description": "Controls whether participants can start and pause recording",
      "fields": [
        {
          "type": "boolean",
          "description": "Controls whether preference is enabled",
          "example": true,
          "name": "enabled"
        },
        {
          "type": "boolean",
          "description": "Describes whether preference is locked on Service Web",
          "example": false,
          "name": "locked"
        }
      ]
    },
    {
      "name": "BridgePreferences",
      "fields": [
        {
          "$ref": "BridgeJoinPreferences",
          "name": "join"
        },
        {
          "type": "string",
          "description": "Specifies enter and exit tones mode.\n1) On - Enter and exit tones switched on.\n2) Off - Enter and exit tones switched off.\n3) ExitOnly - Only exit tones switched on.\n4) EnterOnly - Only enter tones switched on.\n",
          "default": "Off",
          "enum": [
            "On",
            "Off",
            "ExitOnly",
            "EnterOnly"
          ],
          "name": "playTones"
        },
        {
          "type": "boolean",
          "description": "Specifies whether to play music on hold when alone",
          "default": true,
          "name": "musicOnHold"
        },
        {
          "type": "boolean",
          "description": "Specifies if participants can join to a meeting before host.\nDefault value depends on the bridge type:\n- default bridge (PMI) -> false\n- other types -> true\n",
          "example": true,
          "name": "joinBeforeHost"
        },
        {
          "type": "boolean",
          "description": "Specifies if screen sharing is allowed",
          "default": true,
          "name": "screenSharing"
        },
        {
          "type": "string",
          "enum": [
            "Auto",
            "ForceAuto",
            "User"
          ],
          "example": "User",
          "description": "Controls whether recordings are enabled automatically or by user decision",
          "name": "recordingsMode"
        },
        {
          "type": "string",
          "enum": [
            "Auto",
            "ForceAuto",
            "User"
          ],
          "example": "User",
          "description": "Controls whether transcriptions are enabled automatically or by user decision",
          "name": "transcriptionsMode"
        },
        {
          "$ref": "RecordingsPreferences",
          "name": "recordings"
        },
        {
          "type": "boolean",
          "default": true,
          "description": "Controls whether participants can start and pause transcription",
          "name": "allowEveryoneTranscribeMeetings"
        }
      ]
    },
    {
      "name": "BridgeJoinPreferences",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if audio is muted for meeting participants (in the preset after joining)",
          "default": false,
          "name": "audioMuted"
        },
        {
          "type": "boolean",
          "description": "Specifies if video is muted for meeting participants (in the preset after joining)",
          "default": false,
          "name": "videoMuted"
        },
        {
          "type": "string",
          "description": "Specifies rules for the waiting room before the host starts the meeting.\n1) Nobody - No waiting room. Participants are not waiting for meeting start.\n2) Everybody - All participants are waiting for meeting start.\n3) GuestsOnly - Only unauthenticated participants (guests) are waiting for meeting start.\n4) OtherAccount - Only participants who have other account are waiting for meeting start.\n\nDefault value depends on the bridge type:\n- PMI -> OtherAccount\n- Instant, Scheduled -> Nobody\n",
          "example": "Nobody",
          "enum": [
            "Nobody",
            "Everybody",
            "GuestsOnly",
            "OtherAccount"
          ],
          "name": "waitingRoomRequired"
        },
        {
          "$ref": "BridgeJoinPstnPreferences",
          "name": "pstn"
        }
      ]
    },
    {
      "name": "UpdateBridgeRequest",
      "fields": [
        {
          "type": "string",
          "description": "Custom name of a bridge",
          "example": "Weekly Meeting with Joseph",
          "name": "name"
        },
        {
          "$ref": "BridgePinsWithoutPstn",
          "name": "pins"
        },
        {
          "$ref": "BridgeRequestSecurity",
          "name": "security"
        },
        {
          "$ref": "BridgePreferences",
          "name": "preferences"
        }
      ]
    },
    {
      "name": "BridgePinsWithoutPstn",
      "fields": [
        {
          "type": "string",
          "description": "Bridge short identifier (Web PIN). The digital unique code which is used to join to a meeting. If it is not specified\nwhile creation, then a code will be generated. If it is a default bridge, then this code is\nPersonal Meeting Identifier (PMI).\n\nNOTE: Changing this PIN via update method is deprecated. So to change Web PIN use the method:\n_*[PATCH] /rcvideo/v2/bridges/{bridgeId}/pin/web*_\n",
          "example": "018209241352",
          "name": "web"
        }
      ]
    },
    {
      "name": "Host",
      "description": "Meeting host",
      "fields": [
        {
          "type": "string",
          "description": "Account id",
          "name": "accountId"
        },
        {
          "type": "string",
          "description": "Extension id",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Display name",
          "name": "displayName"
        }
      ]
    },
    {
      "name": "Paging",
      "description": "Paging information",
      "fields": [
        {
          "type": "string",
          "description": "Current offset token",
          "name": "currentPageToken",
          "required": true
        },
        {
          "type": "string",
          "description": "Next page offset token",
          "name": "nextPageToken",
          "required": false
        }
      ]
    },
    {
      "name": "CloudRecordings",
      "description": "Recordings page",
      "fields": [
        {
          "type": "array",
          "description": "Recordings array",
          "items": {
            "$ref": "CloudRecording"
          },
          "name": "recordings",
          "required": true
        },
        {
          "$ref": "Paging",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "CloudRecording",
      "description": "Recording information",
      "fields": [
        {
          "type": "string",
          "description": "Call id",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Short bridge id",
          "name": "shortId",
          "required": true
        },
        {
          "type": "string",
          "description": "Start time ISO 8601",
          "format": "date-time",
          "name": "startTime",
          "required": true
        },
        {
          "type": "integer",
          "description": "Meeting duration in seconds",
          "format": "int32",
          "example": 36,
          "name": "duration",
          "required": false
        },
        {
          "type": "string",
          "description": "Meeting name",
          "name": "displayName",
          "required": true
        },
        {
          "$ref": "Host",
          "name": "hostInfo",
          "required": true
        },
        {
          "type": "string",
          "description": "Link to the recording file. Not used anymore by Web team",
          "name": "mediaLink",
          "required": true
        },
        {
          "type": "string",
          "description": "Encrypted link to the recording file",
          "name": "url",
          "required": true
        },
        {
          "type": "string",
          "description": "Date after which recording will be deleted",
          "name": "expiresIn",
          "required": false
        }
      ]
    },
    {
      "name": "Delegate",
      "fields": [
        {
          "type": "string",
          "description": "Delegate id (equal as extension id of delegate)",
          "readOnly": true,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Delegate name",
          "readOnly": true,
          "name": "name",
          "required": false
        },
        {
          "type": "string",
          "description": "Delegate account id",
          "name": "accountId",
          "required": false
        },
        {
          "type": "string",
          "description": "Delegate extension id",
          "name": "extensionId",
          "required": true
        }
      ]
    },
    {
      "name": "DelegatorsListResult",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "Delegate"
          },
          "name": "items"
        }
      ]
    },
    {
      "name": "Meeting",
      "description": "Meeting information",
      "fields": [
        {
          "type": "string",
          "description": "Call id",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Bridge id",
          "name": "bridgeId",
          "required": true
        },
        {
          "type": "string",
          "description": "Short bridge id",
          "name": "shortId",
          "required": true
        },
        {
          "type": "string",
          "description": "Start time ISO 8601",
          "format": "date-time",
          "name": "startTime",
          "required": true
        },
        {
          "type": "integer",
          "description": "Duration second",
          "format": "int32",
          "example": 36,
          "name": "duration",
          "required": false
        },
        {
          "type": "string",
          "description": "Meetings name",
          "name": "displayName",
          "required": true
        },
        {
          "type": "string",
          "description": "Meeting type",
          "enum": [
            "Meeting",
            "Call"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "description": "Meeting status",
          "enum": [
            "InProgress",
            "Done"
          ],
          "name": "status",
          "required": true
        },
        {
          "$ref": "Host",
          "name": "hostInfo",
          "required": true
        },
        {
          "description": "Describe access rights which has participants to meeting",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "delete",
              "download",
              "share"
            ]
          },
          "name": "rights",
          "required": true
        },
        {
          "description": "During meeting AI team analyze code and after meeting finished generates text summary about this meeting",
          "type": "string",
          "name": "longSummary",
          "required": false
        },
        {
          "description": "During meeting AI team analyze code and after meeting finished generates text summary about this meeting",
          "type": "string",
          "name": "shortSummary",
          "required": false
        },
        {
          "description": "During meeting AI team analyze code and after meeting finished generates key words used in meeting",
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "keywords",
          "required": false
        },
        {
          "type": "array",
          "description": "List of the participants in the meeting",
          "items": {
            "$ref": "Participant"
          },
          "name": "participants",
          "required": true
        },
        {
          "type": "array",
          "description": "Recording information",
          "items": {
            "$ref": "Recording"
          },
          "name": "recordings",
          "required": true
        },
        {
          "type": "string",
          "description": "Chat location",
          "name": "chatUrl",
          "required": false
        }
      ]
    },
    {
      "name": "Recording",
      "description": "Recording information",
      "fields": [
        {
          "type": "string",
          "description": "Recording id",
          "name": "id",
          "required": true
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Recording start time",
          "name": "startTime",
          "required": false
        },
        {
          "type": "string",
          "description": "Secure Link to the recording file",
          "name": "url",
          "required": false
        },
        {
          "$ref": "JsValue",
          "name": "metadata",
          "required": false
        },
        {
          "type": "string",
          "description": "Recording processing status",
          "enum": [
            "Processing",
            "Processed",
            "Error",
            "Corrupted",
            "InProgress",
            "Purged",
            "Failed"
          ],
          "name": "status",
          "required": false
        },
        {
          "type": "string",
          "description": "Availability status",
          "enum": [
            "Alive",
            "Deleted",
            "Purged",
            "NotAvailable"
          ],
          "name": "availabilityStatus",
          "required": true
        },
        {
          "type": "string",
          "description": "During meeting AI team analyze code and after meeting finished generates text summary about this meeting",
          "name": "longSummary",
          "required": false
        },
        {
          "type": "string",
          "description": "During meeting AI team analyze code and after meeting finished generates text summary about this meeting",
          "name": "shortSummary",
          "required": false
        },
        {
          "type": "array",
          "description": "During meeting AI team analyze code and after meeting finished generates key words used in meeting",
          "items": {
            "type": "string"
          },
          "name": "keywords",
          "required": false
        }
      ]
    },
    {
      "name": "JsValue",
      "fields": []
    },
    {
      "name": "MeetingPage",
      "description": "Meetings page",
      "fields": [
        {
          "type": "array",
          "description": "Meetings array",
          "items": {
            "$ref": "Meeting"
          },
          "name": "meetings",
          "required": true
        },
        {
          "$ref": "Paging",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "Participant",
      "description": "Participant information",
      "fields": [
        {
          "type": "string",
          "description": "Participant type",
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "description": "id",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Account id",
          "name": "accountId",
          "required": false
        },
        {
          "type": "string",
          "description": "Extension id",
          "name": "extensionId",
          "required": false
        },
        {
          "type": "string",
          "description": "Display name",
          "name": "displayName",
          "required": false
        },
        {
          "type": "string",
          "description": "Caller id",
          "name": "callerId",
          "required": false
        },
        {
          "description": "Pass-thru parameter in join url",
          "type": "string",
          "name": "correlationId",
          "required": false
        }
      ]
    },
    {
      "name": "ApiVersionInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of API version",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Version of the RingCentral REST API",
          "name": "versionString"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Release date of this version",
          "name": "releaseDate"
        },
        {
          "type": "string",
          "description": "URI part determining the current version",
          "name": "uriString"
        }
      ]
    },
    {
      "name": "ApiVersionsList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of the API version",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "Full API version information: uri, number, release date",
          "items": {
            "$ref": "ApiVersionInfo"
          },
          "name": "apiVersions"
        },
        {
          "type": "string",
          "description": "Server version",
          "name": "serverVersion"
        },
        {
          "type": "string",
          "description": "Server revision",
          "name": "serverRevision"
        }
      ]
    },
    {
      "name": "GetTokenRequest",
      "description": "Token endpoint request parameters used in the \"Guest\" authorization flow\nwith the `guest` grant type\n",
      "fields": [
        {
          "type": "string",
          "enum": [
            "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
          ],
          "description": "Client assertion type for the `client_secret_jwt` or `private_key_jwt` client authentication types,\nas defined by [RFC-7523](https://datatracker.ietf.org/doc/html/rfc7523#section-2.2).\nThis parameter is mandatory if the client authentication is required and a client decided to use one of these authentication types\n",
          "name": "client_assertion_type",
          "required": false
        },
        {
          "type": "string",
          "description": "Client assertion (JWT) for the `client_secret_jwt` or `private_key_jwt` client authentication types,\nas defined by [RFC-7523](https://datatracker.ietf.org/doc/html/rfc7523#section-2.2).\nThis parameter is mandatory if the client authentication is required and a client decided to use one of these authentication types\n",
          "name": "client_assertion",
          "required": false
        },
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "authorization_code",
            "password",
            "refresh_token",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
            "urn:ietf:params:oauth:grant-type:device_code",
            "device_certificate",
            "partner_jwt",
            "guest",
            "personal_jwt",
            "otp",
            "ivr_pin"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "The list of application permissions (OAuth scopes) requested.\nBy default, it includes all permissions configured on\nthe client application registration\n",
          "name": "scope",
          "required": false
        },
        {
          "type": "string",
          "description": "The registered identifier of a client application.\nUsed to identify a client ONLY if the client authentication is not required and\ncorresponding credentials are not provided with this request\n",
          "example": "AZwEVwGEcfGet2PCouA7K6",
          "name": "client_id",
          "required": false
        },
        {
          "type": "string",
          "description": "The unique identifier of a client application instance. If not\nspecified, the derived or auto-generated value will be used\n",
          "name": "endpoint_id",
          "required": false
        },
        {
          "maximum": 3600,
          "minimum": 600,
          "type": "integer",
          "description": "Access token lifetime in seconds",
          "format": "int32",
          "default": 3600,
          "name": "access_token_ttl",
          "required": false
        },
        {
          "maximum": 2592000,
          "type": "integer",
          "description": "Refresh token lifetime in seconds",
          "format": "int32",
          "default": 604800,
          "name": "refresh_token_ttl",
          "required": false
        },
        {
          "type": "string",
          "description": "For `otp` grant type only.\nOne-time password code\n",
          "name": "code",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "For `authorization_code` grant type only. This is a callback URI which determines where the response\nis sent. The value of this parameter must exactly match one of\nthe URIs you have provided for your app upon registration\n",
          "name": "redirect_uri",
          "required": false
        },
        {
          "type": "string",
          "description": "For `authorization_code` grant type only.\nThe code verifier as defined by  the PKCE specification -\n[RFC-7636 \"Proof Key for Code Exchange by OAuth Public Clients\"](https://datatracker.ietf.org/doc/html/rfc7636)\n",
          "name": "code_verifier",
          "required": false
        },
        {
          "type": "string",
          "description": "For `password` grant type only. User login name: email or phone number in E.164 format\n",
          "name": "username",
          "required": true
        },
        {
          "type": "string",
          "description": "For `password` grant type only. User's password",
          "format": "password",
          "name": "password",
          "required": true
        },
        {
          "type": "string",
          "deprecated": true,
          "description": "For `password` grant type only. Optional. Extension short number. If a company number\nis specified as a username, and extension is not specified, the\nserver will attempt to authenticate client as main company administrator\n\nDEPRECATED: use extension number embedded into username string like `+16501234567*101`\n",
          "name": "extension",
          "required": false
        },
        {
          "type": "string",
          "deprecated": true,
          "description": "IVR pin for pin-based authentication.\n\nDEPRECATED: use a dedicated `ivr_pin` grant type instead\n",
          "name": "pin",
          "required": false
        },
        {
          "type": "string",
          "description": "For `urn:ietf:params:oauth:grant-type:jwt-bearer` or `partner_jwt` grant types only.\nAuthorization grant assertion (JWT)\nas defined by [RFC-7523](https://datatracker.ietf.org/doc/html/rfc7523#section-2.1).\n",
          "name": "assertion",
          "required": true
        },
        {
          "type": "string",
          "description": "For `refresh_token` grant type only. Previously issued refresh token.\n",
          "name": "refresh_token",
          "required": true
        },
        {
          "type": "string",
          "description": "For `ivr_pin` grant type only. User's IVR pin.",
          "name": "ivr_pin",
          "required": true
        },
        {
          "type": "string",
          "description": "For `urn:ietf:params:oauth:grant-type:device_code` grant type only.\nThe device verification code as defined by [RFC-8628](https://datatracker.ietf.org/doc/html/rfc8628#section-3.4)\n",
          "name": "device_code",
          "required": true
        },
        {
          "type": "string",
          "description": "RingCentral Brand identifier.",
          "name": "brand_id",
          "required": true
        },
        {
          "type": "string",
          "description": "RingCentral internal account ID",
          "name": "account_id",
          "required": true
        },
        {
          "type": "string",
          "description": "The ID of the account on RingCentral partner's side",
          "name": "partner_account_id",
          "required": true
        },
        {
          "type": "string",
          "description": "Resource type for the guest access.",
          "name": "resource_type",
          "required": true
        },
        {
          "type": "string",
          "description": "Resource URL for the guest access.",
          "name": "resource",
          "required": true
        }
      ]
    },
    {
      "name": "TokenInfo",
      "fields": [
        {
          "type": "string",
          "description": "OAuth access token to pass to subsequent API requests",
          "example": "U1BCMDFUMDRKV1MwMXxzLFSvXdw5PHMsVLEn_MrtcyxUsw",
          "name": "access_token",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Access token TTL (time-to-live) in seconds",
          "example": 7199,
          "name": "expires_in",
          "required": true
        },
        {
          "type": "string",
          "description": "OAuth refresh token (if issued)\n",
          "example": "U1BCMDFUMDRKV1MwMXxzLFL4ec6A0XMsUv9wLriecyxS_w",
          "name": "refresh_token",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Refresh token TTL (time-to-live) in seconds",
          "example": 604799,
          "name": "refresh_token_expires_in",
          "required": false
        },
        {
          "type": "string",
          "description": "The list of space separated application permissions (OAuth scopes)\n",
          "example": "AccountInfo CallLog ExtensionInfo Messages SMS",
          "name": "scope",
          "required": true
        },
        {
          "type": "string",
          "description": "Type of the token. The only supported value is `bearer`. This value should be used when specifying access token in `Authorization` header of subsequent API requests",
          "enum": [
            "bearer"
          ],
          "example": "bearer",
          "name": "token_type",
          "required": true
        },
        {
          "type": "string",
          "description": "Token owner's identifier. Contains RingCentral user (extension) ID",
          "example": "256440016",
          "name": "owner_id",
          "required": false
        },
        {
          "type": "string",
          "description": "Client application instance identifier that matches the value provided by the client,\nor generated by the server if a client has not provided this value\n",
          "example": "8zXq6oaLT7WvwWITlGiA1A",
          "name": "endpoint_id",
          "required": false
        },
        {
          "type": "string",
          "description": "OpenID Connect ID token (if OpenID Connect flow was activated during authorization)",
          "name": "id_token",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Remaining time in seconds until session expiration due to absolute timeout.\nReturned only if absolute session timeout is enforced\n",
          "name": "session_expires_in",
          "required": false
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Absolute value of session expiration time in ISO date formatted string.\nReturned only if absolute session timeout is enforced\n",
          "example": "2023-04-01T12:00:01Z",
          "name": "session_expiration_time",
          "required": false
        },
        {
          "type": "string",
          "description": "OAuth session ID",
          "name": "session_id",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Nominal value of session idle timeout in seconds.\nReturned only if idle session timeout is enforced\n",
          "name": "session_idle_timeout",
          "required": false
        }
      ]
    },
    {
      "name": "IvrPinTokenRequest",
      "description": "Token endpoint request parameters used in the \"IVR Pin\" authorization flow with the `ivr_pin` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "ivr_pin"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "For `ivr_pin` grant type only. User's IVR pin.",
          "name": "ivr_pin",
          "required": true
        }
      ]
    },
    {
      "name": "ClientCredentialsBase",
      "description": "Token endpoint request parameters used in the \"Client Credentials\" authorization flow\nwith the `client_credentials` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "client_credentials"
          ],
          "name": "grant_type",
          "required": true
        }
      ]
    },
    {
      "name": "ClientCredentialsTokenRequest",
      "description": "Token endpoint request parameters used in the \"Client Credentials\" authorization flow\nwith the `client_credentials` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "client_credentials"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "RingCentral Brand identifier",
          "name": "brand_id",
          "required": true
        },
        {
          "type": "string",
          "description": "RingCentral internal account ID",
          "name": "account_id",
          "required": true
        },
        {
          "type": "string",
          "description": "The ID of the account on RingCentral partner's side",
          "name": "partner_account_id",
          "required": true
        }
      ]
    },
    {
      "name": "DeviceCodeTokenRequest",
      "description": "Token endpoint request parameters used in the \"Device Authorization\" flow\nwith the `urn:ietf:params:oauth:grant-type:device_code` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "urn:ietf:params:oauth:grant-type:device_code"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "For `urn:ietf:params:oauth:grant-type:device_code` grant type only.\nThe device verification code as defined by [RFC-8628](https://datatracker.ietf.org/doc/html/rfc8628#section-3.4)\n",
          "name": "device_code",
          "required": true
        }
      ]
    },
    {
      "name": "ClientAuthJwtModel",
      "fields": [
        {
          "type": "string",
          "enum": [
            "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
          ],
          "description": "Client assertion type for the `client_secret_jwt` or `private_key_jwt` client authentication types,\nas defined by [RFC-7523](https://datatracker.ietf.org/doc/html/rfc7523#section-2.2).\nThis parameter is mandatory if the client authentication is required and a client decided to use one of these authentication types\n",
          "name": "client_assertion_type"
        },
        {
          "type": "string",
          "description": "Client assertion (JWT) for the `client_secret_jwt` or `private_key_jwt` client authentication types,\nas defined by [RFC-7523](https://datatracker.ietf.org/doc/html/rfc7523#section-2.2).\nThis parameter is mandatory if the client authentication is required and a client decided to use one of these authentication types\n",
          "name": "client_assertion"
        }
      ]
    },
    {
      "name": "ClientCredentialsByAccount",
      "description": "Token endpoint request parameters used in the \"Client Credentials\" authorization flow\nwith the `client_credentials` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "client_credentials"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "RingCentral internal account ID",
          "name": "account_id",
          "required": true
        }
      ]
    },
    {
      "name": "GuestTokenRequest",
      "description": "Token endpoint request parameters used in the \"Guest\" authorization flow\nwith the `guest` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "guest"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "RingCentral Brand identifier.",
          "name": "brand_id",
          "required": false
        },
        {
          "type": "string",
          "description": "Resource type for the guest access.",
          "name": "resource_type",
          "required": true
        },
        {
          "type": "string",
          "description": "Resource URL for the guest access.",
          "name": "resource",
          "required": true
        }
      ]
    },
    {
      "name": "AuthCodeTokenRequest",
      "description": "Token endpoint request parameters used in the \"Authorization Code\" and \"Authorization code with PKCE\" flows\nwith the `authorization_code` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "authorization_code"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "For `authorization_code` grant type only. User's authorization code",
          "name": "code",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "For `authorization_code` grant type only. This is a callback URI which determines where the response\nis sent. The value of this parameter must exactly match one of\nthe URIs you have provided for your app upon registration\n",
          "name": "redirect_uri",
          "required": false
        },
        {
          "type": "string",
          "description": "For `authorization_code` grant type only.\nThe code verifier as defined by  the PKCE specification -\n[RFC-7636 \"Proof Key for Code Exchange by OAuth Public Clients\"](https://datatracker.ietf.org/doc/html/rfc7636)\n",
          "name": "code_verifier",
          "required": false
        }
      ]
    },
    {
      "name": "ClientCredentialsByBrand",
      "description": "Token endpoint request parameters used in the \"Client Credentials\" authorization flow\nwith the `client_credentials` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "client_credentials"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "RingCentral Brand identifier",
          "name": "brand_id",
          "required": true
        }
      ]
    },
    {
      "name": "ClientCredentialsByPartnerAccount",
      "description": "Token endpoint request parameters used in the \"Client Credentials\" authorization flow\nwith the `client_credentials` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "client_credentials"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "RingCentral Brand identifier",
          "name": "brand_id",
          "required": true
        },
        {
          "type": "string",
          "description": "The ID of the account on RingCentral partner's side",
          "name": "partner_account_id",
          "required": true
        }
      ]
    },
    {
      "name": "JwtTokenRequest",
      "description": "Token endpoint request parameters used in the \"Personal JWT\", \"JWT Bearer\" and \"Partner JWT\" authorization flows\nwith the `urn:ietf:params:oauth:grant-type:jwt-bearer` and `partner_jwt` grant types\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
            "partner_jwt"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "For `urn:ietf:params:oauth:grant-type:jwt-bearer` or `partner_jwt` grant types only.\nAuthorization grant assertion (JWT)\nas defined by [RFC-7523](https://datatracker.ietf.org/doc/html/rfc7523#section-2.1).\n",
          "name": "assertion",
          "required": true
        }
      ]
    },
    {
      "name": "BaseTokenRequest",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "authorization_code",
            "password",
            "refresh_token",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
            "urn:ietf:params:oauth:grant-type:device_code",
            "device_certificate",
            "partner_jwt",
            "guest",
            "personal_jwt",
            "otp",
            "ivr_pin"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "The list of application permissions (OAuth scopes) requested.\nBy default, it includes all permissions configured on\nthe client application registration\n",
          "name": "scope",
          "required": false
        },
        {
          "type": "string",
          "description": "The registered identifier of a client application.\nUsed to identify a client ONLY if the client authentication is not required and\ncorresponding credentials are not provided with this request\n",
          "example": "AZwEVwGEcfGet2PCouA7K6",
          "name": "client_id",
          "required": false
        },
        {
          "type": "string",
          "description": "The unique identifier of a client application instance. If not\nspecified, the derived or auto-generated value will be used\n",
          "name": "endpoint_id",
          "required": false
        },
        {
          "maximum": 3600,
          "minimum": 600,
          "type": "integer",
          "description": "Access token lifetime in seconds",
          "format": "int32",
          "default": 3600,
          "name": "access_token_ttl",
          "required": false
        },
        {
          "maximum": 2592000,
          "type": "integer",
          "description": "Refresh token lifetime in seconds",
          "format": "int32",
          "default": 604800,
          "name": "refresh_token_ttl",
          "required": false
        }
      ]
    },
    {
      "name": "RefreshTokenRequest",
      "description": "Token endpoint request parameters used in the \"Refresh Token\" flow\nwith the `refresh_token` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "refresh_token"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "For `refresh_token` grant type only. Previously issued refresh token.\n",
          "name": "refresh_token",
          "required": true
        }
      ]
    },
    {
      "name": "OtpTokenRequest",
      "description": "Token endpoint request parameters used in the \"One-time Password\" (OTP) authorization flow\nwith the `otp` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "otp"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "For `otp` grant type only.\nOne-time password code\n",
          "name": "code",
          "required": true
        }
      ]
    },
    {
      "name": "RopcTokenRequest",
      "description": "Token endpoint request parameters used in the \"Password\" (also known as \"Resource Owner Password Credentials\" - ROPC)\nauthorization flow with the `password` grant type\n",
      "fields": [
        {
          "type": "string",
          "description": "Grant type",
          "enum": [
            "password"
          ],
          "name": "grant_type",
          "required": true
        },
        {
          "type": "string",
          "description": "For `password` grant type only. User login name: email or phone number in E.164 format\n",
          "name": "username",
          "required": true
        },
        {
          "type": "string",
          "description": "For `password` grant type only. User's password",
          "format": "password",
          "name": "password",
          "required": true
        },
        {
          "type": "string",
          "deprecated": true,
          "description": "For `password` grant type only. Optional. Extension short number. If a company number\nis specified as a username, and extension is not specified, the\nserver will attempt to authenticate client as main company administrator\n\nDEPRECATED: use extension number embedded into username string like `+16501234567*101`\n",
          "name": "extension",
          "required": false
        },
        {
          "type": "string",
          "deprecated": true,
          "description": "IVR pin for pin-based authentication.\n\nDEPRECATED: use a dedicated `ivr_pin` grant type instead\n",
          "name": "pin",
          "required": false
        }
      ]
    },
    {
      "name": "AuthorizeRequest",
      "fields": [
        {
          "type": "string",
          "description": "Determines authorization flow type. The only supported value is `code` which corresponds to OAuth 2.0 \"Authorization Code Flow\"\n",
          "enum": [
            "code"
          ],
          "name": "response_type",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "This is the URI where the Authorization Server redirects the User Agent to at the end of the authorization flow.\nThe value of this parameter must exactly match one of the URIs registered for this client application.\nThis parameter is required if there are more than one redirect URIs registered for the app.\n",
          "name": "redirect_uri",
          "required": false
        },
        {
          "type": "string",
          "description": "The registered identifier of a client application",
          "example": "AZwEVwGEcfGet2PCouA7K6",
          "name": "client_id",
          "required": true
        },
        {
          "type": "string",
          "description": "An opaque value used by the client to maintain state between the request and callback.\nThe authorization server includes this value when redirecting the User Agent back\nto the client. The parameter SHOULD be used for preventing cross-site request forgery attacks.\n",
          "name": "state",
          "required": false
        },
        {
          "type": "string",
          "description": "The list of requested OAuth scopes (space separated)",
          "name": "scope",
          "required": false
        },
        {
          "type": "string",
          "description": "Specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User.\n",
          "enum": [
            "page",
            "popup",
            "touch",
            "mobile"
          ],
          "default": "page",
          "name": "display",
          "required": false
        },
        {
          "type": "string",
          "description": "Space-delimited, case-sensitive list of ASCII string values that specifies whether the Authorization Server prompts the End-User for\nre-authentication and consent. The defined values are:\n\n- `login` - RingCentral native login form,\n- `sso` - Single Sign-On login form,\n- `consent` - form to show the requested scope and prompt user for consent.\n\nEither `login` or `sso` (or both) must be specified. The default\nvalue is `login sso`\n",
          "default": "login sso",
          "name": "prompt",
          "required": false
        },
        {
          "type": "string",
          "description": "End-User's preferred languages and scripts for the user interface, represented as a space-separated list of\n[RFC-5646](https://datatracker.ietf.org/doc/html/rfc5646) language tag values, ordered by preference.\n\nIf this parameter is provided, its value overrides 'Accept-Language' header value and 'localeId' parameter value (if any)\n",
          "example": "en-US",
          "name": "ui_locales",
          "required": false
        },
        {
          "type": "string",
          "description": "The code challenge value as defined by the PKCE specification -\n[RFC-7636 \"Proof Key for Code Exchange by OAuth Public Clients\"](https://datatracker.ietf.org/doc/html/rfc7636)\n",
          "name": "code_challenge",
          "required": false
        },
        {
          "type": "string",
          "description": "The code challenge method as defined by the PKCE specification -\n[RFC-7636 \"Proof Key for Code Exchange by OAuth Public Clients\"](https://datatracker.ietf.org/doc/html/rfc7636)\n",
          "enum": [
            "plain",
            "S256"
          ],
          "default": "plain",
          "name": "code_challenge_method",
          "required": false
        },
        {
          "type": "string",
          "description": "String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token.\n",
          "name": "nonce",
          "required": false
        },
        {
          "type": "string",
          "description": "Login form user interface options (space-separated). By default, the UI options that are registered for this client application will be used\n",
          "name": "ui_options",
          "required": false
        },
        {
          "type": "string",
          "description": "Hint to the Authorization Server about the login identifier the End-User might use to log in.",
          "name": "login_hint",
          "required": false
        },
        {
          "type": "string",
          "description": "RingCentral Brand identifier. If it is not provided in the request,\nserver will try to determine brand from the client application profile.\n",
          "example": "1210",
          "name": "brand_id",
          "required": false
        },
        {
          "type": "string",
          "deprecated": true,
          "name": "accept_language",
          "required": false
        }
      ]
    },
    {
      "name": "RevokeTokenRequest",
      "fields": [
        {
          "type": "string",
          "description": "Access or refresh token to be revoked (along with the entire OAuth session)",
          "name": "token",
          "required": true
        },
        {
          "type": "string",
          "enum": [
            "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
          ],
          "description": "Client assertion type for the `client_secret_jwt` or `private_key_jwt` client authentication types,\nas defined by [RFC-7523](https://datatracker.ietf.org/doc/html/rfc7523#section-2.2).\nThis parameter is mandatory if the client authentication is required and a client decided to use one of these authentication types\n",
          "name": "client_assertion_type",
          "required": false
        },
        {
          "type": "string",
          "description": "Client assertion (JWT) for the `client_secret_jwt` or `private_key_jwt` client authentication types,\nas defined by [RFC-7523](https://datatracker.ietf.org/doc/html/rfc7523#section-2.2).\nThis parameter is mandatory if the client authentication is required and a client decided to use one of these authentication types\n",
          "name": "client_assertion",
          "required": false
        }
      ]
    },
    {
      "name": "PostalAddress",
      "description": "Postal address/location",
      "fields": [
        {
          "type": "string",
          "description": "Street address",
          "maxLength": 256,
          "example": "20 Davis Dr",
          "name": "street",
          "required": true
        },
        {
          "type": "string",
          "description": "Street address (2nd line)",
          "maxLength": 256,
          "name": "street2",
          "required": false
        },
        {
          "type": "string",
          "description": "City name",
          "maxLength": 64,
          "example": "Belmont",
          "name": "city",
          "required": true
        },
        {
          "description": "State or province information in the target country",
          "maxLength": 64,
          "type": "string",
          "example": "CA",
          "name": "state",
          "required": false
        },
        {
          "description": "Postal code in the target country",
          "type": "string",
          "maxLength": 10,
          "example": "94002",
          "name": "zip",
          "required": true
        },
        {
          "description": "ISO-3166-1 2-letter country code (alpha2)",
          "type": "string",
          "maxLength": 2,
          "minLength": 2,
          "example": "US",
          "name": "country",
          "required": true
        }
      ]
    },
    {
      "name": "BasicContactInfoWithPhone",
      "description": "Personal contact information",
      "fields": [
        {
          "description": "Given name",
          "type": "string",
          "maxLength": 64,
          "example": "John",
          "name": "firstName"
        },
        {
          "description": "Family name",
          "type": "string",
          "maxLength": 64,
          "example": "Smith",
          "name": "lastName"
        },
        {
          "description": "Contact email",
          "type": "string",
          "format": "email",
          "maxLength": 64,
          "example": "john.smith@acme.com",
          "name": "email"
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "contactPhone"
        }
      ]
    },
    {
      "name": "ServiceInfoUBrand",
      "description": "Account sub-brand information",
      "fields": [
        {
          "type": "string",
          "description": "Sub-brand unique ID",
          "example": "111.222",
          "name": "id"
        }
      ]
    },
    {
      "name": "AccountInfo",
      "fields": [
        {
          "description": "Internal identifier of RingCentral account",
          "type": "string",
          "example": "8000012345",
          "name": "id",
          "required": true
        },
        {
          "description": "External account ID. Used as a primary key to link accounts between\nRingCentral and partner systems.\n",
          "type": "string",
          "maxLength": 30,
          "example": "acme-us-12345",
          "name": "externalAccountId",
          "required": false
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "mainNumber",
          "required": false
        },
        {
          "type": "string",
          "description": "Status of an account",
          "enum": [
            "Initial",
            "Unconfirmed",
            "Confirmed",
            "Disabled"
          ],
          "name": "status",
          "required": true
        },
        {
          "description": "Company name",
          "type": "string",
          "maxLength": 64,
          "example": "Acme Inc.",
          "name": "companyName",
          "required": false
        },
        {
          "$ref": "PostalAddress",
          "name": "companyAddress",
          "required": false
        },
        {
          "$ref": "ServiceInfoV2",
          "name": "serviceInfo",
          "required": true
        },
        {
          "$ref": "SystemUserContactInfo",
          "name": "contactInfo",
          "required": false
        },
        {
          "type": "string",
          "description": "Opportunity identifier (typically created by SalesForce)",
          "example": "0061800000DwZzJAAV",
          "name": "opportunityId",
          "required": false
        }
      ]
    },
    {
      "name": "ServiceInfoPlanV2",
      "description": "Information on account service plan",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a service plan",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a service plan",
          "name": "name"
        }
      ]
    },
    {
      "name": "BasicContactInfo",
      "description": "Personal contact information",
      "fields": [
        {
          "description": "Given name",
          "type": "string",
          "maxLength": 64,
          "example": "John",
          "name": "firstName"
        },
        {
          "description": "Family name",
          "type": "string",
          "maxLength": 64,
          "example": "Smith",
          "name": "lastName"
        },
        {
          "description": "Contact email",
          "type": "string",
          "format": "email",
          "maxLength": 64,
          "example": "john.smith@acme.com",
          "name": "email"
        }
      ]
    },
    {
      "name": "ServiceInfoV2",
      "description": "Service Plan information (billing package, brand, etc.)",
      "fields": [
        {
          "$ref": "ServiceInfoPackage",
          "name": "package",
          "required": true
        },
        {
          "$ref": "ServiceInfoPackage",
          "name": "partnerPackage",
          "required": false
        },
        {
          "$ref": "ServiceInfoBrand",
          "name": "brand",
          "required": false
        },
        {
          "$ref": "ServiceInfoContractedCountryId",
          "name": "contractedCountry",
          "required": false
        },
        {
          "$ref": "ServiceInfoUBrand",
          "name": "uBrand",
          "required": false
        },
        {
          "$ref": "ServiceInfoPlanV2",
          "name": "servicePlan",
          "required": false
        }
      ]
    },
    {
      "name": "ServiceInfoContractedCountryId",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        }
      ]
    },
    {
      "name": "ServiceInfoBrand",
      "description": "Internal RC \"brand\" information",
      "fields": [
        {
          "type": "string",
          "description": "RingCentral brand ID",
          "readOnly": true,
          "example": "6699",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "RingCentral brand name",
          "readOnly": true,
          "example": "Partner 1",
          "name": "name",
          "required": true
        }
      ]
    },
    {
      "name": "SystemUserContactInfo",
      "description": "Personal contact information",
      "fields": [
        {
          "description": "Given name",
          "type": "string",
          "maxLength": 64,
          "example": "John",
          "name": "firstName",
          "required": true
        },
        {
          "description": "Family name",
          "type": "string",
          "maxLength": 64,
          "example": "Smith",
          "name": "lastName",
          "required": true
        },
        {
          "description": "Contact email",
          "type": "string",
          "format": "email",
          "maxLength": 64,
          "example": "john.smith@acme.com",
          "name": "email",
          "required": true
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "contactPhone",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of System user extension",
          "name": "id",
          "required": true
        },
        {
          "description": "Short number of an extension.\nActual max length depends on system length limit for extension.\n",
          "type": "string",
          "pattern": "^\\d{3,8}$",
          "minLength": 1,
          "maxLength": 8,
          "example": "205",
          "name": "extensionNumber",
          "required": true
        }
      ]
    },
    {
      "name": "ServiceInfoPackage",
      "description": "Billing package information",
      "fields": [
        {
          "type": "string",
          "description": "Billing package ID",
          "example": "555",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Billing package version",
          "enum": [
            "1"
          ],
          "name": "version",
          "required": true
        }
      ]
    },
    {
      "name": "AddDeviceToInventoryResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "required": [
              "id"
            ],
            "$ref": "AddDeviceToInventoryResponseDevices"
          },
          "name": "devices",
          "required": true
        },
        {
          "$ref": "SiteBasicInfo",
          "name": "site",
          "required": true
        }
      ]
    },
    {
      "name": "SiteBasicInfo",
      "fields": [
        {
          "type": "string",
          "description": "Site extension identifier or \"main-site\" for the main site",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Site name",
          "name": "name",
          "required": true
        }
      ]
    },
    {
      "name": "DeleteDeviceFromInventoryResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "DeleteDeviceFromInventoryResponseRecords"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "AddDeviceToInventoryRequest",
      "fields": [
        {
          "type": "string",
          "description": "Device type. Use `OtherPhone` to indicate BYOD (customer provided) device\n",
          "enum": [
            "OtherPhone"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "format": "int32",
          "description": "Quantity of devices (total quantity should not exceed 50)",
          "name": "quantity",
          "required": true
        },
        {
          "$ref": "AddDeviceToInventoryRequestSite",
          "name": "site",
          "required": false
        }
      ]
    },
    {
      "name": "DeleteDeviceFromInventoryRequest",
      "fields": [
        {
          "type": "array",
          "description": "List of internal identifiers of the devices that should be deleted",
          "items": {
            "$ref": "DeleteDeviceFromInventoryRequestRecords"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "DeletePhoneNumbersResponse",
      "fields": [
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "DeletePhoneNumbersResponseItem"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "EnumeratedPagingModel",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "description": "Current page size, describes how many items are in each page.\nMatches \"perPage\" parameter from the request.\n",
          "example": 50,
          "name": "perPage",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "description": "The current page number. 1-indexed, so the first page is 1\nby default. May be omitted if result is empty (because non-existent page\nwas specified or perPage=0 was requested)\n",
          "example": 5,
          "name": "page",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The zero-based number of the first element on the current page.\nOmitted if the page is omitted or result is empty\n",
          "example": 0,
          "name": "pageStart",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The zero-based index of the last element on the current page.\nOmitted if the page is omitted or result is empty\n",
          "example": 5,
          "name": "pageEnd",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The total number of pages in a dataset. May be omitted for\nsome resources due to performance reasons\n",
          "example": 25,
          "name": "totalPages",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The total number of elements in a dataset. May be omitted for\nsome resource due to performance reasons\n",
          "example": 25,
          "name": "totalElements",
          "required": false
        }
      ]
    },
    {
      "name": "AccountPhoneNumberList",
      "fields": [
        {
          "type": "array",
          "description": "List of account phone numbers",
          "items": {
            "$ref": "AccountPhoneNumberInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "DeletePhoneNumbersRequest",
      "fields": [
        {
          "type": "array",
          "description": "List of phone numbers or phone IDs to be deleted",
          "minItems": 1,
          "items": {
            "$ref": "DeletePhoneNumbersRequestItem"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "DeletePhoneNumbersResponseItem",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates if this item was processed successfully during bulk operation.\nIf false, `bulkItemErrors` attribute contains the list of errors\n",
          "example": true,
          "name": "bulkItemSuccessful",
          "required": true
        },
        {
          "type": "array",
          "description": "The list of errors occurred during processing of particular item of bulk operation.\nReturned only if `bulkItemSuccessful` is false\n",
          "minItems": 1,
          "items": {
            "$ref": "ApiError"
          },
          "name": "bulkItemErrors",
          "required": false
        },
        {
          "type": "string",
          "pattern": "^[1-9]\\d{1,14}$",
          "description": "Internal unique identifier of a phone number",
          "maxLength": 18,
          "example": "1162820004",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "phoneNumber",
          "required": false
        }
      ]
    },
    {
      "name": "DeletePhoneNumbersRequestItem",
      "description": "The indication of a number to be deleted - either `id` or `phoneNumber` must be specified.",
      "fields": [
        {
          "type": "string",
          "pattern": "^[1-9]\\d{1,14}$",
          "description": "Internal unique identifier of a phone number",
          "maxLength": 18,
          "example": "1162820004",
          "name": "id"
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "ContactCenterProvider",
      "description": "CCRN (Contact Center Routing Number) provider. If not specified\nthen the default value 'InContact/North America' is used, its ID is '1'\n",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the provider",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Provider's name",
          "name": "name"
        }
      ]
    },
    {
      "name": "AccountPhoneNumberInfo",
      "fields": [
        {
          "type": "string",
          "pattern": "^[1-9]\\d{1,14}$",
          "description": "Internal unique identifier of a phone number",
          "maxLength": 18,
          "example": "1162820004",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "phoneNumber",
          "required": true
        },
        {
          "type": "string",
          "description": "Type of a phone number",
          "nullable": true,
          "enum": [
            "VoiceFax",
            "VoiceOnly",
            "FaxOnly"
          ],
          "name": "type",
          "required": false
        },
        {
          "description": "Indicates if a number is toll or toll-free",
          "type": "string",
          "enum": [
            "Toll",
            "TollFree"
          ],
          "example": "Toll",
          "name": "tollType",
          "required": true
        },
        {
          "type": "string",
          "description": "Usage type of a phone number",
          "enum": [
            "MainCompanyNumber",
            "DirectNumber",
            "Inventory",
            "InventoryPartnerBusinessMobileNumber",
            "PartnerBusinessMobileNumber",
            "AdditionalCompanyNumber",
            "CompanyNumber",
            "PhoneLine",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "ContactCenterNumber",
            "ConferencingNumber",
            "MeetingsNumber",
            "NumberStorage",
            "BusinessMobileNumber",
            "ELIN"
          ],
          "name": "usageType",
          "required": true
        },
        {
          "type": "boolean",
          "name": "byocNumber",
          "required": false
        },
        {
          "$ref": "ContactCenterProvider",
          "name": "contactCenterProvider",
          "required": false
        },
        {
          "type": "string",
          "description": "Status of a phone number. If the value is `Normal`, the phone\nnumber is ready to be used. Otherwise, it is an external number not yet\nported to RingCentral\n",
          "enum": [
            "Normal",
            "Pending",
            "PortedIn",
            "Temporary",
            "Unknown"
          ],
          "name": "status",
          "required": true
        },
        {
          "description": "Reference to the extension this number is assigned to. Omitted for company numbers",
          "required": false,
          "$ref": "AccountPhoneNumberInfoExtension",
          "name": "extension"
        }
      ]
    },
    {
      "name": "BulkItemResultModel",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates if this item was processed successfully during bulk operation.\nIf false, `bulkItemErrors` attribute contains the list of errors\n",
          "example": true,
          "name": "bulkItemSuccessful",
          "required": true
        },
        {
          "type": "array",
          "description": "The list of errors occurred during processing of particular item of bulk operation.\nReturned only if `bulkItemSuccessful` is false\n",
          "minItems": 1,
          "items": {
            "$ref": "ApiError"
          },
          "name": "bulkItemErrors",
          "required": false
        }
      ]
    },
    {
      "name": "AssignPhoneNumberRequest",
      "fields": [
        {
          "type": "string",
          "description": "Type of a phone number",
          "nullable": true,
          "enum": [
            "VoiceFax",
            "VoiceOnly",
            "FaxOnly"
          ],
          "name": "type",
          "required": false
        },
        {
          "type": "string",
          "description": "Target usage type of phone number (only listed values are supported)",
          "enum": [
            "MainCompanyNumber",
            "CompanyNumber",
            "DirectNumber",
            "ContactCenterNumber"
          ],
          "name": "usageType",
          "required": true
        },
        {
          "required": false,
          "$ref": "AssignPhoneNumberRequestExtension",
          "name": "extension"
        },
        {
          "type": "string",
          "name": "costCenterId",
          "required": false
        },
        {
          "$ref": "ContactCenterProvider",
          "name": "contactCenterProvider",
          "required": false
        }
      ]
    },
    {
      "name": "ReplacePhoneNumberRequest",
      "fields": [
        {
          "type": "string",
          "pattern": "^[1-9]\\d{1,14}$",
          "description": "Internal unique identifier of a phone number",
          "maxLength": 18,
          "example": "1162820004",
          "name": "targetPhoneNumberId"
        }
      ]
    },
    {
      "name": "AddPhoneNumberRequestItem",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in e.164 format (with '+' prefix).\nWildcards are supported to pass large sets (for example 100 numbers);\nonly one phone number record must be passed in request in that case, for example '+1650123456*'\n",
          "name": "phoneNumber",
          "required": true
        },
        {
          "type": "string",
          "description": "Usage type of phone number. Currently, we support the following values: `Inventory`, `InventoryPartnerBusinessMobileNumber`\nand `PartnerBusinessMobileNumber`. Later we may support some other values like `ForwardedNumber`, etc.\n",
          "default": "Inventory",
          "enum": [
            "Inventory",
            "InventoryPartnerBusinessMobileNumber",
            "PartnerBusinessMobileNumber"
          ],
          "name": "usageType",
          "required": true
        },
        {
          "type": "string",
          "description": "Phone number activation status. Determine whether phone number migration is completed on the partner side.",
          "enum": [
            "Active",
            "Inactive"
          ],
          "name": "activationStatus",
          "required": false
        }
      ]
    },
    {
      "name": "AddPhoneNumbersResponse",
      "fields": [
        {
          "type": "array",
          "minItems": 1,
          "description": "List of account phone numbers",
          "items": {
            "$ref": "AddPhoneNumbersResponseItem"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "AddPhoneNumbersRequest",
      "fields": [
        {
          "type": "array",
          "minItems": 1,
          "description": "List of account phone numbers",
          "items": {
            "$ref": "AddPhoneNumberRequestItem"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "AddPhoneNumbersResponseItem",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates if this item was processed successfully during bulk operation.\nIf false, `bulkItemErrors` attribute contains the list of errors\n",
          "example": true,
          "name": "bulkItemSuccessful",
          "required": true
        },
        {
          "type": "array",
          "description": "The list of errors occurred during processing of particular item of bulk operation.\nReturned only if `bulkItemSuccessful` is false\n",
          "minItems": 1,
          "items": {
            "$ref": "ApiError"
          },
          "name": "bulkItemErrors",
          "required": false
        },
        {
          "type": "string",
          "pattern": "^[1-9]\\d{1,14}$",
          "description": "Internal unique identifier of a phone number",
          "maxLength": 18,
          "example": "1162820004",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "phoneNumber",
          "required": true
        },
        {
          "type": "string",
          "description": "Phone number activation status. Determine whether phone number migration is completed on the partner side.",
          "enum": [
            "Active",
            "Inactive"
          ],
          "name": "activationStatus",
          "required": false
        }
      ]
    },
    {
      "name": "AddPhoneNumbersTask",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Task creation time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Task status",
          "example": "Accepted",
          "name": "status"
        }
      ]
    },
    {
      "name": "CostCenterBase",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a cost center",
          "readOnly": true,
          "example": 981086004,
          "name": "id"
        },
        {
          "type": "string",
          "description": "Cost Center name",
          "example": "My Cost Center",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Billing code associated with a cost center",
          "example": "BC 101",
          "name": "billingCode"
        }
      ]
    },
    {
      "name": "CostCenterItem",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a cost center",
          "readOnly": true,
          "example": 981086004,
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Cost Center name",
          "example": "My Cost Center",
          "name": "name",
          "required": false
        },
        {
          "type": "string",
          "description": "Billing code associated with a cost center",
          "example": "BC 101",
          "name": "billingCode",
          "required": false
        },
        {
          "$ref": "TaxLocation",
          "name": "taxLocation",
          "required": true
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a parent cost center",
          "example": 45878,
          "name": "parentId",
          "required": false
        }
      ]
    },
    {
      "name": "CostCenterList",
      "fields": [
        {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "CostCenterItem"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "TaxLocation",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a tax location",
          "readOnly": true,
          "example": 981086004,
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Tax location name",
          "example": "Tax_Location",
          "name": "name",
          "required": true
        },
        {
          "description": "Type of the location object. Only 'TaxLocation' is currently supported for POST method",
          "type": "string",
          "enum": [
            "BillingAddress",
            "TaxLocation",
            "Site"
          ],
          "example": "TaxLocation",
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "description": "Unique identifier of a tax location in the partner's system",
          "maxLength": 30,
          "example": "4587834894962936",
          "name": "externalLocationId",
          "required": false
        },
        {
          "type": "string",
          "format": "date-time",
          "example": "2022-06-05T10:11:12Z",
          "description": "Effective date in the ISO 8601 (`YYYY-MM-DDThh:mm:ssTZD`) format, including date, time, and timezone\n",
          "name": "effectiveDate",
          "required": false
        },
        {
          "$ref": "PostalAddress",
          "name": "address",
          "required": true
        }
      ]
    },
    {
      "name": "RemoveLineResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a source device",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Device type",
          "default": "HardPhone",
          "enum": [
            "HardPhone",
            "SoftPhone",
            "OtherPhone",
            "MobileDevice",
            "BLA",
            "Paging",
            "WebPhone",
            "WebRTC",
            "ZoomMobile",
            "ZoomPhone",
            "Room",
            "Unknown"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "description": "The display name of a source device",
          "example": "My Device N1",
          "name": "name",
          "required": true
        },
        {
          "type": "string",
          "description": "Serial number of a device (HardPhone)",
          "example": "ff:ff:ff:ff:ff:ff",
          "name": "serial",
          "required": false
        }
      ]
    },
    {
      "name": "RemoveLineRequest",
      "fields": [
        {
          "type": "boolean",
          "default": true,
          "description": "The flag that controls what to do with the number and device:\n\n- if the value of `keepAssetsInInventory` is `true`, the given device is moved to unassigned devices\nand the number is moved to the number inventory;\n- if the value of `keepAssetsInInventory` is `false`, the given device and number is removed from the account;\n- if the parameter `keepAssetsInInventory` is not set (empty body) or the value of the parameter is empty,\ndefault value `true` is set.\n",
          "name": "keepAssetsInInventory",
          "required": true
        }
      ]
    },
    {
      "name": "BulkAddDevicesItem",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a cost center",
          "example": "224149",
          "name": "costCenterId",
          "required": false
        },
        {
          "$ref": "BulkOperationExtensionReference",
          "name": "extension",
          "required": true
        },
        {
          "type": "string",
          "description": "Device type. Only \"OtherPhone\" and \"WebRTC\" device types are supported at the moment",
          "enum": [
            "OtherPhone",
            "WebRTC"
          ],
          "name": "type",
          "required": true
        },
        {
          "description": "Only \"address\" is supported at the moment",
          "required": true,
          "name": "emergency",
          "$ref": "BulkAddDevicesItemEmergency"
        },
        {
          "description": "To be used to assign a number by ID",
          "required": true,
          "name": "phoneInfo",
          "$ref": "BulkAddDevicesItemPhoneInfo"
        }
      ]
    },
    {
      "name": "PhoneNumberDefinitionDirectNumberWithReservationId",
      "description": "To be used for direct number assignment in case number pool is not supported",
      "fields": [
        {
          "type": "string",
          "description": "Phone number ID",
          "name": "phoneNumber",
          "required": true
        },
        {
          "type": "string",
          "description": "Phone number reservation ID",
          "name": "reservationId",
          "required": false
        }
      ]
    },
    {
      "name": "BulkAddDevicesRequest",
      "fields": [
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "BulkAddDevicesItem"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "PhoneNumberDefinitionPreferredAreaCode",
      "description": "To use as selection hint when a \"toll\" number to be selected from the number pool.",
      "fields": [
        {
          "description": "Preferred area code to use if numbers available",
          "type": "string",
          "pattern": "^[1-9]\\d{1,3}$",
          "example": "650",
          "name": "preferredAreaCode",
          "required": true
        }
      ]
    },
    {
      "name": "BulkAddDevicesSuccessItem",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates if the provisioning operation was successful for this item, always `true` in this model",
          "example": true,
          "name": "successful",
          "required": true
        },
        {
          "description": "Internal identifier of the created device",
          "type": "string",
          "example": "787878",
          "name": "id",
          "required": true
        },
        {
          "$ref": "BulkOperationExtensionReference",
          "name": "extension",
          "required": true
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "phoneNumber",
          "required": true
        }
      ]
    },
    {
      "name": "BulkAddDevicesErrorItem",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates if the provisioning operation was successful for this item, always `false` in this model",
          "example": false,
          "name": "successful",
          "required": true
        },
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "ApiErrorWithParameter"
          },
          "name": "errors",
          "required": true
        }
      ]
    },
    {
      "name": "DeviceDefinition",
      "fields": [
        {
          "type": "string",
          "description": "Device type. Only \"OtherPhone\" and \"WebRTC\" device types are supported at the moment",
          "enum": [
            "OtherPhone",
            "WebRTC"
          ],
          "name": "type",
          "required": true
        },
        {
          "description": "Only \"address\" is supported at the moment",
          "required": true,
          "name": "emergency",
          "$ref": "DeviceDefinitionEmergency"
        },
        {
          "description": "To be used to assign a number by ID",
          "required": true,
          "name": "phoneInfo",
          "$ref": "DeviceDefinitionPhoneInfo"
        }
      ]
    },
    {
      "name": "BulkAddDevicesResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "required": [
              "successful",
              "id",
              "extension",
              "phoneNumber",
              "errors"
            ],
            "name": "BulkAddDevicesSuccessItem",
            "$ref": "BulkAddDevicesResponseResults"
          },
          "name": "results",
          "required": true
        }
      ]
    },
    {
      "name": "PhoneNumberDefinitionTollType",
      "description": "To use as selection criteria when a number to be selected from the number pool.",
      "fields": [
        {
          "description": "Indicates if a number is toll or toll-free",
          "type": "string",
          "enum": [
            "Toll",
            "TollFree"
          ],
          "example": "Toll",
          "name": "tollType",
          "required": true
        }
      ]
    },
    {
      "name": "PhoneNumberDefinitionNumberId",
      "description": "To be used to assign a number by ID",
      "fields": [
        {
          "type": "string",
          "description": "Phone number ID",
          "name": "phoneNumberId",
          "required": true
        }
      ]
    },
    {
      "name": "BulkOperationExtensionReference",
      "description": "Information about an extension this device is assigned to",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a RingCentral extension",
          "example": "12345",
          "name": "id",
          "required": true
        }
      ]
    },
    {
      "name": "ExtensionFormattingLocaleInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal Identifier of a formatting language",
          "name": "id"
        }
      ]
    },
    {
      "name": "BatchProvisionErrorItem",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates if the provisioning operation was successful for this item, always `false` in this model",
          "example": false,
          "name": "successful",
          "required": true
        },
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "ApiErrorWithParameter"
          },
          "name": "errors",
          "required": true
        }
      ]
    },
    {
      "name": "ExtensionCountryInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersRequestItem",
      "description": "Describes request for user extension provisioning",
      "fields": [
        {
          "description": "Short number of an extension.\nActual max length depends on system length limit for extension.\n",
          "type": "string",
          "pattern": "^\\d{3,8}$",
          "minLength": 1,
          "maxLength": 8,
          "example": "205",
          "name": "extensionNumber",
          "required": false
        },
        {
          "description": "Extension status. Only \"Enabled\" can be specified",
          "type": "string",
          "enum": [
            "Enabled"
          ],
          "default": "Enabled",
          "name": "status",
          "required": true
        },
        {
          "description": "Personal contact information",
          "required": true,
          "name": "contact",
          "$ref": "BatchProvisionUsersRequestItemContact"
        },
        {
          "required": false,
          "$ref": "BatchProvisionUsersRequestItemCostCenter",
          "name": "costCenter"
        },
        {
          "type": "array",
          "maxItems": 1,
          "items": {
            "required": [
              "id"
            ],
            "$ref": "BatchProvisionUsersRequestItemRoles"
          },
          "name": "roles",
          "required": false
        },
        {
          "type": "array",
          "maxItems": 1,
          "items": {
            "required": [
              "deviceInfo"
            ],
            "$ref": "BatchProvisionUsersRequestItemDevices"
          },
          "name": "devices",
          "required": false
        }
      ]
    },
    {
      "name": "TransitionInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a welcome/activation email is sent to the new users\n(with the extension status transition from 'Unassigned' to 'NotActivated/Disabled')\n",
          "default": true,
          "name": "sendWelcomeEmail"
        },
        {
          "$ref": "ExtensionRegionalSettingRequest",
          "name": "regionalSettings"
        }
      ]
    },
    {
      "name": "ExtensionTimezoneInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a timezone",
          "name": "id"
        }
      ]
    },
    {
      "name": "ExtensionRegionalSettingRequest",
      "description": "Regional data (timezone, home country, language) of an extension.\nThe default is Company (Auto-Receptionist) settings\n",
      "fields": [
        {
          "$ref": "ExtensionCountryInfoRequest",
          "name": "homeCountry"
        },
        {
          "$ref": "ExtensionTimezoneInfoRequest",
          "name": "timezone"
        },
        {
          "$ref": "ExtensionLanguageInfoRequest",
          "name": "language"
        },
        {
          "$ref": "ExtensionGreetingLanguageInfoRequest",
          "name": "greetingLanguage"
        },
        {
          "$ref": "ExtensionFormattingLocaleInfoRequest",
          "name": "formattingLocale"
        },
        {
          "$ref": "ExtensionCurrencyInfoRequest",
          "name": "currency"
        },
        {
          "type": "string",
          "description": "Time format (12-hours or 24-hours).",
          "enum": [
            "12h",
            "24h"
          ],
          "default": "12h",
          "name": "timeFormat"
        }
      ]
    },
    {
      "name": "ExtensionCurrencyInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal Identifier of a currency",
          "name": "id"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersRequest",
      "description": "Describes request for user extension provisioning",
      "fields": [
        {
          "type": "array",
          "maxItems": 10,
          "minItems": 1,
          "items": {
            "$ref": "BatchProvisionUsersRequestItem"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "ExtensionGreetingLanguageInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a greeting language",
          "name": "id"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "required": [
              "successful",
              "extension",
              "errors"
            ],
            "name": "BatchProvisionUsersSuccessItem",
            "$ref": "BatchProvisionUsersResponseResults"
          },
          "name": "results",
          "required": true
        }
      ]
    },
    {
      "name": "ExtensionLanguageInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a language",
          "name": "id"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersSuccessItem",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates if the provisioning operation was successful for this item, always `true` in this model",
          "example": true,
          "name": "successful",
          "required": true
        },
        {
          "required": true,
          "$ref": "BatchProvisionUsersSuccessItemExtension",
          "name": "extension"
        }
      ]
    },
    {
      "name": "BulkDeleteUsersRequest",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates that the freed users' assets (phone numbers and devices) should be moved\nto account inventory rather than deleted. If set to `true`, the phone numbers and devices\nassigned to deleted extensions will be kept in the account's inventory. If set to `false`,\nthese assets will be deleted from the account and returned to either the partner's phone\nnumbers or RingCentral's phone number pool\n",
          "default": true,
          "name": "keepAssetsInInventory",
          "required": false
        },
        {
          "type": "array",
          "minItems": 1,
          "maxItems": 50,
          "items": {
            "$ref": "BulkOperationExtensionReference"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "BulkDeleteUsersResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "name": "BulkItemResultModel",
            "required": [
              "bulkItemSuccessful"
            ],
            "$ref": "BulkDeleteUsersResponseRecords"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "SwapDeviceRequest",
      "description": "Swap device request",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a target device, to which the current one will be swapped",
          "example": "8459879873",
          "name": "targetDeviceId"
        }
      ]
    },
    {
      "name": "CallFlipNumberResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call flip number",
          "example": "409926525004",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Flip number in E.164 format with '+'",
          "example": "+16502096935",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "enum": [
            "PhoneLine",
            "External"
          ],
          "description": "Flip number type",
          "example": "PhoneLine",
          "name": "type"
        },
        {
          "type": "string",
          "description": "Flip number label, device name for Digital Line case",
          "example": "My Mobile Number",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Speed dial/flip number, the range is 1-8",
          "example": "5",
          "name": "flipNumber"
        }
      ]
    },
    {
      "name": "CallFlipNumberListResource",
      "fields": [
        {
          "type": "array",
          "description": "List of call flip numbers",
          "items": {
            "$ref": "CallFlipNumberResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "GetAccountInfoResponse",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of an account",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an account",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an account in the billing system\n",
          "name": "bsid"
        },
        {
          "type": "string",
          "description": "Main phone number of the current account\n",
          "name": "mainNumber"
        },
        {
          "$ref": "AccountOperatorInfo",
          "name": "operator"
        },
        {
          "type": "string",
          "description": "Additional account identifier, created by partner application\nand applied on client side\n",
          "name": "partnerId"
        },
        {
          "$ref": "ServiceInfo",
          "name": "serviceInfo"
        },
        {
          "type": "string",
          "description": "Initial configuration wizard state",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed",
            "Unknown"
          ],
          "name": "setupWizardState"
        },
        {
          "$ref": "SignupInfoResource",
          "name": "signupInfo"
        },
        {
          "type": "string",
          "description": "Status of an account",
          "enum": [
            "Initial",
            "Unconfirmed",
            "Confirmed",
            "Disabled"
          ],
          "name": "status"
        },
        {
          "$ref": "AccountStatusInfo",
          "name": "statusInfo"
        },
        {
          "$ref": "AccountRegionalSettings",
          "name": "regionalSettings"
        },
        {
          "type": "boolean",
          "description": "Specifies whether an account is included into any federation\nof accounts or not\n",
          "name": "federated"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "If outbound call prefix is not specified, or set to null (0),\nthen the parameter is not returned; the supported value range is 2-9\n",
          "name": "outboundCallPrefix"
        },
        {
          "type": "string",
          "description": "Customer facing identifier. Returned for accounts with the\nturned off PBX features. Equals to main company number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(without \"+\" sign)format\n",
          "name": "cfid"
        },
        {
          "$ref": "AccountLimits",
          "name": "limits"
        }
      ]
    },
    {
      "name": "CurrencyInfo",
      "description": "Currency information",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a currency",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Official code of a currency",
          "name": "code"
        },
        {
          "type": "string",
          "description": "Official name of a currency",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Graphic symbol of a currency",
          "name": "symbol"
        },
        {
          "type": "string",
          "description": "Minor graphic symbol of a currency",
          "name": "minorSymbol"
        }
      ]
    },
    {
      "name": "AccountOperatorInfo",
      "description": "Operator extension information. This extension will receive\nall calls and messages addressed to an operator.\n",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an operator extension resource",
          "name": "uri"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of an operator extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Number of an operator extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension created by partner. Supported for Partner Applications.\nThe RingCentral supports the mapping of accounts and stores the corresponding account ID/extension\nID for each partner ID of a client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using `pid=XXX` clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n",
          "name": "partnerId"
        }
      ]
    },
    {
      "name": "TimezoneInfo",
      "description": "Extension timezone information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a timezone",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a timezone",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Short name of a timezone",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Meaningful description of the timezone",
          "name": "description"
        },
        {
          "type": "string",
          "name": "bias"
        }
      ]
    },
    {
      "name": "AccountLimits",
      "description": "Limits which are effective for the account",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "description": "Max number of free softphone phone lines per user extension\n",
          "name": "freeSoftPhoneLinesPerExtension"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Max number of participants in RingCentral meeting hosted by\nthis account's user\n",
          "name": "meetingSize"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Meetings recording cloud storage limitation in Gb\n",
          "name": "cloudRecordingStorage"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Max number of extensions which can be included in the list\nof users monitored for Presence\n",
          "name": "maxMonitoredExtensionsPerUser"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Max length of extension numbers of an account; the supported\nvalue is up to 8 symbols, depends on account type\n",
          "name": "maxExtensionNumberLength"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Length of a site code",
          "name": "siteCodeLength"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Length of a short extension number",
          "name": "shortExtensionNumberLength"
        }
      ]
    },
    {
      "name": "RegionalLanguageInfo",
      "description": "Information on a language set as regional",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a language set as regional",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Localization code of a language set as regional",
          "name": "localeCode"
        },
        {
          "type": "string",
          "description": "Official name of a language set as regional",
          "name": "name"
        }
      ]
    },
    {
      "name": "BillingPlanInfo",
      "description": "Information on account billing plan",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a billing plan",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Billing plan name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Duration period",
          "enum": [
            "Day",
            "Month",
            "Year"
          ],
          "name": "durationUnit"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Number of duration units",
          "name": "duration"
        },
        {
          "type": "string",
          "description": "Billing plan type",
          "enum": [
            "Initial",
            "Regular",
            "Suspended",
            "Trial",
            "TrialNoCC",
            "Free"
          ],
          "name": "type"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Included digital lines count",
          "name": "includedPhoneLines"
        }
      ]
    },
    {
      "name": "SignupInfoResource",
      "description": "Account sign up data",
      "fields": [
        {
          "type": "boolean",
          "default": false,
          "name": "tosAccepted"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AccountCreated",
              "BillingEntered",
              "CreditCardApproved",
              "AccountConfirmed",
              "PhoneVerificationRequired",
              "PhoneVerificationPassed"
            ]
          },
          "name": "signupState"
        },
        {
          "type": "string",
          "enum": [
            "CC_Failed",
            "Phone_Suspicious",
            "CC_Phone_Not_Match",
            "AVS_Not_Available",
            "MaxMind",
            "CC_Blacklisted",
            "Email_Blacklisted",
            "Phone_Blacklisted",
            "Cookie_Blacklisted",
            "Device_Blacklisted",
            "IP_Blacklisted",
            "Agent_Instance_Blacklisted",
            "Charge_Limit",
            "Other_Country",
            "Unknown"
          ],
          "name": "verificationReason"
        },
        {
          "type": "boolean",
          "description": "Updates 'Send Marketing Information' flag on web interface\n",
          "name": "marketingAccepted"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of account creation",
          "example": "2023-03-10T18:07:52.534Z",
          "name": "creationTime"
        }
      ]
    },
    {
      "name": "AccountRegionalSettings",
      "description": "Account level region data (web service Auto-Receptionist settings)\n",
      "fields": [
        {
          "$ref": "CountryInfoShortModel",
          "name": "homeCountry"
        },
        {
          "$ref": "TimezoneInfo",
          "name": "timezone"
        },
        {
          "$ref": "RegionalLanguageInfo",
          "name": "language"
        },
        {
          "$ref": "GreetingLanguageInfo",
          "name": "greetingLanguage"
        },
        {
          "$ref": "FormattingLocaleInfo",
          "name": "formattingLocale"
        },
        {
          "type": "string",
          "description": "Time format (12-hours or 24-hours).",
          "enum": [
            "12h",
            "24h"
          ],
          "default": "12h",
          "name": "timeFormat"
        },
        {
          "$ref": "CurrencyInfo",
          "name": "currency"
        }
      ]
    },
    {
      "name": "GreetingLanguageInfo",
      "description": "Information on language used for telephony greetings\n",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a greeting language",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Localization code of a greeting language",
          "name": "localeCode"
        },
        {
          "type": "string",
          "description": "Official name of a greeting language",
          "name": "name"
        }
      ]
    },
    {
      "name": "ServicePlanInfo",
      "description": "Information on account service plan",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a service plan",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a service plan",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Edition of a service plan",
          "name": "edition"
        },
        {
          "type": "string",
          "enum": [
            "Freyja",
            "Phoenix"
          ],
          "name": "freemiumProductType"
        }
      ]
    },
    {
      "name": "ServiceInfo",
      "description": "Account service information, including brand, sub-brand, service plan and\nbilling plan\n",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a service info resource",
          "name": "uri"
        },
        {
          "$ref": "BillingPlanInfo",
          "name": "billingPlan"
        },
        {
          "$ref": "BrandInfo",
          "name": "brand"
        },
        {
          "$ref": "ServicePlanInfo",
          "name": "servicePlan"
        },
        {
          "$ref": "TargetServicePlanInfo",
          "name": "targetServicePlan"
        },
        {
          "$ref": "CountryInfoShortModel",
          "name": "contractedCountry"
        },
        {
          "$ref": "UBrandInfo",
          "name": "uBrand"
        }
      ]
    },
    {
      "name": "TargetServicePlanInfo",
      "description": "Information on account target service plan",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a target service plan",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a target service plan",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Edition of a service plan",
          "name": "edition"
        },
        {
          "type": "string",
          "enum": [
            "Freyja",
            "Phoenix"
          ],
          "name": "freemiumProductType"
        }
      ]
    },
    {
      "name": "FormattingLocaleInfo",
      "description": "Formatting language preferences for numbers, dates and currencies\n",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a formatting language",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Localization code of a formatting language",
          "name": "localeCode"
        },
        {
          "type": "string",
          "description": "Official name of a formatting language",
          "name": "name"
        }
      ]
    },
    {
      "name": "AccountStatusInfo",
      "description": "Optional information to be used when account is moved to \"Disabled\" status",
      "fields": [
        {
          "type": "string",
          "description": "Type of suspension, voluntarily or not",
          "enum": [
            "SuspendedVoluntarily",
            "SuspendedInvoluntarily",
            "CancelledVoluntarily",
            "CancelledInvoluntarily"
          ],
          "example": "CancelledVoluntarily",
          "name": "reason"
        },
        {
          "type": "string",
          "description": "A meaningful description of the reason to change the status",
          "minLength": 1,
          "maxLength": 256,
          "example": "By customer request. Case ABC123",
          "name": "comment"
        },
        {
          "type": "string",
          "description": "Date after which the disabled account will get deleted.\nParameter can be used to overwrite default retention period\n(that is 30 days after disabling the account)\n",
          "format": "date-time",
          "example": "2023-03-26T11:30:45.940Z",
          "name": "till"
        }
      ]
    },
    {
      "name": "UBrandInfo",
      "description": "Account sub-brand information",
      "fields": [
        {
          "type": "string",
          "description": "Sub-brand unique ID",
          "example": "111.222",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Sub-brand name",
          "example": "Sub-brand name",
          "name": "name"
        }
      ]
    },
    {
      "name": "CountryInfoMinimalModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a country resource",
          "name": "uri"
        }
      ]
    },
    {
      "name": "BrandInfo",
      "description": "Information on account brand",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a brand",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Brand name, for example  RingCentral UK ,  ClearFax ",
          "name": "name"
        },
        {
          "$ref": "CountryInfoShortModel",
          "name": "homeCountry"
        }
      ]
    },
    {
      "name": "CountryInfoBasicModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a country resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "The official name of a country",
          "name": "name"
        }
      ]
    },
    {
      "name": "CountryInfoShortModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a country resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "The official name of a country",
          "name": "name"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Country calling code defined by [ITU-T](http://en.wikipedia.org/wiki/ITU-T)\nrecommendations, [E.123](http://en.wikipedia.org/wiki/E.123) and\n[E.164](http://en.wikipedia.org/wiki/E.164).\nSee also [Calling Codes](http://en.wikipedia.org/wiki/List_of_country_calling_codes)\n",
          "name": "callingCode"
        }
      ]
    },
    {
      "name": "CompanyBusinessHoursUpdateRequest",
      "fields": [
        {
          "$ref": "CompanyBusinessHoursScheduleInfo",
          "name": "schedule"
        }
      ]
    },
    {
      "name": "WeeklyScheduleInfo",
      "description": "Weekly schedule",
      "fields": [
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "monday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "tuesday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "wednesday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "thursday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "friday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "saturday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "sunday"
        }
      ]
    },
    {
      "name": "CompanyBusinessHours",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a business-hours resource ",
          "name": "uri"
        },
        {
          "$ref": "CompanyBusinessHoursScheduleInfo",
          "name": "schedule"
        }
      ]
    },
    {
      "name": "TimeInterval",
      "fields": [
        {
          "type": "string",
          "description": "Time in format hh:mm",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Time in format hh:mm",
          "name": "to"
        }
      ]
    },
    {
      "name": "CompanyBusinessHoursScheduleInfo",
      "description": "Schedule when an answering rule is applied",
      "fields": [
        {
          "$ref": "WeeklyScheduleInfo",
          "name": "weeklyRanges"
        }
      ]
    },
    {
      "name": "EmergencyServiceAddressResource",
      "description": "Address for emergency cases. The same emergency address is assigned\nto all the numbers of one device\n",
      "fields": [
        {
          "type": "string",
          "name": "street"
        },
        {
          "type": "string",
          "name": "street2"
        },
        {
          "type": "string",
          "name": "city"
        },
        {
          "type": "string",
          "name": "zip"
        },
        {
          "type": "string",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "boolean",
          "description": "Specifies if emergency address is out of country",
          "name": "outOfCountry"
        },
        {
          "type": "string",
          "description": "Resulting status of emergency address synchronization. Returned\nif `syncEmergencyAddress` parameter is set to `true`\n",
          "enum": [
            "Verified",
            "Updated",
            "Deleted",
            "NotRequired",
            "Unsupported",
            "Failed"
          ],
          "name": "syncStatus"
        },
        {
          "type": "string",
          "description": "Name of an additional contact person. Should be specified for\ncountries except the US, Canada, the UK and Australia.\n",
          "name": "additionalCustomerName"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of a primary contact person (receiver). Should be specified\nfor countries except the US, Canada, the UK and Australia.\n",
          "name": "customerEmail"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of an additional contact person. Should be specified\nfor countries except the US, Canada, the UK and Australia.\n",
          "name": "additionalCustomerEmail"
        },
        {
          "type": "string",
          "description": "Phone number of a primary contact person (receiver). Should\nbe specified for countries except the US, Canada, the UK and Australia\n",
          "name": "customerPhone"
        },
        {
          "type": "string",
          "description": "Phone number of an additional contact person. Should be specified\nfor countries except the US, Canada, the UK & Australia.\n",
          "name": "additionalCustomerPhone"
        },
        {
          "type": "string",
          "description": "Status of digital line provisioning",
          "enum": [
            "Provisioning",
            "Valid",
            "Invalid"
          ],
          "name": "lineProvisioningStatus"
        },
        {
          "type": "string",
          "description": "Internal identifier of a tax",
          "name": "taxId"
        }
      ]
    },
    {
      "name": "CommonEmergencyLocationAddressInfoDefault",
      "fields": [
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "string",
          "description": "State/Province name. Mandatory for the USA, the UK and Canada\n",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "First line address",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Second line address (apartment, suite, unit, building, floor,\netc.)\n",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "Postal (Zip) code",
          "name": "zip"
        },
        {
          "type": "string",
          "description": "Customer name",
          "name": "customerName"
        }
      ]
    },
    {
      "name": "ShippingAddressInfo",
      "description": "Shipping address for the order. If it coincides with the Emergency\nService Address, then can be omitted. By default, the same value as the\nemergencyServiceAddress. Multiple addresses can be specified; in case\nan order contains several devices, they can be delivered to different addresses\n",
      "fields": [
        {
          "type": "string",
          "description": "Name of a primary contact person (receiver)",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "Name of an additional contact person. Should be specified for\ncountries except the US, Canada, the UK and Australia.\n",
          "name": "additionalCustomerName"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of a primary contact person (receiver). Should be specified\nfor countries except the US, Canada, the UK and Australia.\n",
          "name": "customerEmail"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of an additional contact person. Should be specified\nfor countries except the US, Canada, the UK and Australia.\n",
          "name": "additionalCustomerEmail"
        },
        {
          "type": "string",
          "description": "Phone number of a primary contact person (receiver). Should\nbe specified for countries except the US, Canada, the UK and Australia\n",
          "name": "customerPhone"
        },
        {
          "type": "string",
          "description": "Phone number of an additional contact person. Should be specified\nfor countries except the US, Canada, the UK & Australia.\n",
          "name": "additionalCustomerPhone"
        },
        {
          "type": "string",
          "description": "Street address, line 1 - street address, P.O. box, company\nname, c/o\n",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Street address, line 2 - apartment, suite, unit, building,\nfloor, etc.\n",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "description": "ISO code of a country",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "string",
          "description": "Zip code",
          "name": "zip"
        },
        {
          "type": "string",
          "description": "National taxpayer identification number. Should be specified\nfor Brazil (CNPJ/CPF number) and Argentina (CUIT number).\n",
          "name": "taxId"
        }
      ]
    },
    {
      "name": "EmergencyAddress",
      "fields": [
        {
          "type": "boolean",
          "description": "If set to `true` then specifying emergency address is required",
          "name": "required"
        },
        {
          "type": "boolean",
          "description": "If set to `true` then only local emergency address can be specified",
          "name": "localOnly"
        },
        {
          "type": "string",
          "description": "This status is associated with a phone line provision state",
          "enum": [
            "Valid",
            "Provisioning",
            "Invalid"
          ],
          "name": "lineProvisioningStatus"
        }
      ]
    },
    {
      "name": "ShippingInfo",
      "description": "Shipping information, according to which devices (in case of HardPhone)\nor e911 stickers (in case of SoftPhone and OtherPhone) will be delivered\nto the customer\n",
      "fields": [
        {
          "description": "Order item shipping status. It is set to `Initial` when the order is submitted.\nThen it is changed to `Accepted` when a distributor starts processing the order.\nFinally, it is changed to `Shipped` which means that the distributor has shipped the device.\n",
          "type": "string",
          "enum": [
            "Initial",
            "Accepted",
            "Shipped",
            "Won't ship"
          ],
          "example": "Shipped",
          "name": "status"
        },
        {
          "type": "string",
          "description": "Shipping carrier name. Appears only if the device status is 'Shipped'\n",
          "name": "carrier"
        },
        {
          "type": "string",
          "description": "Carrier-specific tracking number. Appears only if the device status is 'Shipped'\n",
          "name": "trackingNumber"
        },
        {
          "$ref": "ShippingMethodInfo",
          "name": "method"
        },
        {
          "$ref": "ShippingAddressInfo",
          "name": "address"
        }
      ]
    },
    {
      "name": "ShippingMethodInfo",
      "description": "Devices shipping method. It is required if devices are ordered.\nAvailability of different shipping methods depends on package\ndefinition.\n",
      "fields": [
        {
          "type": "string",
          "description": "Shipping method ID:\n- \"1\" - Ground Shipping (5-7 business days)\n- \"2\" - Expedited Shipping (2-days)\n- \"3\" - Overnight Shipping\n",
          "enum": [
            "1",
            "2",
            "3"
          ],
          "default": "1",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Method name, corresponding to the identifier",
          "enum": [
            "Ground",
            "2 Day",
            "Overnight"
          ],
          "name": "name",
          "required": false
        }
      ]
    },
    {
      "name": "EmergencyServiceAddressResourceRequest",
      "description": "Address for emergency cases. The same emergency address is assigned to all\nnumbers of a single device. If the emergency address is also specified in\n`emergency` resource, then this value is ignored\n",
      "fields": [
        {
          "type": "string",
          "name": "street"
        },
        {
          "type": "string",
          "name": "street2"
        },
        {
          "type": "string",
          "name": "city"
        },
        {
          "type": "string",
          "name": "zip"
        },
        {
          "type": "string",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        }
      ]
    },
    {
      "name": "ShippingMethodIdModel",
      "description": "Devices shipping method. It is required if devices are ordered.\nAvailability of different shipping methods depends on package\ndefinition.\n",
      "fields": [
        {
          "type": "string",
          "description": "Shipping method ID:\n- \"1\" - Ground Shipping (5-7 business days)\n- \"2\" - Expedited Shipping (2-days)\n- \"3\" - Overnight Shipping\n",
          "enum": [
            "1",
            "2",
            "3"
          ],
          "default": "1",
          "name": "id",
          "required": true
        }
      ]
    },
    {
      "name": "AccountDeviceUpdate",
      "fields": [
        {
          "$ref": "EmergencyServiceAddressResourceRequest",
          "name": "emergencyServiceAddress"
        },
        {
          "$ref": "DeviceEmergencyInfo",
          "name": "emergency"
        },
        {
          "$ref": "DeviceUpdateExtensionInfo",
          "name": "extension"
        },
        {
          "$ref": "DeviceUpdatePhoneLinesInfo",
          "name": "phoneLines"
        },
        {
          "type": "boolean",
          "description": "Supported only for devices assigned to Limited extensions.\nIf true, enables users to log in to this phone as a common phone\n",
          "name": "useAsCommonPhone"
        },
        {
          "type": "string",
          "description": "Device label, maximum number of symbols is 64",
          "name": "name"
        }
      ]
    },
    {
      "name": "DeviceResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a device",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Device identification number (SKU, Stock Keeping Unit) in the format\nTP-ID [-AT-AC], where TP is device type (HP for RC desk phones, DV for all\nother devices including soft phones); ID - device model ID; AT - add-on type\nID; AC - add-on count (if any). For example 'HP-56-2-2'\n",
          "name": "sku"
        },
        {
          "type": "string",
          "description": "Device type",
          "default": "HardPhone",
          "enum": [
            "BLA",
            "SoftPhone",
            "OtherPhone",
            "HardPhone",
            "WebPhone",
            "Paging",
            "Room",
            "WebRTC"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Device name. Mandatory if ordering SoftPhone or OtherPhone.\nOptional for HardPhone. If not specified for HardPhone, then\na device model is used as a device name\n",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Serial number for HardPhone (is returned only when the phone\nis shipped and provisioned); endpoint ID for SoftPhone and\nmobile applications\n",
          "name": "serial"
        },
        {
          "type": "string",
          "description": "Device status",
          "enum": [
            "Offline",
            "Online"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Computer name (for devices of `SoftPhone` type only)",
          "name": "computerName"
        },
        {
          "$ref": "ModelInfo",
          "name": "model"
        },
        {
          "$ref": "ExtensionInfoIntId",
          "name": "extension"
        },
        {
          "$ref": "DeviceEmergencyInfo",
          "name": "emergency"
        },
        {
          "$ref": "EmergencyServiceAddressResource",
          "name": "emergencyServiceAddress"
        },
        {
          "type": "array",
          "description": "Phone lines information",
          "items": {
            "$ref": "PhoneLinesInfo"
          },
          "name": "phoneLines"
        },
        {
          "$ref": "ShippingInfo",
          "name": "shipping"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Box billing identifier of a device. Applicable only for devices of `HardPhone` type.\nIt is an alternative way to identify the device to be ordered. Either\n`model` structure, or `boxBillingId` must be specified\n",
          "name": "boxBillingId"
        },
        {
          "type": "boolean",
          "description": "Supported only for devices assigned to Limited extensions.\nIf true, enables users to log in to this phone as a common phone.\n",
          "name": "useAsCommonPhone"
        },
        {
          "type": "boolean",
          "description": "Indicates whether this device is used for hot desking or not.\nReturned if `useAsCommonPhone` is set to false\n",
          "readOnly": true,
          "name": "hotDeskDevice"
        },
        {
          "type": "boolean",
          "description": "Network location status. `true` if the device is located in\nthe configured corporate network (On-Net); `false` for Off-Net location.\nParameter is not returned if `EmergencyAddressAutoUpdate` feature is not\nenabled for the account/user, or if device network location is not determined\n",
          "name": "inCompanyNet"
        },
        {
          "$ref": "DeviceSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Date/time of receiving last location report in\n[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z\n",
          "name": "lastLocationReportTime"
        },
        {
          "type": "string",
          "description": "Pooling type of device:\n- `Host` - device with a standalone paid phone line which can be linked to soft phone client instance;\n- `Guest` - device with a linked phone line;\n- `None` - device without a phone line or with a specific line (free, BLA, etc.)\n",
          "enum": [
            "Host",
            "Guest",
            "None"
          ],
          "name": "linePooling"
        },
        {
          "$ref": "BillingStatementInfo",
          "name": "billingStatement"
        },
        {
          "type": "boolean",
          "description": "Ability to access the Voicemail without being prompted to enter a PIN from the hard phone\n",
          "name": "automaticVoicemailLogin"
        }
      ]
    },
    {
      "name": "BillingStatementCharges",
      "fields": [
        {
          "type": "string",
          "name": "description"
        },
        {
          "type": "number",
          "format": "double",
          "name": "amount"
        },
        {
          "type": "string",
          "name": "feature"
        },
        {
          "type": "number",
          "format": "double",
          "name": "freeServiceCredit"
        }
      ]
    },
    {
      "name": "DeviceUpdatePhoneLinesInfo",
      "description": "Information on phone lines added to a device",
      "fields": [
        {
          "type": "array",
          "description": "Information on phone lines added to a device",
          "items": {
            "$ref": "UpdateDevicePhoneInfo"
          },
          "name": "phoneLines"
        }
      ]
    },
    {
      "name": "AddonInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "count"
        }
      ]
    },
    {
      "name": "UpdateDevicePhoneInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a phone number",
          "name": "id"
        }
      ]
    },
    {
      "name": "ExtensionInfoIntId",
      "description": "This attribute can be omitted for unassigned devices",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "For Partner Applications Internal identifier of an extension\ncreated by partner. The RingCentral supports the mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using `pid=XXX` clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n",
          "name": "partnerId"
        }
      ]
    },
    {
      "name": "PhoneNumberCountryInfo",
      "description": "Brief information on a phone number country",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a home country",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a home country",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Official name of a home country",
          "name": "name"
        }
      ]
    },
    {
      "name": "PhoneLinesInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a phone line",
          "name": "id"
        },
        {
          "type": "string",
          "description": "The type of phone line",
          "enum": [
            "Unknown",
            "Standalone",
            "StandaloneFree",
            "BlaPrimary",
            "BlaSecondary"
          ],
          "name": "lineType"
        },
        {
          "$ref": "PhoneNumberInfoIntId",
          "name": "phoneInfo"
        },
        {
          "$ref": "EmergencyAddress",
          "name": "emergencyAddress"
        }
      ]
    },
    {
      "name": "DeviceSiteInfo",
      "description": "Site data",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a site",
          "name": "name"
        }
      ]
    },
    {
      "name": "BillingStatementInfo",
      "description": "Billing information. Returned for device update request if `prestatement`\nquery parameter is set to 'true'\n",
      "fields": [
        {
          "type": "string",
          "description": "Currency code complying with [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217)\nstandard\n",
          "name": "currency"
        },
        {
          "type": "array",
          "items": {
            "$ref": "BillingStatementCharges"
          },
          "name": "charges"
        },
        {
          "type": "array",
          "items": {
            "$ref": "BillingStatementFees"
          },
          "name": "fees"
        },
        {
          "type": "number",
          "format": "double",
          "name": "totalCharged"
        },
        {
          "type": "number",
          "format": "double",
          "name": "totalCharges"
        },
        {
          "type": "number",
          "format": "double",
          "name": "totalFees"
        },
        {
          "type": "number",
          "format": "double",
          "name": "subtotal"
        },
        {
          "type": "number",
          "format": "double",
          "name": "totalFreeServiceCredit"
        }
      ]
    },
    {
      "name": "BillingStatementFees",
      "fields": [
        {
          "type": "string",
          "name": "description"
        },
        {
          "type": "number",
          "format": "double",
          "name": "amount"
        },
        {
          "type": "number",
          "format": "double",
          "name": "freeServiceCredit"
        }
      ]
    },
    {
      "name": "DeviceEmergencyInfo",
      "description": "Device emergency settings",
      "fields": [
        {
          "$ref": "CommonEmergencyLocationAddressInfoDefault",
          "name": "address"
        },
        {
          "$ref": "DeviceEmergencyLocationInfo",
          "name": "location"
        },
        {
          "type": "boolean",
          "description": "Specifies if emergency address is out of country",
          "name": "outOfCountry"
        },
        {
          "type": "string",
          "description": "Emergency address status",
          "enum": [
            "Valid",
            "Invalid",
            "Provisioning"
          ],
          "name": "addressStatus"
        },
        {
          "type": "string",
          "description": "Visibility of an emergency response location. If `Private`\nis set, then location is visible only for the restricted number of users,\nspecified in `owners` array\n",
          "enum": [
            "Private",
            "Public"
          ],
          "name": "visibility"
        },
        {
          "type": "string",
          "description": "Resulting status of the emergency address synchronization. Returned\nif `syncEmergencyAddress` parameter is set to `true`\n",
          "enum": [
            "Verified",
            "Updated",
            "Deleted",
            "NotRequired",
            "Unsupported",
            "Failed"
          ],
          "name": "syncStatus"
        },
        {
          "type": "string",
          "description": "Ability to register new emergency address for a phone line\nusing devices sharing this line or only main device (line owner)\n",
          "enum": [
            "MainDevice",
            "AnyDevice"
          ],
          "name": "addressEditableStatus"
        }
      ]
    },
    {
      "name": "DeviceProvisioningExtensionInfo",
      "description": "Information on the extension, to which the phone number is assigned. Returned only for the request of Account phone number list",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "For Partner Applications Internal identifier of an extension\ncreated by partner. The RingCentral supports the mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using `pid=XXX` clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n",
          "name": "partnerId"
        }
      ]
    },
    {
      "name": "ModelInfo",
      "description": "HardPhone model information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a HardPhone device model",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Device name",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Add-ons description",
          "items": {
            "$ref": "AddonInfo"
          },
          "name": "addons"
        },
        {
          "type": "string",
          "name": "deviceClass"
        },
        {
          "type": "array",
          "description": "Device feature or multiple features supported",
          "items": {
            "type": "string",
            "description": "Device feature",
            "enum": [
              "BLA",
              "CommonPhone",
              "Intercom",
              "Paging",
              "HELD"
            ]
          },
          "name": "features"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Max supported count of phone lines",
          "name": "lineCount"
        }
      ]
    },
    {
      "name": "PhoneNumberInfoIntId",
      "description": "Phone number information",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a phone number",
          "format": "int64",
          "name": "id"
        },
        {
          "$ref": "PhoneNumberCountryInfo",
          "name": "country"
        },
        {
          "$ref": "DeviceProvisioningExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Custom user-defined name of a phone number, if any",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Location (City, State). Filled for local US numbers",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Payment type. 'External' is returned for forwarded numbers\nwhich are not terminated in the RingCentral phone system\n",
          "enum": [
            "External",
            "Local"
          ],
          "name": "paymentType"
        },
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Status of a phone number. If the value is 'Normal', the phone\nnumber is ready to be used. Otherwise, it is an external number not yet\nported to RingCentral\n",
          "name": "status"
        },
        {
          "type": "string",
          "description": "Type of a phone number",
          "nullable": true,
          "enum": [
            "VoiceFax",
            "VoiceOnly",
            "FaxOnly"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Usage type of the phone number",
          "enum": [
            "MainCompanyNumber",
            "AdditionalCompanyNumber",
            "CompanyNumber",
            "DirectNumber",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "ContactCenterNumber"
          ],
          "name": "usageType"
        }
      ]
    },
    {
      "name": "DeviceUpdateExtensionInfo",
      "description": "Information on extension that the device is assigned to",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        }
      ]
    },
    {
      "name": "DeviceEmergencyLocationInfo",
      "description": "Company emergency response location details",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the emergency response location",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Location name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Address format ID",
          "name": "addressFormatId"
        }
      ]
    },
    {
      "name": "OutboundProxyInfo",
      "fields": [
        {
          "type": "string",
          "description": "Geographical region",
          "example": "APAC",
          "name": "region"
        },
        {
          "type": "string",
          "description": "SIP outbound proxy",
          "name": "proxy"
        },
        {
          "type": "string",
          "description": "SIP details for TLS (Transport Layer Security)",
          "name": "proxyTLS"
        }
      ]
    },
    {
      "name": "SipInfoResource",
      "fields": [
        {
          "type": "string",
          "description": "SIP domain",
          "name": "domain"
        },
        {
          "type": "array",
          "description": "List of outbound proxies",
          "items": {
            "$ref": "OutboundProxyInfo"
          },
          "name": "outboundProxies"
        },
        {
          "type": "string",
          "description": "User credentials",
          "name": "userName"
        },
        {
          "type": "string",
          "description": "User password",
          "name": "password"
        },
        {
          "type": "string",
          "description": "Internal identifier for SIP authorization",
          "name": "authorizationId"
        }
      ]
    },
    {
      "name": "CustomFieldModel",
      "fields": [
        {
          "type": "string",
          "description": "Custom field identifier",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Object category to attach custom fields",
          "enum": [
            "User"
          ],
          "name": "category"
        },
        {
          "type": "string",
          "description": "Custom field display name",
          "name": "displayName"
        }
      ]
    },
    {
      "name": "CustomFieldCreateRequest",
      "fields": [
        {
          "type": "string",
          "description": "Object category to attach custom fields",
          "enum": [
            "User"
          ],
          "name": "category"
        },
        {
          "type": "string",
          "description": "Custom field display name",
          "name": "displayName"
        }
      ]
    },
    {
      "name": "CustomFieldList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldModel"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CustomFieldUpdateRequest",
      "fields": [
        {
          "type": "string",
          "description": "Custom field display name",
          "name": "displayName"
        }
      ]
    },
    {
      "name": "CallRecordingGreetingResource",
      "fields": [
        {
          "type": "string",
          "enum": [
            "StartRecording",
            "StopRecording",
            "AutomaticRecording"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Here `Default` indicates that all greetings of that type\n(in all languages) are default. If at least one greeting (in any language)\nof the specified type is custom, then `Custom` is returned.\n",
          "enum": [
            "Default",
            "Custom"
          ],
          "name": "mode"
        }
      ]
    },
    {
      "name": "AutomaticRecordingResource",
      "fields": [
        {
          "type": "boolean",
          "description": "Flag for controlling Automatic Call Recording settings",
          "name": "enabled"
        },
        {
          "type": "boolean",
          "description": "Flag for controlling 'Play Call Recording Announcement for Outbound Calls' settings",
          "name": "outboundCallTones"
        },
        {
          "type": "boolean",
          "description": "Flag for controlling 'Play periodic tones for outbound calls' settings",
          "name": "outboundCallAnnouncement"
        },
        {
          "type": "boolean",
          "description": "Flag for controlling 'Allow mute in auto call recording' settings",
          "name": "allowMute"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Total amount of extension that are used in call recordings",
          "name": "extensionCount"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Retention period of a call recording, the default value is 90 days",
          "name": "retentionPeriod"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of automatic call recordings per account, the default value is 100 000",
          "name": "maxNumberLimit"
        }
      ]
    },
    {
      "name": "OnDemandResource",
      "fields": [
        {
          "type": "boolean",
          "description": "Flag for controlling OnDemand Call Recording settings",
          "name": "enabled"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Retention period of a call recording, the default value is 90 days",
          "name": "retentionPeriod"
        }
      ]
    },
    {
      "name": "CallRecordingSettingsResource",
      "fields": [
        {
          "$ref": "OnDemandResource",
          "name": "onDemand"
        },
        {
          "$ref": "AutomaticRecordingResource",
          "name": "automatic"
        },
        {
          "type": "array",
          "description": "Collection of Greeting Info",
          "items": {
            "$ref": "CallRecordingGreetingResource"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "CallRecordingCustomGreeting",
      "fields": [
        {
          "type": "string",
          "enum": [
            "StartRecording",
            "StopRecording",
            "AutomaticRecording"
          ],
          "name": "type"
        },
        {
          "$ref": "CallRecordingCustomGreetingData",
          "name": "custom"
        },
        {
          "$ref": "CallRecordingCustomGreetingLanguage",
          "name": "language"
        }
      ]
    },
    {
      "name": "CallRecordingCustomGreetingLanguage",
      "description": "Custom greeting language",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a language",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a language",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Language name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Language locale code",
          "name": "localeCode"
        }
      ]
    },
    {
      "name": "CallRecordingCustomGreetingData",
      "description": "Custom greeting data",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a custom company greeting",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a custom company greeting",
          "name": "id"
        }
      ]
    },
    {
      "name": "CallRecordingCustomGreetings",
      "description": "Returns data on call recording custom greetings.",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CallRecordingCustomGreeting"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CallRecordingExtensionResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "name": "type"
        },
        {
          "type": "string",
          "description": "Direction of call",
          "enum": [
            "Outbound",
            "Inbound",
            "All"
          ],
          "name": "callDirection"
        }
      ]
    },
    {
      "name": "BulkAccountCallRecordingsResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CallRecordingExtensionResource"
          },
          "name": "addedExtensions"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallRecordingExtensionResource"
          },
          "name": "updatedExtensions"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallRecordingExtensionResource"
          },
          "name": "removedExtensions"
        }
      ]
    },
    {
      "name": "CallRecordingExtensions",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to call recording extension list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallRecordingExtensionInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "PageNavigationUri",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI to retrieve the particular page of the result set",
          "format": "uri",
          "name": "uri"
        }
      ]
    },
    {
      "name": "CallRecordingExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an extension resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Number of an extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of an extension",
          "name": "name"
        }
      ]
    },
    {
      "name": "PageNavigationModel",
      "description": "Links to other pages of the current result set",
      "fields": [
        {
          "$ref": "PageNavigationUri",
          "name": "firstPage"
        },
        {
          "$ref": "PageNavigationUri",
          "name": "nextPage"
        },
        {
          "$ref": "PageNavigationUri",
          "name": "previousPage"
        },
        {
          "$ref": "PageNavigationUri",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "MakeCallOutRequest",
      "fields": [
        {
          "$ref": "MakeCallOutCallerInfoRequestFrom",
          "name": "from",
          "required": true
        },
        {
          "$ref": "MakeCallOutCallerInfoRequestTo",
          "name": "to",
          "required": true
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Optional. Dialing plan country data. If not specified, then extension home country is applied by default.",
          "name": "countryId",
          "required": false
        }
      ]
    },
    {
      "name": "CallParty",
      "description": "Information on a party of a call session",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a party",
          "name": "id"
        },
        {
          "$ref": "CallStatusInfo",
          "name": "status"
        },
        {
          "type": "boolean",
          "description": "Specifies if a call participant is muted or not. **Note:**\nIf a call is also controlled via Hard phone or RingCentral App (not only\nthrough the API by calling call control methods) then it cannot be fully\nmuted/unmuted via API only, in this case the action should be duplicated\nvia Hard phone/RC App interfaces\n",
          "name": "muted"
        },
        {
          "type": "boolean",
          "description": "If `true` then the party is not connected to a session voice\nconference, `false` means the party is connected to other parties in a\nsession\n",
          "name": "standAlone"
        },
        {
          "$ref": "ParkInfo",
          "name": "park"
        },
        {
          "$ref": "PartyInfo",
          "name": "from"
        },
        {
          "$ref": "PartyInfo",
          "name": "to"
        },
        {
          "$ref": "OwnerInfo",
          "name": "owner"
        },
        {
          "type": "string",
          "description": "Direction of a call",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "string",
          "description": "A party's role in the conference scenarios. For calls of 'Conference' type only",
          "enum": [
            "Host",
            "Participant"
          ],
          "name": "conferenceRole"
        },
        {
          "type": "string",
          "description": "A party's role in 'Ring Me'/'RingOut' scenarios. For calls of 'Ringout' type only",
          "enum": [
            "Initiator",
            "Target"
          ],
          "name": "ringOutRole"
        },
        {
          "type": "string",
          "description": "A party's role in 'Ring Me'/'RingOut' scenarios. For calls of 'Ringme' type only",
          "enum": [
            "Initiator",
            "Target"
          ],
          "name": "ringMeRole"
        },
        {
          "type": "array",
          "description": "Active recordings list",
          "items": {
            "$ref": "RecordingInfo"
          },
          "name": "recordings"
        },
        {
          "type": "array",
          "description": "Call metadata.",
          "items": {
            "$ref": "MetaData"
          },
          "name": "metadata"
        }
      ]
    },
    {
      "name": "OwnerInfo",
      "description": "Deprecated. Information on a call owner",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an account that monitors a call",
          "name": "accountId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension that monitors a call",
          "name": "extensionId"
        }
      ]
    },
    {
      "name": "RecordingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a recording resource",
          "name": "id"
        },
        {
          "type": "boolean",
          "description": "True if the recording is active. False if the recording is paused.",
          "name": "active"
        }
      ]
    },
    {
      "name": "MakeCallOutCallerInfoRequestFrom",
      "description": "Instance id of the caller. It corresponds to the 1st leg of the CallOut call.",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "example": "59474004",
          "name": "deviceId"
        }
      ]
    },
    {
      "name": "MetaData",
      "description": "Call metadata.",
      "fields": [
        {
          "type": "array",
          "description": "Identifier of metadata category",
          "items": {
            "required": [
              "id",
              "value"
            ],
            "$ref": "MetaDataValues"
          },
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "PartyInfo",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a party",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Displayed name of a party",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "deviceId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        }
      ]
    },
    {
      "name": "MobilePickupData",
      "fields": [
        {
          "type": "array",
          "description": "List of extension IDs, configured to pick up a call from Desktop/Mobile applications",
          "items": {
            "type": "string"
          },
          "name": "ccMailboxes"
        },
        {
          "type": "string",
          "description": "SIP proxy registration name",
          "name": "to"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "sid"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvlvl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvlExt"
        }
      ]
    },
    {
      "name": "CallSessionObject",
      "description": "Call session information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call session",
          "name": "id"
        },
        {
          "$ref": "OriginInfo",
          "name": "origin"
        },
        {
          "type": "string",
          "description": "For calls of 'Conference' type only",
          "name": "voiceCallToken"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallParty"
          },
          "name": "parties"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the latest session update represented in Unix time format",
          "name": "creationTime"
        }
      ]
    },
    {
      "name": "CallStatusInfo",
      "description": "Status data of a call session",
      "fields": [
        {
          "type": "string",
          "description": "Status code of a call",
          "enum": [
            "Setup",
            "Proceeding",
            "Answered",
            "Disconnected",
            "Gone",
            "Parked",
            "Hold",
            "VoiceMail",
            "FaxReceive",
            "Tds",
            "VoiceMailScreening"
          ],
          "name": "code"
        },
        {
          "type": "string",
          "description": "Reason for a call status, might be specified for some codes",
          "enum": [
            "Pickup",
            "Supervising",
            "TakeOver",
            "Timeout",
            "BlindTransfer",
            "RccTransfer",
            "AttendedTransfer",
            "CallerInputRedirect",
            "CallFlip",
            "ParkLocation",
            "DtmfTransfer",
            "AgentAnswered",
            "AgentDropped",
            "Rejected",
            "Cancelled",
            "InternalError",
            "NoAnswer",
            "TargetBusy",
            "InvalidNumber",
            "InternationalDisabled",
            "DestinationBlocked",
            "NotEnoughFunds",
            "NoSuchUser",
            "CallPark",
            "CallRedirected",
            "CallReplied",
            "CallSwitch",
            "CallFinished",
            "CallDropped",
            "Voicemail"
          ],
          "name": "reason"
        },
        {
          "type": "string",
          "description": "Optional message",
          "name": "description"
        },
        {
          "type": "string",
          "description": "Call park data. Returned for calls in 'Parked' state",
          "name": "parkData"
        },
        {
          "$ref": "PeerInfo",
          "name": "peerId"
        },
        {
          "$ref": "MobilePickupData",
          "name": "mobilePickupData"
        },
        {
          "type": "boolean",
          "description": "Specifies if it's a conference call",
          "name": "rcc"
        }
      ]
    },
    {
      "name": "PeerInfo",
      "description": "Peer (linked) session/party details. Valid in 'Gone' state of a call",
      "fields": [
        {
          "type": "string",
          "name": "sessionId"
        },
        {
          "type": "string",
          "name": "telephonySessionId"
        },
        {
          "type": "string",
          "name": "partyId"
        }
      ]
    },
    {
      "name": "OriginInfo",
      "description": "Session origin details",
      "fields": [
        {
          "type": "string",
          "description": "Session origin type",
          "enum": [
            "Call",
            "RingOut",
            "RingMe",
            "Conference",
            "GreetingsRecording",
            "VerificationCall",
            "Zoom",
            "CallOut"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "MakeCallOutCallerInfoRequestTo",
      "description": "Phone number of the called party. This number corresponds to the 2nd leg of a CallOut call",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format, short codes (*67, *86), emergency (911, 112) or special (988) numbers",
          "example": "+16502223366",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Extension number",
          "example": "103",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "ParkInfo",
      "description": "Call park information",
      "fields": [
        {
          "type": "string",
          "description": "Call park identifier",
          "name": "id"
        }
      ]
    },
    {
      "name": "CallSession",
      "fields": [
        {
          "$ref": "CallSessionObject",
          "name": "session"
        }
      ]
    },
    {
      "name": "CallPartyInfo",
      "fields": [
        {
          "type": "string",
          "description": "Call party phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)(with '+' sign) format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Call party name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call party extensionId",
          "name": "extensionId"
        }
      ]
    },
    {
      "name": "AccountTelephonySessionsEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Date/time of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        },
        {
          "$ref": "TelephonySessionsEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "TelephonySessionsEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Order number of a notification to state the chronology",
          "name": "sequence"
        },
        {
          "type": "string",
          "description": "Legacy identifier of a call session",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Call session identifier, required for Telephony API",
          "name": "telephonySessionId"
        },
        {
          "type": "string",
          "description": "Identifier of a server",
          "name": "serverId"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The call start date/time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "eventTime"
        },
        {
          "$ref": "OriginInfo",
          "name": "origin"
        },
        {
          "type": "array",
          "description": "Call participants details",
          "items": {
            "$ref": "TelephonySessionsEventPartyInfo"
          },
          "name": "parties"
        }
      ]
    },
    {
      "name": "UiCallInfo",
      "description": "Call information on user interface",
      "fields": [
        {
          "$ref": "UiCallInfoRecord",
          "name": "primary"
        },
        {
          "$ref": "UiCallInfoRecord",
          "name": "additional"
        }
      ]
    },
    {
      "name": "SipData",
      "description": "SIP (Session Initiation Protocol) information.\nReturned if query parameter sipData is set to 'True'\n",
      "fields": [
        {
          "type": "string",
          "description": "Recipient's data",
          "name": "toTag"
        },
        {
          "type": "string",
          "description": "Sender's data",
          "name": "fromTag"
        },
        {
          "type": "string",
          "description": "SIP call identifier",
          "name": "callId"
        }
      ]
    },
    {
      "name": "ExtensionTelephonySessionsEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Date/time of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        },
        {
          "$ref": "TelephonySessionsEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "UiCallInfoRecord",
      "fields": [
        {
          "type": "string",
          "description": "UI call info type",
          "enum": [
            "QueueName",
            "CallerIdName"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "UI call info value",
          "example": "John Doe",
          "name": "value"
        }
      ]
    },
    {
      "name": "TelephonySessionsEventPartyInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an account",
          "name": "accountId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a party",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Call direction",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "$ref": "CallPartyInfo",
          "name": "to"
        },
        {
          "$ref": "CallPartyInfo",
          "name": "from"
        },
        {
          "type": "array",
          "items": {
            "$ref": "RecordingInfo"
          },
          "name": "recordings"
        },
        {
          "$ref": "CallStatusInfo",
          "name": "status"
        },
        {
          "$ref": "ParkInfo",
          "name": "park"
        },
        {
          "type": "boolean",
          "description": "Specifies if it's a queue call",
          "name": "queueCall"
        },
        {
          "type": "boolean",
          "description": "Specifies if a call was missed by the party",
          "name": "missedCall"
        },
        {
          "type": "boolean",
          "description": "If `true` then the party is not connected to a session voice\nconference, `false` means the party is connected to other parties in a\nsession\n",
          "name": "standAlone"
        },
        {
          "type": "boolean",
          "description": "Specifies if a call participant is muted or not. **Note:**\nIf a call is also controlled via Hard phone or RingCentral App (not only\nthrough the API by calling call control methods) then it cannot be fully\nmuted/unmuted via API only, in this case the action should be duplicated\nvia Hard phone/RC App interfaces\n",
          "name": "muted"
        },
        {
          "type": "string",
          "description": "Defines party role in Server Side Conference",
          "enum": [
            "Host",
            "Participant"
          ],
          "name": "conferenceRole"
        },
        {
          "$ref": "SipData",
          "name": "sipData"
        },
        {
          "$ref": "UiCallInfo",
          "name": "uiCallInfo"
        }
      ]
    },
    {
      "name": "AddPartyRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call session",
          "name": "sessionId",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a party that should be added to the call session",
          "name": "partyId",
          "required": true
        }
      ]
    },
    {
      "name": "PartyUpdateRequest",
      "fields": [
        {
          "$ref": "PartyUpdateInfo",
          "name": "party"
        }
      ]
    },
    {
      "name": "PartyUpdateInfo",
      "description": "Party update data",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a call participant is muted or not. **Note:** If a call is also controlled via Hard phone or RingCentral App (not only through the API by calling call control methods) then it cannot be fully muted/unmuted via API only, in this case the action should be duplicated via Hard phone/RC App interfaces",
          "name": "muted"
        },
        {
          "type": "boolean",
          "description": "If `true` then the party is not connected to a session voice conference, `false` means the party is connected to other parties in a session",
          "name": "standAlone"
        }
      ]
    },
    {
      "name": "CallPartyFlip",
      "fields": [
        {
          "type": "string",
          "description": "Call flip id",
          "name": "callFlipId"
        }
      ]
    },
    {
      "name": "ReplyWithPattern",
      "fields": [
        {
          "type": "string",
          "description": "Predefined reply pattern name.",
          "example": "OnMyWay",
          "enum": [
            "WillCallYouBack",
            "CallMeBack",
            "OnMyWay",
            "OnTheOtherLine",
            "WillCallYouBackLater",
            "CallMeBackLater",
            "InAMeeting",
            "OnTheOtherLineNoCall"
          ],
          "name": "pattern"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Number of time units. Applicable only to WillCallYouBack, CallMeBack patterns.",
          "example": 5,
          "name": "time"
        },
        {
          "type": "string",
          "description": "Time unit name.",
          "example": "Minute",
          "enum": [
            "Minute",
            "Hour",
            "Day"
          ],
          "name": "timeUnit"
        }
      ]
    },
    {
      "name": "ReplyParty",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a party",
          "name": "id"
        },
        {
          "$ref": "CallStatusInfo",
          "name": "status"
        },
        {
          "type": "boolean",
          "description": "Specifies if a call participant is muted or not. **Note:** If a call is also controlled via Hard phone or RingCentral App (not only through the API by calling call control methods) then it cannot be fully muted/unmuted via API only, in this case the action should be duplicated via Hard phone/RC App interfaces",
          "name": "muted"
        },
        {
          "type": "boolean",
          "description": "If `true` then the party is not connected to a session voice conference, `false` means the party is connected to other parties in a session",
          "name": "standAlone"
        },
        {
          "$ref": "ParkInfo",
          "name": "park"
        },
        {
          "$ref": "PartyInfo",
          "name": "from"
        },
        {
          "$ref": "PartyInfo",
          "name": "to"
        },
        {
          "$ref": "OwnerInfo",
          "name": "owner"
        },
        {
          "type": "string",
          "description": "Direction of a call",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        }
      ]
    },
    {
      "name": "CallPartyReply",
      "fields": [
        {
          "type": "string",
          "description": "Text to reply",
          "name": "replyWithText"
        },
        {
          "$ref": "ReplyWithPattern",
          "name": "replyWithPattern"
        }
      ]
    },
    {
      "name": "BridgeTargetRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call session to be connected to (bridged)",
          "name": "telephonySessionId",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a call party to be connected to (bridged)",
          "name": "partyId",
          "required": true
        }
      ]
    },
    {
      "name": "IgnoreRequestBody",
      "fields": [
        {
          "type": "string",
          "description": "Internal device identifier",
          "example": "400020454008",
          "name": "deviceId",
          "required": true
        }
      ]
    },
    {
      "name": "PartySuperviseRequest",
      "fields": [
        {
          "type": "string",
          "description": "Supervising mode",
          "example": "Listen",
          "enum": [
            "Listen"
          ],
          "name": "mode",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a supervisor's device",
          "example": "191888004",
          "name": "supervisorDeviceId",
          "required": true
        },
        {
          "type": "string",
          "description": "Mailbox ID of a user that will be monitored",
          "example": "400378008008",
          "name": "agentExtensionId",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Specifies if auto-answer SIP header should be sent. If auto-answer is set to `true`, the call is automatically answered by the supervising party, if set to `false` - then the supervising party has to accept or decline the monitored call",
          "default": true,
          "name": "autoAnswer",
          "required": false
        },
        {
          "type": "string",
          "description": "Specifies session description protocol (SDP) setting. The possible values are 'sendOnly' (only sending) meaning one-way audio streaming; and 'sendRecv' (sending/receiving) meaning two-way audio streaming",
          "enum": [
            "sendOnly",
            "sendRecv"
          ],
          "name": "mediaSDP",
          "required": false
        }
      ]
    },
    {
      "name": "PartySuperviseResponse",
      "fields": [
        {
          "$ref": "PartyInfo",
          "name": "from"
        },
        {
          "$ref": "PartyInfo",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Direction of a call",
          "enum": [
            "Outbound",
            "Inbound"
          ],
          "name": "direction"
        },
        {
          "type": "string",
          "description": "Internal identifier of a party that monitors a call",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of an account that monitors a call",
          "name": "accountId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension that monitors a call",
          "name": "extensionId"
        },
        {
          "type": "boolean",
          "description": "Specifies if a call party is muted",
          "name": "muted"
        },
        {
          "$ref": "OwnerInfo",
          "name": "owner"
        },
        {
          "type": "boolean",
          "description": "If `true` then the party is not connected to a session voice\nconference, `false` means the party is connected to other parties in a\nsession\n",
          "name": "standAlone"
        },
        {
          "$ref": "CallStatusInfo",
          "name": "status"
        }
      ]
    },
    {
      "name": "CallRecordingUpdate",
      "fields": [
        {
          "type": "boolean",
          "description": "Recording status",
          "name": "active"
        }
      ]
    },
    {
      "name": "CallRecording",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call recording",
          "name": "id"
        },
        {
          "type": "boolean",
          "description": "Call recording status",
          "name": "active"
        }
      ]
    },
    {
      "name": "AnswerTarget",
      "fields": [
        {
          "type": "string",
          "description": "Device ID that is used to answer to incoming call.",
          "example": "400018633008",
          "name": "deviceId"
        }
      ]
    },
    {
      "name": "TransferTarget",
      "description": "Identifier of a call party the call will be transferred to. Only **one of** these parameters: `phoneNumber`, `voicemail`, `extensionNumber` or `parkOrbit` must be specified, otherwise an error is returned.",
      "fields": [
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Voicemail owner extension identifier",
          "name": "voicemail"
        },
        {
          "type": "string",
          "description": "Park orbit identifier",
          "name": "parkOrbit"
        },
        {
          "type": "string",
          "description": "Extension short number",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "HoldCallPartyRequest",
      "fields": [
        {
          "type": "string",
          "description": "Protocol for hold mode initiation",
          "default": "Auto",
          "enum": [
            "Auto",
            "RC",
            "BroadWorks",
            "DisconnectHolder",
            "BroadWorksOrDisconnectHolder"
          ],
          "name": "proto"
        }
      ]
    },
    {
      "name": "PickupTarget",
      "fields": [
        {
          "type": "string",
          "description": "Device identifier that is used to pick up the parked call.",
          "example": "400018633008",
          "name": "deviceId",
          "required": true
        }
      ]
    },
    {
      "name": "ForwardTarget",
      "description": "Identifier of a call party the call will be forwarded to. Only **one of** these parameters:\n`phoneNumber`, `voicemail` or `extensionNumber` must be specified, otherwise an error is returned.\n",
      "fields": [
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Voicemail owner extension identifier",
          "name": "voicemail"
        },
        {
          "type": "string",
          "description": "Extension short number",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "ForwardCallPartyResponse",
      "description": "Information on a party of a call session",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a party",
          "name": "id"
        },
        {
          "$ref": "CallStatusInfo",
          "name": "status"
        },
        {
          "type": "boolean",
          "description": "Specifies if a call participant is muted or not. **Note:**\nIf a call is also controlled via Hard phone or RingCentral App (not only\nthrough the API by calling call control methods) then it cannot be fully\nmuted/unmuted via API only, in this case the action should be duplicated\nvia Hard phone/RC App interfaces\n",
          "name": "muted"
        },
        {
          "type": "boolean",
          "description": "If `true` then the party is not connected to a session voice\nconference, `false` means the party is connected to other parties in a\nsession\n",
          "name": "standAlone"
        },
        {
          "$ref": "ParkInfo",
          "name": "park"
        },
        {
          "$ref": "PartyInfo",
          "name": "from"
        },
        {
          "$ref": "PartyInfo",
          "name": "to"
        },
        {
          "$ref": "OwnerInfo",
          "name": "owner"
        },
        {
          "type": "string",
          "description": "Direction of a call",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "string",
          "description": "A party's role in the conference scenarios. For calls of 'Conference' type only",
          "enum": [
            "Host",
            "Participant"
          ],
          "name": "conferenceRole"
        },
        {
          "type": "string",
          "description": "A party's role in 'Ring Me'/'RingOut' scenarios. For calls of 'Ringout' type only",
          "enum": [
            "Initiator",
            "Target"
          ],
          "name": "ringOutRole"
        },
        {
          "type": "string",
          "description": "A party's role in 'Ring Me'/'RingOut' scenarios. For calls of 'Ringme' type only",
          "enum": [
            "Initiator",
            "Target"
          ],
          "name": "ringMeRole"
        },
        {
          "type": "array",
          "description": "Active recordings list",
          "items": {
            "$ref": "RecordingInfo"
          },
          "name": "recordings"
        }
      ]
    },
    {
      "name": "SuperviseCallSessionRequest",
      "fields": [
        {
          "type": "string",
          "description": "Supervising mode",
          "example": "Listen",
          "enum": [
            "Listen"
          ],
          "name": "mode",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a supervisor's device which will be used for call session monitoring",
          "example": "191888004",
          "name": "supervisorDeviceId",
          "required": true
        },
        {
          "type": "string",
          "description": "Extension identifier of the user that will be monitored",
          "example": "400378008008",
          "name": "agentExtensionId",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Specifies if auto-answer SIP header should be sent. If auto-answer is set to `true`, the call is automatically answered by the supervising party, if set to `false` - then the supervising party has to accept or decline the monitored call",
          "default": true,
          "name": "autoAnswer",
          "required": false
        },
        {
          "type": "string",
          "description": "Specifies session description protocol setting",
          "enum": [
            "sendOnly",
            "sendRecv"
          ],
          "name": "mediaSDP",
          "required": false
        }
      ]
    },
    {
      "name": "SuperviseCallSessionResponse",
      "fields": [
        {
          "$ref": "PartyInfo",
          "name": "from"
        },
        {
          "$ref": "PartyInfo",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Direction of a call",
          "enum": [
            "Outbound",
            "Inbound"
          ],
          "name": "direction"
        },
        {
          "type": "string",
          "description": "Internal identifier of a party that monitors a call",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of an account that monitors a call",
          "name": "accountId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension that monitors a call",
          "name": "extensionId"
        },
        {
          "type": "boolean",
          "description": "Specifies if a call participant is muted or not. **Note:** If a call is also controlled via Hard phone or RingCentral App (not only through the API by calling call control methods) then it cannot be fully muted/unmuted via API only, in this case the action should be duplicated via Hard phone/RC App interfaces",
          "name": "muted"
        },
        {
          "$ref": "OwnerInfo",
          "name": "owner"
        },
        {
          "type": "boolean",
          "description": "If `true` then the party is not connected to a session voice conference, `false` means the party is connected to other parties in a session",
          "name": "standAlone"
        },
        {
          "$ref": "CallStatusInfo",
          "name": "status"
        }
      ]
    },
    {
      "name": "BillingPackageInfo",
      "fields": [
        {
          "type": "string",
          "description": "Billing package version",
          "name": "version"
        },
        {
          "type": "string",
          "description": "Billing package identifier",
          "name": "id"
        }
      ]
    },
    {
      "name": "AccountServiceInfoRequest",
      "description": "Account service information, including brand, service plan and billing plan\n",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of the account Service Info resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Account Service Plan name",
          "name": "servicePlanName"
        },
        {
          "$ref": "BrandInfo",
          "name": "brand"
        },
        {
          "$ref": "CountryInfoShortModel",
          "name": "contractedCountry"
        },
        {
          "$ref": "ServicePlanInfo",
          "name": "servicePlan"
        },
        {
          "$ref": "TargetServicePlanInfo",
          "name": "targetServicePlan"
        },
        {
          "$ref": "BillingPlanInfo",
          "name": "billingPlan"
        },
        {
          "type": "array",
          "description": "Service features information, see Service Feature List",
          "items": {
            "$ref": "ServiceFeatureInfo"
          },
          "name": "serviceFeatures"
        },
        {
          "$ref": "AccountLimits",
          "name": "limits"
        },
        {
          "$ref": "BillingPackageInfo",
          "name": "package"
        }
      ]
    },
    {
      "name": "AccountServiceInfo",
      "description": "Account service information, including brand, service plan and billing plan\n",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of the account Service Info resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Account Service Plan name",
          "name": "servicePlanName"
        },
        {
          "$ref": "BrandInfo",
          "name": "brand"
        },
        {
          "$ref": "CountryInfoShortModel",
          "name": "contractedCountry"
        },
        {
          "$ref": "ServicePlanInfo",
          "name": "servicePlan"
        },
        {
          "$ref": "TargetServicePlanInfo",
          "name": "targetServicePlan"
        },
        {
          "$ref": "BillingPlanInfo",
          "name": "billingPlan"
        },
        {
          "type": "array",
          "description": "Service features information, see Service Feature List",
          "items": {
            "$ref": "ServiceFeatureInfo"
          },
          "name": "serviceFeatures"
        },
        {
          "$ref": "AccountLimits",
          "name": "limits"
        },
        {
          "$ref": "BillingPackageInfo",
          "name": "package"
        },
        {
          "$ref": "UBrandInfo",
          "name": "uBrand"
        }
      ]
    },
    {
      "name": "ServiceFeatureInfo",
      "fields": [
        {
          "type": "string",
          "description": "Feature name",
          "enum": [
            "AccountFederation",
            "Archiver",
            "AutomaticCallRecordingMute",
            "AutomaticInboundCallRecording",
            "AutomaticOutboundCallRecording",
            "BlockedMessageForwarding",
            "Calendar",
            "CallerIdControl",
            "CallForwarding",
            "CallPark",
            "CallParkLocations",
            "CallSupervision",
            "CallSwitch",
            "CallQualitySurvey",
            "Conferencing",
            "ConferencingNumber",
            "ConfigureDelegates",
            "DeveloperPortal",
            "DND",
            "DynamicConference",
            "EmergencyAddressAutoUpdate",
            "EmergencyCalling",
            "EncryptionAtRest",
            "ExternalDirectoryIntegration",
            "Fax",
            "FaxReceiving",
            "FreeSoftPhoneLines",
            "HDVoice",
            "HipaaCompliance",
            "Intercom",
            "InternationalCalling",
            "InternationalSMS",
            "LinkedSoftphoneLines",
            "MMS",
            "MobileVoipEmergencyCalling",
            "OnDemandCallRecording",
            "Pager",
            "PagerReceiving",
            "Paging",
            "PasswordAuth",
            "PromoMessage",
            "Reports",
            "Presence",
            "RCTeams",
            "RingOut",
            "SalesForce",
            "SharedLines",
            "SingleExtensionUI",
            "SiteCodes",
            "SMS",
            "SMSReceiving",
            "SoftPhoneUpdate",
            "TelephonySessions",
            "UserManagement",
            "VideoConferencing",
            "VoipCalling",
            "VoipCallingOnMobile",
            "Voicemail",
            "VoicemailToText",
            "WebPhone"
          ],
          "name": "featureName"
        },
        {
          "type": "boolean",
          "description": "Feature status, shows feature availability for the extension\n",
          "name": "enabled"
        }
      ]
    },
    {
      "name": "MessageTemplateInfo",
      "description": "Text message template information",
      "fields": [
        {
          "type": "string",
          "description": "Text of a message template. Maximum length is 1000 symbols (2-byte UTF-16 encoded)\n",
          "name": "text",
          "required": true
        }
      ]
    },
    {
      "name": "MessageTemplateRequest",
      "fields": [
        {
          "type": "string",
          "description": "Name of a template",
          "name": "displayName",
          "required": true
        },
        {
          "$ref": "MessageTemplateInfo",
          "name": "body",
          "required": true
        },
        {
          "$ref": "Site",
          "name": "site",
          "required": false
        }
      ]
    },
    {
      "name": "Site",
      "description": "Specifies a site that message template is associated with. Supported only if the Sites feature is enabled.\nThe default is `main-site` value.\n",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Custom name of a site",
          "name": "name"
        }
      ]
    },
    {
      "name": "MessageTemplatesListResponse",
      "fields": [
        {
          "type": "array",
          "description": "List of text message templates",
          "items": {
            "$ref": "MessageTemplateResponse"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "MessageTemplateResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a template",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a template",
          "name": "displayName"
        },
        {
          "$ref": "MessageTemplateInfo",
          "name": "body"
        },
        {
          "type": "string",
          "description": "Specifies if a template is available on a user (Personal) or a company (Company) level",
          "enum": [
            "Company",
            "Personal"
          ],
          "name": "scope"
        },
        {
          "$ref": "Site",
          "name": "site"
        }
      ]
    },
    {
      "name": "MessageTemplateUpdateRequest",
      "fields": [
        {
          "type": "string",
          "description": "Name of a template",
          "name": "displayName",
          "required": false
        },
        {
          "$ref": "MessageTemplateInfo",
          "name": "body",
          "required": true
        },
        {
          "$ref": "Site",
          "name": "site",
          "required": false
        }
      ]
    },
    {
      "name": "BaseCallLogFromParty",
      "description": "Sender/initiator caller information",
      "fields": [
        {
          "type": "string",
          "description": "Dialer phone number without any format modifications. Returned for inbound calls",
          "name": "dialerPhoneNumber"
        }
      ]
    },
    {
      "name": "CallLogToParty",
      "description": "Target caller information",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a party. Usually it is a plain number including country and area code like 18661234567. But sometimes it could be returned from database with some formatting applied, for example (866)123-4567. This property is filled in all cases where parties communicate by means of global phone numbers, for example when calling to direct numbers or sending/receiving SMS",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Extension short number (usually 3 or 4 digits). This property is filled when parties communicate by means of short internal numbers, for example when calling to other extension or sending/receiving Company Pager message",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a party. If the phone does not belong to the known extension, only the location is returned, the name is not determined then",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined from phoneNumber. This property is filled only when phoneNumber is not empty and server can calculate location information from it (for example, this information is unavailable for US toll-free numbers)",
          "name": "location"
        },
        {
          "$ref": "CallLogRecordDeviceInfo",
          "name": "device"
        },
        {
          "type": "string",
          "description": "Dialed phone number without any format modifications. Returned for outbound calls",
          "name": "dialedPhoneNumber"
        }
      ]
    },
    {
      "name": "ExtensionInfoCallLog",
      "description": "Information about extension on whose behalf a call is initiated. For Secretary call log the Boss extension info is returned",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of an extension",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri",
          "required": true
        }
      ]
    },
    {
      "name": "CallLogFromParty",
      "description": "Sender/initiator caller information",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a party. Usually it is a plain number including country and area code like 18661234567. But sometimes it could be returned from database with some formatting applied, for example (866)123-4567. This property is filled in all cases where parties communicate by means of global phone numbers, for example when calling to direct numbers or sending/receiving SMS",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Extension short number (usually 3 or 4 digits). This property is filled when parties communicate by means of short internal numbers, for example when calling to other extension or sending/receiving Company Pager message",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a party. If the phone does not belong to the known extension, only the location is returned, the name is not determined then",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined from phoneNumber. This property is filled only when phoneNumber is not empty and server can calculate location information from it (for example, this information is unavailable for US toll-free numbers)",
          "name": "location"
        },
        {
          "$ref": "CallLogRecordDeviceInfo",
          "name": "device"
        },
        {
          "type": "string",
          "description": "Dialer phone number without any format modifications. Returned for inbound calls",
          "name": "dialerPhoneNumber"
        }
      ]
    },
    {
      "name": "CallLogRecord",
      "description": "Call log record",
      "fields": [
        {
          "$ref": "ExtensionInfoCallLog",
          "name": "extension",
          "required": false
        },
        {
          "type": "string",
          "description": "Telephony identifier of a call session",
          "name": "telephonySessionId",
          "required": false
        },
        {
          "type": "string",
          "description": "Call session identifier, required for Telephony REST API",
          "name": "sipUuidInfo",
          "required": false
        },
        {
          "$ref": "CallLogRecordTransferTarget",
          "name": "transferTarget",
          "required": false
        },
        {
          "$ref": "CallLogRecordTransferee",
          "name": "transferee",
          "required": false
        },
        {
          "type": "string",
          "description": "Internal Identifier of Participant",
          "name": "partyId",
          "required": false
        },
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "description": "List of metadata categories applied to the call",
          "name": "metadataCategories",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
          "enum": [
            "PSTN",
            "VoIP"
          ],
          "name": "transport",
          "required": false
        },
        {
          "$ref": "CallLogFromParty",
          "name": "from",
          "required": false
        },
        {
          "$ref": "CallLogToParty",
          "name": "to",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of call",
          "enum": [
            "Voice",
            "Fax"
          ],
          "name": "type",
          "required": true
        },
        {
          "description": "The direction of a call",
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction",
          "required": true
        },
        {
          "$ref": "CallLogRecordMessage",
          "name": "message",
          "required": false
        },
        {
          "$ref": "CallLogDelegateInfo",
          "name": "delegate",
          "required": false
        },
        {
          "type": "string",
          "description": "Call delegation type",
          "enum": [
            "Coworker",
            "Unknown"
          ],
          "name": "delegationType",
          "required": false
        },
        {
          "type": "string",
          "description": "The internal action corresponding to the call operation",
          "enum": [
            "Accept Call",
            "Barge In Call",
            "Call Park",
            "Call Return",
            "CallOut-CallMe",
            "Calling Card",
            "Conference Call",
            "E911 Update",
            "Emergency",
            "External Application",
            "FindMe",
            "FollowMe",
            "FreeSPDL",
            "Hunting",
            "Incoming Fax",
            "Monitoring",
            "Move",
            "Outgoing Fax",
            "Paging",
            "Park Location",
            "Phone Call",
            "Phone Login",
            "Pickup",
            "RC Meetings",
            "Ring Directly",
            "RingMe",
            "RingOut Mobile",
            "RingOut PC",
            "RingOut Web",
            "Sip Forwarding",
            "Support",
            "Text Relay",
            "Transfer",
            "Unknown",
            "VoIP Call"
          ],
          "name": "action",
          "required": true
        },
        {
          "type": "string",
          "description": "The result of the call operation",
          "enum": [
            "911",
            "933",
            "Abandoned",
            "Accepted",
            "Answered Not Accepted",
            "Blocked",
            "Busy",
            "Call Failed",
            "Call Failure",
            "Call connected",
            "Carrier is not active",
            "Declined",
            "EDGE trunk misconfigured",
            "Fax Not Sent",
            "Fax Partially Sent",
            "Fax Poor Line",
            "Fax Receipt Error",
            "Fax on Demand",
            "Hang Up",
            "IP Phone Offline",
            "In Progress",
            "Internal Error",
            "International Disabled",
            "International Restricted",
            "Missed",
            "No Answer",
            "No Calling Credit",
            "Not Allowed",
            "Partial Receive",
            "Phone Login",
            "Receive Error",
            "Received",
            "Rejected",
            "Reply",
            "Restricted Number",
            "Send Error",
            "Sent",
            "Sent to Voicemail",
            "Stopped",
            "Suspended account",
            "Unknown",
            "Voicemail",
            "Wrong Number"
          ],
          "name": "result",
          "required": false
        },
        {
          "type": "string",
          "description": "The reason of the call result:\n  * `Accepted` - The call was connected to and accepted by this number\n  * `Connected` - The call was answered, but there was no response on how to handle the call (for example, a voice mail system answered the call and did not push \"1\" to accept)\n  * `Line Busy` - The phone number you dialed was busy\n  * `Not Answered` - The phone number you dialed was not answered\n  * `No Answer` - You did not answer the call\n  * `Hang Up` - The caller hung up before the call was answered\n  * `Stopped` - This attempt was stopped because the call was answered by another phone\n  * `Internal Error` - An internal error occurred when making the call. Please try again\n  * `No Credit` - There was not enough Calling Credit on your account to make this call\n  * `Restricted Number` - The number you dialed is restricted by RingCentral\n  * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone number. Please check the number and try again\n  * `International Disabled` - International calling is not enabled on your account. Contact customer service to activate International Calling\n  * `International Restricted` - The country and/or area you attempted to call has been prohibited by your administrator\n  * `Bad Number` - An error occurred when making the call. Please check the number before trying again\n  * `Info 411 Restricted` - Calling to 411 Information Services is restricted\n  * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer service at <(888) 555-1212>\n  * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet connection\n  * `Failed Try Again` - Call failed. Please try again\n  * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit\n  * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other Phone has reached its limit. Please contact customer service\n  * `Calls Not Accepted` - Your account was not accepting calls at this time\n  * `Number Not Allowed` - The number that was dialed to access your account is not allowed\n  * `Number Blocked` - This number is in your Blocked Numbers list\n  * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by your administrator\n  * `Resource Error` - An error occurred when making the call. Please try again\n  * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please check that you are not forwarding calls back to your own account\n  * `Fax Not Received` - An incoming fax could not be received because a proper connection with the sender's fax machine could not be established\n  * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone line quality to poor to maintain the connection or the call was dropped\n  * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the receiving fax machine\n  * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too poor to send the fax\n  * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again\n  * `Fax Save Error` - An internal error occurred when saving the fax. Please try again\n  * `Fax Send Error` - An error occurred when sending the fax. Please try again\n  * `Emergency Address not defined` - The call was rejected due to no E911 address\n  * `Carrier is not active` - The call was rejected due to carrier inactivity\n  * `EDGE trunk misconfigured` - The call was rejected due to error in EDGE trunk configuration\n  * `Internal Call Error` - An internal error occurred when making the call. Please try again\n  * `Receive Error` - Fax receive error\n",
          "enum": [
            "Accepted",
            "Bad Number",
            "Call Loop",
            "Calls Not Accepted",
            "Carrier is not active",
            "Connected",
            "Customer 611 Restricted",
            "EDGE trunk misconfigured",
            "Emergency Address not defined",
            "Failed Try Again",
            "Fax Not Received",
            "Fax Not Sent",
            "Fax Partially Sent",
            "Fax Poor Line",
            "Fax Prepare Error",
            "Fax Save Error",
            "Fax Send Error",
            "Hang Up",
            "Info 411 Restricted",
            "Internal Call Error",
            "Internal Error",
            "International Disabled",
            "International Restricted",
            "Line Busy",
            "Max Call Limit",
            "No Answer",
            "No Credit",
            "No Digital Line",
            "Not Answered",
            "Number Blocked",
            "Number Disabled",
            "Number Not Allowed",
            "Receive Error",
            "Resource Error",
            "Restricted Number",
            "Stopped",
            "Too Many Calls",
            "Unknown",
            "Wrong Number"
          ],
          "name": "reason",
          "required": false
        },
        {
          "type": "string",
          "description": "The detailed reason description of the call result",
          "name": "reasonDescription",
          "required": false
        },
        {
          "type": "string",
          "description": "The call start datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "startTime",
          "required": true
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Call duration in seconds",
          "name": "duration",
          "required": false
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Call duration in milliseconds",
          "name": "durationMs",
          "required": false
        },
        {
          "$ref": "CallLogRecordingInfo",
          "name": "recording",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates that the recording is too short and therefore wouldn't be returned. The flag is not returned if the value is false",
          "name": "shortRecording",
          "required": false
        },
        {
          "$ref": "BillingInfo",
          "name": "billing",
          "required": false
        },
        {
          "type": "string",
          "description": "The internal type of the call",
          "enum": [
            "Local",
            "LongDistance",
            "International",
            "Sip",
            "RingMe",
            "RingOut",
            "Usual",
            "TollFreeNumber",
            "VerificationNumber",
            "Vma",
            "LocalNumber",
            "ImsOutgoing",
            "ImsIncoming",
            "Unknown"
          ],
          "name": "internalType",
          "required": false
        },
        {
          "type": "string",
          "description": "Internal identifier of a call log record",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a call log record",
          "name": "uri",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a call session",
          "name": "sessionId",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Indicates whether the record is deleted. Returned for deleted records, for ISync requests",
          "name": "deleted",
          "required": false
        },
        {
          "type": "array",
          "description": "For 'Detailed' view only. Leg description",
          "items": {
            "$ref": "CallLogRecordLegInfo"
          },
          "name": "legs",
          "required": false
        },
        {
          "type": "string",
          "description": "For 'Detailed' view only. The datetime when the call log record\nwas modified in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format\nincluding timezone, for example *2016-03-10T18:07:52.534Z*\n",
          "format": "date-time",
          "name": "lastModifiedTime",
          "required": false
        }
      ]
    },
    {
      "name": "CallLogResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the list of company/user call log records",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of call log records",
          "items": {
            "$ref": "CallLogRecord"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "CallLogRecordMessage",
      "description": "Linked message (Fax/Voicemail)",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a message",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Type of message",
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a message resource",
          "name": "uri",
          "required": true
        }
      ]
    },
    {
      "name": "BaseCallLogRecord",
      "description": "Base schema for CallLogRecord and CallLogRecordLegInfo",
      "fields": [
        {
          "$ref": "ExtensionInfoCallLog",
          "name": "extension",
          "required": false
        },
        {
          "type": "string",
          "description": "Telephony identifier of a call session",
          "name": "telephonySessionId",
          "required": false
        },
        {
          "type": "string",
          "description": "Call session identifier, required for Telephony REST API",
          "name": "sipUuidInfo",
          "required": false
        },
        {
          "$ref": "BaseCallLogRecordTransferTarget",
          "name": "transferTarget",
          "required": false
        },
        {
          "$ref": "BaseCallLogRecordTransferee",
          "name": "transferee",
          "required": false
        },
        {
          "type": "string",
          "description": "Internal Identifier of Participant",
          "name": "partyId",
          "required": false
        },
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "description": "List of metadata categories applied to the call",
          "name": "metadataCategories",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
          "enum": [
            "PSTN",
            "VoIP"
          ],
          "name": "transport",
          "required": false
        },
        {
          "$ref": "CallLogFromParty",
          "name": "from",
          "required": false
        },
        {
          "$ref": "CallLogToParty",
          "name": "to",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of call",
          "enum": [
            "Voice",
            "Fax"
          ],
          "name": "type",
          "required": true
        },
        {
          "description": "The direction of a call",
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction",
          "required": true
        },
        {
          "$ref": "CallLogRecordMessage",
          "name": "message",
          "required": false
        },
        {
          "$ref": "CallLogDelegateInfo",
          "name": "delegate",
          "required": false
        },
        {
          "type": "string",
          "description": "Call delegation type",
          "enum": [
            "Coworker",
            "Unknown"
          ],
          "name": "delegationType",
          "required": false
        },
        {
          "type": "string",
          "description": "The internal action corresponding to the call operation",
          "enum": [
            "Accept Call",
            "Barge In Call",
            "Call Park",
            "Call Return",
            "CallOut-CallMe",
            "Calling Card",
            "Conference Call",
            "E911 Update",
            "Emergency",
            "External Application",
            "FindMe",
            "FollowMe",
            "FreeSPDL",
            "Hunting",
            "Incoming Fax",
            "Monitoring",
            "Move",
            "Outgoing Fax",
            "Paging",
            "Park Location",
            "Phone Call",
            "Phone Login",
            "Pickup",
            "RC Meetings",
            "Ring Directly",
            "RingMe",
            "RingOut Mobile",
            "RingOut PC",
            "RingOut Web",
            "Sip Forwarding",
            "Support",
            "Text Relay",
            "Transfer",
            "Unknown",
            "VoIP Call"
          ],
          "name": "action",
          "required": true
        },
        {
          "type": "string",
          "description": "The result of the call operation",
          "enum": [
            "911",
            "933",
            "Abandoned",
            "Accepted",
            "Answered Not Accepted",
            "Blocked",
            "Busy",
            "Call Failed",
            "Call Failure",
            "Call connected",
            "Carrier is not active",
            "Declined",
            "EDGE trunk misconfigured",
            "Fax Not Sent",
            "Fax Partially Sent",
            "Fax Poor Line",
            "Fax Receipt Error",
            "Fax on Demand",
            "Hang Up",
            "IP Phone Offline",
            "In Progress",
            "Internal Error",
            "International Disabled",
            "International Restricted",
            "Missed",
            "No Answer",
            "No Calling Credit",
            "Not Allowed",
            "Partial Receive",
            "Phone Login",
            "Receive Error",
            "Received",
            "Rejected",
            "Reply",
            "Restricted Number",
            "Send Error",
            "Sent",
            "Sent to Voicemail",
            "Stopped",
            "Suspended account",
            "Unknown",
            "Voicemail",
            "Wrong Number"
          ],
          "name": "result",
          "required": false
        },
        {
          "type": "string",
          "description": "The reason of the call result:\n  * `Accepted` - The call was connected to and accepted by this number\n  * `Connected` - The call was answered, but there was no response on how to handle the call (for example, a voice mail system answered the call and did not push \"1\" to accept)\n  * `Line Busy` - The phone number you dialed was busy\n  * `Not Answered` - The phone number you dialed was not answered\n  * `No Answer` - You did not answer the call\n  * `Hang Up` - The caller hung up before the call was answered\n  * `Stopped` - This attempt was stopped because the call was answered by another phone\n  * `Internal Error` - An internal error occurred when making the call. Please try again\n  * `No Credit` - There was not enough Calling Credit on your account to make this call\n  * `Restricted Number` - The number you dialed is restricted by RingCentral\n  * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone number. Please check the number and try again\n  * `International Disabled` - International calling is not enabled on your account. Contact customer service to activate International Calling\n  * `International Restricted` - The country and/or area you attempted to call has been prohibited by your administrator\n  * `Bad Number` - An error occurred when making the call. Please check the number before trying again\n  * `Info 411 Restricted` - Calling to 411 Information Services is restricted\n  * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer service at <(888) 555-1212>\n  * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet connection\n  * `Failed Try Again` - Call failed. Please try again\n  * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit\n  * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other Phone has reached its limit. Please contact customer service\n  * `Calls Not Accepted` - Your account was not accepting calls at this time\n  * `Number Not Allowed` - The number that was dialed to access your account is not allowed\n  * `Number Blocked` - This number is in your Blocked Numbers list\n  * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by your administrator\n  * `Resource Error` - An error occurred when making the call. Please try again\n  * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please check that you are not forwarding calls back to your own account\n  * `Fax Not Received` - An incoming fax could not be received because a proper connection with the sender's fax machine could not be established\n  * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone line quality to poor to maintain the connection or the call was dropped\n  * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the receiving fax machine\n  * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too poor to send the fax\n  * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again\n  * `Fax Save Error` - An internal error occurred when saving the fax. Please try again\n  * `Fax Send Error` - An error occurred when sending the fax. Please try again\n  * `Emergency Address not defined` - The call was rejected due to no E911 address\n  * `Carrier is not active` - The call was rejected due to carrier inactivity\n  * `EDGE trunk misconfigured` - The call was rejected due to error in EDGE trunk configuration\n  * `Internal Call Error` - An internal error occurred when making the call. Please try again\n  * `Receive Error` - Fax receive error\n",
          "enum": [
            "Accepted",
            "Bad Number",
            "Call Loop",
            "Calls Not Accepted",
            "Carrier is not active",
            "Connected",
            "Customer 611 Restricted",
            "EDGE trunk misconfigured",
            "Emergency Address not defined",
            "Failed Try Again",
            "Fax Not Received",
            "Fax Not Sent",
            "Fax Partially Sent",
            "Fax Poor Line",
            "Fax Prepare Error",
            "Fax Save Error",
            "Fax Send Error",
            "Hang Up",
            "Info 411 Restricted",
            "Internal Call Error",
            "Internal Error",
            "International Disabled",
            "International Restricted",
            "Line Busy",
            "Max Call Limit",
            "No Answer",
            "No Credit",
            "No Digital Line",
            "Not Answered",
            "Number Blocked",
            "Number Disabled",
            "Number Not Allowed",
            "Receive Error",
            "Resource Error",
            "Restricted Number",
            "Stopped",
            "Too Many Calls",
            "Unknown",
            "Wrong Number"
          ],
          "name": "reason",
          "required": false
        },
        {
          "type": "string",
          "description": "The detailed reason description of the call result",
          "name": "reasonDescription",
          "required": false
        },
        {
          "type": "string",
          "description": "The call start datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "startTime",
          "required": true
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Call duration in seconds",
          "name": "duration",
          "required": false
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Call duration in milliseconds",
          "name": "durationMs",
          "required": false
        },
        {
          "$ref": "CallLogRecordingInfo",
          "name": "recording",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates that the recording is too short and therefore wouldn't be returned. The flag is not returned if the value is false",
          "name": "shortRecording",
          "required": false
        },
        {
          "$ref": "BillingInfo",
          "name": "billing",
          "required": false
        },
        {
          "type": "string",
          "description": "The internal type of the call",
          "enum": [
            "Local",
            "LongDistance",
            "International",
            "Sip",
            "RingMe",
            "RingOut",
            "Usual",
            "TollFreeNumber",
            "VerificationNumber",
            "Vma",
            "LocalNumber",
            "ImsOutgoing",
            "ImsIncoming",
            "Unknown"
          ],
          "name": "internalType",
          "required": false
        }
      ]
    },
    {
      "name": "CallLogRecordLegInfo",
      "description": "Call leg record",
      "fields": [
        {
          "$ref": "ExtensionInfoCallLog",
          "name": "extension",
          "required": false
        },
        {
          "type": "string",
          "description": "Telephony identifier of a call session",
          "name": "telephonySessionId",
          "required": false
        },
        {
          "type": "string",
          "description": "Call session identifier, required for Telephony REST API",
          "name": "sipUuidInfo",
          "required": false
        },
        {
          "$ref": "CallLogRecordLegInfoTransferTarget",
          "name": "transferTarget",
          "required": false
        },
        {
          "$ref": "CallLogRecordLegInfoTransferee",
          "name": "transferee",
          "required": false
        },
        {
          "type": "string",
          "description": "Internal Identifier of Participant",
          "name": "partyId",
          "required": false
        },
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "description": "List of metadata categories applied to the call",
          "name": "metadataCategories",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
          "enum": [
            "PSTN",
            "VoIP"
          ],
          "name": "transport",
          "required": false
        },
        {
          "$ref": "CallLogFromParty",
          "name": "from",
          "required": false
        },
        {
          "$ref": "CallLogToParty",
          "name": "to",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of call",
          "enum": [
            "Voice",
            "Fax"
          ],
          "name": "type",
          "required": true
        },
        {
          "description": "The direction of a call",
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction",
          "required": true
        },
        {
          "$ref": "CallLogRecordMessage",
          "name": "message",
          "required": false
        },
        {
          "$ref": "CallLogDelegateInfo",
          "name": "delegate",
          "required": false
        },
        {
          "type": "string",
          "description": "Call delegation type",
          "enum": [
            "Coworker",
            "Unknown"
          ],
          "name": "delegationType",
          "required": false
        },
        {
          "type": "string",
          "description": "The internal action corresponding to the call operation",
          "enum": [
            "Accept Call",
            "Barge In Call",
            "Call Park",
            "Call Return",
            "CallOut-CallMe",
            "Calling Card",
            "Conference Call",
            "E911 Update",
            "Emergency",
            "External Application",
            "FindMe",
            "FollowMe",
            "FreeSPDL",
            "Hunting",
            "Incoming Fax",
            "Monitoring",
            "Move",
            "Outgoing Fax",
            "Paging",
            "Park Location",
            "Phone Call",
            "Phone Login",
            "Pickup",
            "RC Meetings",
            "Ring Directly",
            "RingMe",
            "RingOut Mobile",
            "RingOut PC",
            "RingOut Web",
            "Sip Forwarding",
            "Support",
            "Text Relay",
            "Transfer",
            "Unknown",
            "VoIP Call"
          ],
          "name": "action",
          "required": true
        },
        {
          "type": "string",
          "description": "The result of the call operation",
          "enum": [
            "911",
            "933",
            "Abandoned",
            "Accepted",
            "Answered Not Accepted",
            "Blocked",
            "Busy",
            "Call Failed",
            "Call Failure",
            "Call connected",
            "Carrier is not active",
            "Declined",
            "EDGE trunk misconfigured",
            "Fax Not Sent",
            "Fax Partially Sent",
            "Fax Poor Line",
            "Fax Receipt Error",
            "Fax on Demand",
            "Hang Up",
            "IP Phone Offline",
            "In Progress",
            "Internal Error",
            "International Disabled",
            "International Restricted",
            "Missed",
            "No Answer",
            "No Calling Credit",
            "Not Allowed",
            "Partial Receive",
            "Phone Login",
            "Receive Error",
            "Received",
            "Rejected",
            "Reply",
            "Restricted Number",
            "Send Error",
            "Sent",
            "Sent to Voicemail",
            "Stopped",
            "Suspended account",
            "Unknown",
            "Voicemail",
            "Wrong Number"
          ],
          "name": "result",
          "required": false
        },
        {
          "type": "string",
          "description": "The reason of the call result:\n  * `Accepted` - The call was connected to and accepted by this number\n  * `Connected` - The call was answered, but there was no response on how to handle the call (for example, a voice mail system answered the call and did not push \"1\" to accept)\n  * `Line Busy` - The phone number you dialed was busy\n  * `Not Answered` - The phone number you dialed was not answered\n  * `No Answer` - You did not answer the call\n  * `Hang Up` - The caller hung up before the call was answered\n  * `Stopped` - This attempt was stopped because the call was answered by another phone\n  * `Internal Error` - An internal error occurred when making the call. Please try again\n  * `No Credit` - There was not enough Calling Credit on your account to make this call\n  * `Restricted Number` - The number you dialed is restricted by RingCentral\n  * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone number. Please check the number and try again\n  * `International Disabled` - International calling is not enabled on your account. Contact customer service to activate International Calling\n  * `International Restricted` - The country and/or area you attempted to call has been prohibited by your administrator\n  * `Bad Number` - An error occurred when making the call. Please check the number before trying again\n  * `Info 411 Restricted` - Calling to 411 Information Services is restricted\n  * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer service at <(888) 555-1212>\n  * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet connection\n  * `Failed Try Again` - Call failed. Please try again\n  * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit\n  * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other Phone has reached its limit. Please contact customer service\n  * `Calls Not Accepted` - Your account was not accepting calls at this time\n  * `Number Not Allowed` - The number that was dialed to access your account is not allowed\n  * `Number Blocked` - This number is in your Blocked Numbers list\n  * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by your administrator\n  * `Resource Error` - An error occurred when making the call. Please try again\n  * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please check that you are not forwarding calls back to your own account\n  * `Fax Not Received` - An incoming fax could not be received because a proper connection with the sender's fax machine could not be established\n  * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone line quality to poor to maintain the connection or the call was dropped\n  * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the receiving fax machine\n  * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too poor to send the fax\n  * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again\n  * `Fax Save Error` - An internal error occurred when saving the fax. Please try again\n  * `Fax Send Error` - An error occurred when sending the fax. Please try again\n  * `Emergency Address not defined` - The call was rejected due to no E911 address\n  * `Carrier is not active` - The call was rejected due to carrier inactivity\n  * `EDGE trunk misconfigured` - The call was rejected due to error in EDGE trunk configuration\n  * `Internal Call Error` - An internal error occurred when making the call. Please try again\n  * `Receive Error` - Fax receive error\n",
          "enum": [
            "Accepted",
            "Bad Number",
            "Call Loop",
            "Calls Not Accepted",
            "Carrier is not active",
            "Connected",
            "Customer 611 Restricted",
            "EDGE trunk misconfigured",
            "Emergency Address not defined",
            "Failed Try Again",
            "Fax Not Received",
            "Fax Not Sent",
            "Fax Partially Sent",
            "Fax Poor Line",
            "Fax Prepare Error",
            "Fax Save Error",
            "Fax Send Error",
            "Hang Up",
            "Info 411 Restricted",
            "Internal Call Error",
            "Internal Error",
            "International Disabled",
            "International Restricted",
            "Line Busy",
            "Max Call Limit",
            "No Answer",
            "No Credit",
            "No Digital Line",
            "Not Answered",
            "Number Blocked",
            "Number Disabled",
            "Number Not Allowed",
            "Receive Error",
            "Resource Error",
            "Restricted Number",
            "Stopped",
            "Too Many Calls",
            "Unknown",
            "Wrong Number"
          ],
          "name": "reason",
          "required": false
        },
        {
          "type": "string",
          "description": "The detailed reason description of the call result",
          "name": "reasonDescription",
          "required": false
        },
        {
          "type": "string",
          "description": "The call start datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "startTime",
          "required": true
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Call duration in seconds",
          "name": "duration",
          "required": false
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Call duration in milliseconds",
          "name": "durationMs",
          "required": false
        },
        {
          "$ref": "CallLogRecordingInfo",
          "name": "recording",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates that the recording is too short and therefore wouldn't be returned. The flag is not returned if the value is false",
          "name": "shortRecording",
          "required": false
        },
        {
          "$ref": "BillingInfo",
          "name": "billing",
          "required": false
        },
        {
          "type": "string",
          "description": "The internal type of the call",
          "enum": [
            "Local",
            "LongDistance",
            "International",
            "Sip",
            "RingMe",
            "RingOut",
            "Usual",
            "TollFreeNumber",
            "VerificationNumber",
            "Vma",
            "LocalNumber",
            "ImsOutgoing",
            "ImsIncoming",
            "Unknown"
          ],
          "name": "internalType",
          "required": false
        },
        {
          "type": "string",
          "description": "Leg type",
          "enum": [
            "SipForwarding",
            "ServiceMinus2",
            "ServiceMinus3",
            "PstnToSip",
            "Accept",
            "FindMe",
            "FollowMe",
            "TestCall",
            "FaxSent",
            "CallBack",
            "CallingCard",
            "RingDirectly",
            "RingOutWebToSubscriber",
            "RingOutWebToCaller",
            "SipToPstnMetered",
            "RingOutClientToSubscriber",
            "RingOutClientToCaller",
            "RingMe",
            "TransferCall",
            "SipToPstnUnmetered",
            "RingOutDeviceToSubscriber",
            "RingOutDeviceToCaller",
            "RingOutOneLegToCaller",
            "ExtensionToExtension",
            "CallPark",
            "PagingServer",
            "Hunting",
            "OutgoingFreeSpDl",
            "ParkLocation",
            "CallMeCallOut",
            "ConferenceCall",
            "MobileApp",
            "MoveToConference",
            "Unknown",
            "MeetingsCall",
            "SilentMonitoring",
            "Monitoring",
            "Pickup",
            "ImsCall",
            "JoinCall",
            "TextRelay",
            "IvaCall"
          ],
          "name": "legType",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Returned for 'Detailed' call log. Specifies if the leg is master-leg",
          "name": "master",
          "required": false
        }
      ]
    },
    {
      "name": "CallLogParty",
      "description": "Base schema for CallLogFromParty and CallLogToParty",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a party. Usually it is a plain number including country and area code like 18661234567. But sometimes it could be returned from database with some formatting applied, for example (866)123-4567. This property is filled in all cases where parties communicate by means of global phone numbers, for example when calling to direct numbers or sending/receiving SMS",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Extension short number (usually 3 or 4 digits). This property is filled when parties communicate by means of short internal numbers, for example when calling to other extension or sending/receiving Company Pager message",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a party. If the phone does not belong to the known extension, only the location is returned, the name is not determined then",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined from phoneNumber. This property is filled only when phoneNumber is not empty and server can calculate location information from it (for example, this information is unavailable for US toll-free numbers)",
          "name": "location"
        },
        {
          "$ref": "CallLogRecordDeviceInfo",
          "name": "device"
        }
      ]
    },
    {
      "name": "CallLogRecordingInfo",
      "description": "Call recording data. Returned if the call was recorded",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the call recording",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the call recording metadata resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "string",
          "description": "Indicates recording mode used",
          "enum": [
            "Automatic",
            "OnDemand"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a call recording binary content. Has to be retrieved with proper authorization\n(access token must be passed via `Authorization` header or query parameter)\n",
          "name": "contentUri",
          "required": true
        }
      ]
    },
    {
      "name": "CallLogRecordDeviceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a device resource",
          "name": "uri",
          "required": true
        }
      ]
    },
    {
      "name": "BillingInfo",
      "description": "Billing information related to the call. Returned for 'Detailed' view only",
      "fields": [
        {
          "type": "number",
          "format": "double",
          "description": "Cost per minute, paid and already included in your RingCentral service plan.\nFor example International Calls\n",
          "name": "costIncluded"
        },
        {
          "type": "number",
          "format": "double",
          "description": "Cost per minute, paid and not included in your RingCentral service plan",
          "name": "costPurchased"
        }
      ]
    },
    {
      "name": "BaseCallLogParty",
      "description": "Base schema for call log parties and history call log parties",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a party. Usually it is a plain number including country and area code like 18661234567. But sometimes it could be returned from database with some formatting applied, for example (866)123-4567. This property is filled in all cases where parties communicate by means of global phone numbers, for example when calling to direct numbers or sending/receiving SMS",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Extension short number (usually 3 or 4 digits). This property is filled when parties communicate by means of short internal numbers, for example when calling to other extension or sending/receiving Company Pager message",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a party. If the phone does not belong to the known extension, only the location is returned, the name is not determined then",
          "name": "name"
        }
      ]
    },
    {
      "name": "CallLogDelegateInfo",
      "description": "Information on a delegate extension that actually implemented a call action. For Secretary call log the field is returned if the current extension implemented a call. For Boss call log the field contains information on a Secretary extension which actually implemented a call on behalf of the current extension",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a Secretary extension",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Custom name of a Secretary extension",
          "name": "name",
          "required": false
        }
      ]
    },
    {
      "name": "BaseCallLogToParty",
      "description": "Target caller information",
      "fields": [
        {
          "type": "string",
          "description": "Dialed phone number without any format modifications. Returned for outbound calls",
          "name": "dialedPhoneNumber"
        }
      ]
    },
    {
      "name": "CallLogSyncInfo",
      "fields": [
        {
          "type": "string",
          "description": "Type of call log synchronization request: full or incremental sync",
          "enum": [
            "FSync",
            "ISync"
          ],
          "name": "syncType",
          "required": true
        },
        {
          "type": "string",
          "description": "Synchronization token",
          "name": "syncToken",
          "required": true
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Time of the last synchronization in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "syncTime",
          "required": true
        }
      ]
    },
    {
      "name": "CallLogSyncResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the list of call log records with sync information",
          "name": "uri",
          "required": true
        },
        {
          "type": "array",
          "description": "List of call log records with synchronization information. For `ISync` the total number of returned records is limited to 250;\nthis includes both new records and the old ones, specified by the recordCount parameter\n",
          "items": {
            "$ref": "CallLogRecord"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "CallLogSyncInfo",
          "name": "syncInfo",
          "required": true
        }
      ]
    },
    {
      "name": "ExtensionBulkUpdateTaskResource",
      "description": "Information on a task for updating multiple extensions\n",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a task resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Task status",
          "enum": [
            "Accepted",
            "InProgress",
            "Completed",
            "Failed"
          ],
          "name": "status",
          "required": true
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Task creation date/time",
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Task latest update date/time",
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "$ref": "ExtensionBulkUpdateTaskResult",
          "name": "result",
          "required": false
        }
      ]
    },
    {
      "name": "PronouncedNameInfo",
      "fields": [
        {
          "type": "string",
          "description": "The method used to pronounce the user's name:\n- `Default` - default extension name; first and last name specified in user's profile are pronounced using text-to-speech;\n- `TextToSpeech` - custom text specified by a user  pronounced using text-to-speech;\n- `Recorded` - custom audio uploaded by a user, the name recorded in user's own voice (supported only for extension retrieval).\n",
          "enum": [
            "Default",
            "TextToSpeech",
            "Recorded"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Custom text (for `TextToSpeech` type only)",
          "name": "text"
        },
        {
          "$ref": "PronouncedNamePromptInfo",
          "name": "prompt"
        }
      ]
    },
    {
      "name": "ProvisioningSiteInfo",
      "description": "Site data. If multi-site feature is turned on for an account,\nthen ID of a site must be specified. In order to assign a wireless\npoint to the main site (company) the site ID should be set to `main-site`\n",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Internal identifier of a site",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a site resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of a site",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Site code value. Returned only if specified",
          "name": "code"
        }
      ]
    },
    {
      "name": "CustomFieldInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a custom field",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Custom field value",
          "name": "value"
        },
        {
          "type": "string",
          "name": "displayName"
        }
      ]
    },
    {
      "name": "UserTransitionInfo",
      "description": "For `NotActivated` extensions only. Welcome email settings\n",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a welcome/activation email is sent to the existing\nusers during account confirmation\n",
          "name": "sendWelcomeEmailsToUsers"
        },
        {
          "type": "boolean",
          "description": "Specifies if a welcome/activation email is sent to the new users (within extension status changing from\n`Unassigned` to `NotActivated/Disabled`)\n",
          "name": "sendWelcomeEmail"
        }
      ]
    },
    {
      "name": "ContactInfoUpdateRequest",
      "fields": [
        {
          "type": "string",
          "description": "For User extension type only. Extension user first name\n",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "For User extension type only. Extension user last name\n",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Extension user company name",
          "name": "company"
        },
        {
          "type": "string",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of extension user",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Extension user contact phone number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\nformat\n",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "Extension user mobile (**non** Toll Free) phone number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(with '+' sign) format\n",
          "name": "mobilePhone"
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "type": "boolean",
          "description": "If `true` then contact email is enabled as login name for\nthis user. Please note that email should be unique in this case.\nThe default value is `false`\n",
          "name": "emailAsLoginName"
        },
        {
          "$ref": "PronouncedNameInfo",
          "name": "pronouncedName"
        },
        {
          "type": "string",
          "description": "Extension user department, if any",
          "name": "department"
        }
      ]
    },
    {
      "name": "ErrorEntity",
      "fields": [
        {
          "type": "string",
          "description": "Error code",
          "name": "errorCode"
        },
        {
          "type": "string",
          "description": "Error message",
          "name": "message"
        },
        {
          "type": "string",
          "description": "Name of invalid parameter",
          "name": "parameterName"
        },
        {
          "type": "string",
          "description": "Value of invalid parameter",
          "name": "parameterValue"
        }
      ]
    },
    {
      "name": "CallQueueInfoRequest",
      "description": "For Call Queue extension type only. Please note that legacy 'Department'\nextension type corresponds to 'Call Queue' extensions in modern RingCentral\nproduct terminology\n",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "description": "Target percentage of calls that must be answered by agents\nwithin the service level time threshold\n",
          "name": "slaGoal"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "slaThresholdSeconds"
        },
        {
          "type": "boolean",
          "name": "includeAbandonedCalls"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "abandonedThresholdSeconds"
        }
      ]
    },
    {
      "name": "ExtensionStatusInfo",
      "description": "Status information (reason, comment). Returned for `Disabled` extensions only\n",
      "fields": [
        {
          "type": "string",
          "description": "A free-form user comment, describing the status change reason",
          "name": "comment"
        },
        {
          "type": "string",
          "description": "Type of suspension",
          "enum": [
            "Voluntarily",
            "Involuntarily"
          ],
          "name": "reason"
        }
      ]
    },
    {
      "name": "ReferenceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Non-RC identifier of an extension",
          "name": "ref"
        },
        {
          "type": "string",
          "description": "Type of external identifier",
          "enum": [
            "PartnerId",
            "CustomerDirectoryId"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Primary federation admin account identifier",
          "name": "refAccId"
        }
      ]
    },
    {
      "name": "ExtensionBulkUpdateInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension status",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated"
          ],
          "name": "status"
        },
        {
          "$ref": "ExtensionStatusInfo",
          "name": "statusInfo"
        },
        {
          "type": "string",
          "description": "Type of suspension",
          "name": "reason"
        },
        {
          "type": "string",
          "description": "Free form user comment",
          "name": "comment"
        },
        {
          "type": "string",
          "description": "Extension number available",
          "name": "extensionNumber"
        },
        {
          "$ref": "ContactInfoUpdateRequest",
          "name": "contact"
        },
        {
          "$ref": "ExtensionRegionalSettingRequest",
          "name": "regionalSettings"
        },
        {
          "type": "string",
          "description": "Initial configuration wizard state",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed"
          ],
          "default": "NotStarted",
          "name": "setupWizardState"
        },
        {
          "type": "string",
          "description": "Additional extension identifier created by partner application\nand applied on client side\n",
          "name": "partnerId"
        },
        {
          "type": "string",
          "description": "IVR PIN",
          "name": "ivrPin"
        },
        {
          "type": "string",
          "description": "Password for extension",
          "name": "password"
        },
        {
          "$ref": "CallQueueInfoRequest",
          "name": "callQueueInfo"
        },
        {
          "$ref": "UserTransitionInfo",
          "name": "transition"
        },
        {
          "$ref": "CostCenterInfo",
          "name": "costCenter"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldInfo"
          },
          "name": "customFields"
        },
        {
          "type": "boolean",
          "description": "Hides extension from showing in company directory. Supported for extensions of User type only",
          "name": "hidden"
        },
        {
          "$ref": "ProvisioningSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension\ntype corresponds to 'Call Queue' extensions in modern RingCentral\nproduct terminology\n",
          "enum": [
            "User",
            "FaxUser",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "DelegatedLinesGroup"
          ],
          "name": "type"
        },
        {
          "type": "array",
          "description": "List of non-RC internal identifiers assigned to an extension\n",
          "items": {
            "$ref": "ReferenceInfo"
          },
          "name": "references"
        }
      ]
    },
    {
      "name": "PronouncedNamePromptInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a prompt resource",
          "name": "contentUri"
        },
        {
          "type": "string",
          "description": "Content media type",
          "enum": [
            "audio/mpeg",
            "audio/wav"
          ],
          "name": "contentType"
        }
      ]
    },
    {
      "name": "ContactBusinessAddressInfo",
      "description": "User's business address. The default is\nCompany (Auto-Receptionist) settings\n",
      "fields": [
        {
          "type": "string",
          "description": "Country name of a user's company",
          "name": "country"
        },
        {
          "type": "string",
          "description": "State/province name of a user's company. Mandatory\nfor the USA, UK and Canada\n",
          "name": "state"
        },
        {
          "type": "string",
          "description": "City name of a user's company",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Street address of a user's company",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Zip code of a user's company",
          "name": "zip"
        }
      ]
    },
    {
      "name": "CostCenterInfo",
      "description": "Cost center information. Applicable if Cost Center feature is enabled. The default is `root` cost center value",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a cost center",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a cost center",
          "name": "name"
        }
      ]
    },
    {
      "name": "ExtensionBulkUpdateRequest",
      "description": "List of extensions to be updated",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "ExtensionBulkUpdateInfo"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "ExtensionBulkUpdateTaskResult",
      "description": "Resulting record of a task on multiple extensions update",
      "fields": [
        {
          "$ref": "ExtensionBulkUpdateTaskResultAffectedItems",
          "name": "affectedItems"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ErrorEntity"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "ExtensionUpdateShortResult",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Extension update status",
          "enum": [
            "Fail",
            "Success"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ErrorEntity"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "UserTemplates",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to user templates resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of user templates",
          "items": {
            "$ref": "TemplateInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "TemplateInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a template",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a template",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Description of a template",
          "name": "description"
        },
        {
          "type": "string",
          "enum": [
            "UserSettings",
            "CallHandling",
            "LimitedExtensions"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of a template",
          "name": "name"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Time of a template creation",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Time of the last template modification",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "MessageStatusesResponse",
      "description": "The messages status object with details of each status",
      "fields": [
        {
          "$ref": "MessageStatusCounts",
          "name": "queued"
        },
        {
          "$ref": "MessageStatusCounts",
          "name": "delivered"
        },
        {
          "$ref": "MessageStatusCounts",
          "name": "deliveryFailed"
        },
        {
          "$ref": "MessageStatusCounts",
          "name": "sent"
        },
        {
          "$ref": "MessageStatusCounts",
          "name": "sendingFailed"
        }
      ]
    },
    {
      "name": "ASGErrorResponse",
      "description": "Error response",
      "fields": [
        {
          "type": "string",
          "description": "Error code",
          "example": "CMN-101",
          "name": "errorCode",
          "required": true
        },
        {
          "type": "string",
          "description": "Human-readable description of the error. Not suitable for end users.",
          "example": "AccountId 1234 is invalid",
          "name": "message",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "ErrorEntry"
          },
          "name": "errors",
          "required": false
        }
      ]
    },
    {
      "name": "ErrorEntry",
      "description": "Single (of potential multply) error entry in an ASG error response",
      "fields": [
        {
          "type": "string",
          "description": "Error code",
          "example": "CMN-101",
          "name": "errorCode",
          "required": true
        },
        {
          "type": "string",
          "description": "Human-readable description of the error. Not suitable for end users.",
          "example": "AccountId 1234 is invalid",
          "name": "message",
          "required": true
        }
      ]
    },
    {
      "name": "MessageStatusCounts",
      "description": "Message status parameters",
      "fields": [
        {
          "type": "number",
          "format": "float",
          "description": "Total cost of all messages with this status code",
          "name": "cost"
        },
        {
          "type": "integer",
          "description": "Count of messages with this status code",
          "format": "int32",
          "example": 7,
          "name": "count"
        },
        {
          "type": "object",
          "description": "Message sending/delivery errors. Returned in `deliveryFailed` and `sendingFailed` resources",
          "additionalProperties": {
            "type": "integer",
            "description": "Count of messages with this error code",
            "format": "int32",
            "example": 5
          },
          "name": "errorCodeCounts"
        }
      ]
    },
    {
      "name": "MessageListResponse",
      "description": "List of messages retrieved for an account and other filter criteria such as `batchId` and `fromPhoneNumber` specified in the request",
      "fields": [
        {
          "type": "array",
          "description": "An array containing individual messages",
          "items": {
            "$ref": "MessageListMessageResponse"
          },
          "name": "records"
        },
        {
          "$ref": "NonEnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "NonEnumeratedPagingModel",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "description": "Current page size, describes how many items are in each page.\nMatches \"perPage\" parameter from the request.\n",
          "example": 50,
          "name": "perPage",
          "required": true
        },
        {
          "type": "string",
          "description": "Current page token. May be omitted if result is empty (because non-existent page\nwas specified or perPage=0 was requested)\n",
          "name": "pageToken",
          "required": false
        },
        {
          "type": "string",
          "description": "A page token to be used to fetch the next page of the result set. May be omitted if the current page is the last one.",
          "name": "nextPageToken",
          "required": false
        },
        {
          "type": "string",
          "description": "A page token to be used to fetch the previous page of the result set.\nMay be omitted if the current page is the first one or if the result set does not support backward navigation.\n",
          "name": "previousPageToken",
          "required": false
        },
        {
          "type": "string",
          "description": "A page token to be used to fetch the first page of the result set.",
          "name": "firstPageToken",
          "required": false
        }
      ]
    },
    {
      "name": "MessageListMessageResponse",
      "description": "The short detail of the message in the get batch response",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "The Id of the message",
          "example": 1234,
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of a batch the message was submitted in",
          "example": "12345",
          "name": "batchId"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the message is sent",
          "example": "+15551234567",
          "name": "from"
        },
        {
          "type": "array",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format to which a message is sent",
          "example": [
            "+15551234567"
          ],
          "items": {
            "type": "string"
          },
          "name": "to"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the message was created",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the messages was last updated",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Current status of a message",
          "example": "Queued",
          "enum": [
            "Queued",
            "Delivered",
            "Sent",
            "SendingFailed",
            "DeliveryFailed"
          ],
          "name": "messageStatus"
        },
        {
          "type": "integer",
          "description": "Number of segments of a message",
          "format": "int32",
          "example": 1,
          "name": "segmentCount"
        },
        {
          "type": "string",
          "description": "Text of a message. Returned if the `view` parameter is set to 'Detailed'",
          "name": "text"
        },
        {
          "type": "number",
          "description": "Cost of a message",
          "format": "double",
          "example": 0.007,
          "name": "cost"
        },
        {
          "type": "string",
          "description": "Direction of the SMS message",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "string",
          "description": "The RC error code of the message sending failure reason",
          "example": "SMS-RC-503",
          "name": "errorCode"
        }
      ]
    },
    {
      "name": "MessageDetailsResponse",
      "description": "Complete details of the message",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a message",
          "example": "1234",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the message was sent",
          "example": "+15551234567",
          "name": "from"
        },
        {
          "type": "array",
          "description": "List of phone numbers in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format to which the message was sent",
          "example": [
            "+15551234567"
          ],
          "items": {
            "type": "string"
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Text of a message, maximum number of characters is 1000",
          "example": "Hello, World!",
          "name": "text"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time when this is message was created.",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time when this message was last updated.",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Current status of a message",
          "example": "Queued",
          "enum": [
            "Queued",
            "Delivered",
            "Sent",
            "SendingFailed",
            "DeliveryFailed"
          ],
          "name": "messageStatus"
        },
        {
          "type": "integer",
          "description": "Number of segments of a message",
          "format": "int32",
          "example": 1,
          "name": "segmentCount"
        },
        {
          "type": "number",
          "description": "Cost of a message",
          "format": "double",
          "example": 0.007,
          "name": "cost"
        },
        {
          "type": "string",
          "description": "The batch in which the message was submitted",
          "example": "batch12345",
          "name": "batchId"
        },
        {
          "type": "string",
          "description": "Direction of the SMS message",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "string",
          "description": "The RC error code of the message sending failure reason",
          "example": "SMS-RC-503",
          "name": "errorCode"
        }
      ]
    },
    {
      "name": "OptOutListResponse",
      "description": "The list of opt outs",
      "fields": [
        {
          "type": "array",
          "description": "List of individual opt-out number records",
          "items": {
            "$ref": "OptOutResponse"
          },
          "name": "records"
        },
        {
          "$ref": "NonEnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "OptOutResponse",
      "description": "Opt-out record",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the recipient has opted out",
          "example": "+15551234567",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format which is opted out",
          "example": "+15551234567",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Status of a phone number",
          "enum": [
            "OptIn",
            "OptOut"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "enum": [
            "Recipient",
            "Account",
            "Upstream",
            "Carrier"
          ],
          "name": "source"
        }
      ]
    },
    {
      "name": "OptOutBulkAssignResponse",
      "description": "The results of adding opt-outs and opt-ins",
      "fields": [
        {
          "description": "Contains successful and failed opt-ins",
          "$ref": "OptOutBulkAssignResponseOptIns",
          "name": "optIns"
        },
        {
          "description": "Contains successful and failed opt-outs",
          "$ref": "OptOutBulkAssignResponseOptOuts",
          "name": "optOuts"
        }
      ]
    },
    {
      "name": "OptOutBulkAssignRequest",
      "description": "Consists of `from` field and `optOuts` and `optIns` lists. Both `optOuts` and `optIns` can be empty but not simultaneously - at least one of the lists must be entered.\"",
      "fields": [
        {
          "type": "string",
          "description": "The phone number of a sender which the recipients should be opted out from or opted in to",
          "example": "+15551234455",
          "name": "from",
          "required": true
        },
        {
          "type": "array",
          "description": "The list of phone numbers to be opted out",
          "items": {
            "type": "string"
          },
          "example": [
            "+15551237755",
            "+15551237756"
          ],
          "name": "optOuts",
          "required": false
        },
        {
          "type": "array",
          "description": "The list of phone numbers to be opted in",
          "items": {
            "type": "string"
          },
          "example": [
            "+15551237799",
            "+15551237798"
          ],
          "name": "optIns",
          "required": false
        }
      ]
    },
    {
      "name": "OptOutBulkAssignFailedEntry",
      "description": "Represents a failure of adding opt-out / opt-in. A pair of a recipient phone number and an error message",
      "fields": [
        {
          "type": "string",
          "description": "A recipient phone number",
          "example": "+15551237756",
          "name": "to"
        },
        {
          "type": "string",
          "description": "An error happened on adding opt-out / opt-in",
          "example": "Unexpected issue on creating an opt-out from bulk-assign request",
          "name": "errorMessage"
        }
      ]
    },
    {
      "name": "MessageBatchCreateRequest",
      "description": "Batch of A2P SMS messages. This object provides specification to\nsend message(s) to many recipients. It contains top-level attributes, such\nas `text` which apply to all `messages`. In addition to that, it is possible\nto override this attribute for each message. This way a single API call may\nbe used to send individual messages to many recipients.\n",
      "fields": [
        {
          "type": "string",
          "description": "Sender's phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format.",
          "example": "+15551234567",
          "name": "from",
          "required": true
        },
        {
          "type": "string",
          "description": "Text to send to `messages.to` phone numbers. Can be overridden on a per-message basis",
          "example": "Hello, World!",
          "name": "text",
          "required": false
        },
        {
          "type": "array",
          "description": "Individual messages",
          "items": {
            "$ref": "MessageCreateRequest"
          },
          "name": "messages",
          "required": true
        }
      ]
    },
    {
      "name": "RejectedRecipientResponseResource",
      "description": "The rejected recipient details",
      "fields": [
        {
          "type": "integer",
          "description": "The index of the messages list in the send batch request where the invalid recipient was found",
          "format": "int64",
          "example": 1,
          "name": "index"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The invalid recipient number as found in the request",
          "example": [
            "29395"
          ],
          "name": "to"
        },
        {
          "type": "string",
          "description": "The error code",
          "example": "CMN-100",
          "name": "errorCode"
        },
        {
          "type": "string",
          "description": "The description of the error",
          "example": "The recipient is invalid",
          "name": "description"
        }
      ]
    },
    {
      "name": "MessageBatchResponse",
      "description": "Batch of A2P SMS messages. This object provides a specification\nto send message(s) to many recipients. It contains top-level attributes which apply to all messages. In addition\nto that, it is possible to override this attribute for each message. This\nway a single API call may be used to send individual messages to many recipients\n",
      "fields": [
        {
          "type": "string",
          "description": "Unique identifier of the message batch",
          "readOnly": true,
          "example": "12345",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the messages are going to be sent",
          "example": "+15551234567",
          "name": "from"
        },
        {
          "type": "integer",
          "description": "Total number of messages in the accepted batch",
          "format": "int32",
          "example": 5,
          "name": "batchSize"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Total number of messages currently processed in the batch",
          "example": 1,
          "name": "processedCount"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The last time the batch was processed.\n",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Current status of a message batch",
          "example": "Processing",
          "enum": [
            "Processing",
            "Completed",
            "Sent"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the batch was created\n",
          "name": "creationTime"
        },
        {
          "type": "array",
          "description": "The list of rejected/invalid recipients",
          "items": {
            "$ref": "RejectedRecipientResponseResource"
          },
          "name": "rejected"
        },
        {
          "type": "number",
          "format": "double",
          "description": "The estimated batch cost for completed batch. Calculated after batch processing is completed.\n",
          "example": 0.007,
          "name": "cost"
        }
      ]
    },
    {
      "name": "MessageCreateRequest",
      "description": "Single individual SMS resource",
      "fields": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of phone numbers in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\nformat, recipients of this message. Currently only one number is supported\n",
          "example": [
            "15551234477"
          ],
          "name": "to",
          "required": true
        },
        {
          "type": "string",
          "description": "Text to send, maximum number of characters is 1000",
          "example": "Hello, World!",
          "name": "text",
          "required": false
        }
      ]
    },
    {
      "name": "BatchListResponse",
      "description": "The list of batches retrieved for an account and other filter criteria such as fromPhoneNumber, date specified in the request.",
      "fields": [
        {
          "type": "array",
          "description": "An array containing individual batches",
          "items": {
            "$ref": "MessageBatchResponse"
          },
          "name": "records"
        },
        {
          "$ref": "NonEnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleCallersInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a caller",
          "name": "callerId"
        },
        {
          "type": "string",
          "description": "Displayed name for a caller ID",
          "name": "name"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleCalledNumberInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an account phone number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Phone number of a callee",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an answering rule resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of company answering rules",
          "items": {
            "$ref": "ListCompanyAnsweringRuleInfo"
          },
          "name": "records"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "RangesInfo",
      "fields": [
        {
          "type": "string",
          "format": "date-time",
          "description": "Beginning timestamp of the range in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601),\nfor example *2018-10-29T14:00:00*, *2018-10-29T14:00:00Z*, *2018-10-29T14:00:00+0100*\n",
          "name": "from"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Ending timestamp of the range in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601),\nfor example *2018-10-29T14:00:00*, *2018-10-29T14:00:00Z*, *2018-10-29T14:00:00+0100*\n",
          "name": "to"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        }
      ]
    },
    {
      "name": "ListCompanyAnsweringRuleInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an answering rule",
          "name": "uri"
        },
        {
          "type": "boolean",
          "description": "Specifies if the rule is active or inactive. The default value is `true`",
          "default": true,
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Type of an answering rule, the default value is 'Custom' = ['BusinessHours', 'AfterHours', 'Custom']",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user. Max number of symbols is 30. The default value is 'My Rule N' where 'N' is the first free number",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calling to selected number(s)",
          "items": {
            "$ref": "CalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "$ref": "CompanyAnsweringRuleExtensionInfo",
          "name": "extension"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleExtensionInfoRequest",
      "description": "Extension to which the call is forwarded in 'Bypass' mode",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleWeeklyScheduleInfoRequest",
      "description": "Weekly schedule. If specified, ranges cannot be specified",
      "fields": [
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "monday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "tuesday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "wednesday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "thursday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "friday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "saturday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "sunday"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleCalledNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an account phone number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Phone number of a callee",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleTimeIntervalRequest",
      "fields": [
        {
          "type": "string",
          "description": "Time in format hh:mm",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Time in format hh:mm",
          "name": "to"
        }
      ]
    },
    {
      "name": "CalledNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Called phone number",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "CustomGreetingInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a custom user greeting",
          "name": "id"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleRequest",
      "fields": [
        {
          "type": "string",
          "description": "Name of an answering rule specified by user. Max number of symbols is 30. The default value is 'My Rule N' where 'N' is the first free number",
          "name": "name"
        },
        {
          "type": "boolean",
          "description": "Specifies if the rule is active or inactive. The default value is `true`",
          "default": true,
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Type of an answering rule, the default value is 'Custom' = ['BusinessHours', 'AfterHours', 'Custom']",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calls are received from the specified caller(s)",
          "items": {
            "$ref": "CompanyAnsweringRuleCallersInfoRequest"
          },
          "name": "callers"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calling the specified number(s)",
          "items": {
            "$ref": "CompanyAnsweringRuleCalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "$ref": "CompanyAnsweringRuleScheduleInfoRequest",
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded. The default value is 'Operator' 'Operator' - play company greeting and forward to operator extension 'Disconnect' - play company greeting and disconnect 'Bypass' - bypass greeting to go to selected extension = ['Operator', 'Disconnect', 'Bypass']",
          "enum": [
            "Operator",
            "Disconnect",
            "Bypass"
          ],
          "name": "callHandlingAction"
        },
        {
          "$ref": "CompanyAnsweringRuleExtensionInfoRequest",
          "name": "extension"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "PresetInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a greeting resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a greeting",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a greeting",
          "name": "name"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleScheduleInfo",
      "description": "Schedule when an answering rule should be applied",
      "fields": [
        {
          "$ref": "CompanyAnsweringRuleWeeklyScheduleInfoRequest",
          "name": "weeklyRanges"
        },
        {
          "type": "array",
          "description": "Specific data ranges. If specified, weeklyRanges cannot be specified",
          "items": {
            "$ref": "RangesInfo"
          },
          "name": "ranges"
        },
        {
          "type": "string",
          "description": "Reference to Business Hours or After Hours schedule = ['BusinessHours', 'AfterHours']",
          "enum": [
            "BusinessHours",
            "AfterHours"
          ],
          "name": "ref"
        }
      ]
    },
    {
      "name": "GreetingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Type of greeting, specifying the case when the greeting is played.",
          "enum": [
            "Introductory",
            "Announcement",
            "AutomaticRecording",
            "BlockedCallersAll",
            "BlockedCallersSpecific",
            "BlockedNoCallerId",
            "BlockedPayPhones",
            "ConnectingMessage",
            "ConnectingAudio",
            "StartRecording",
            "StopRecording",
            "Voicemail",
            "Unavailable",
            "InterruptPrompt",
            "HoldMusic",
            "Company"
          ],
          "name": "type"
        },
        {
          "$ref": "PresetInfo",
          "name": "preset"
        },
        {
          "$ref": "CustomGreetingInfoRequest",
          "name": "custom"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleScheduleInfoRequest",
      "description": "Schedule when an answering rule should be applied",
      "fields": [
        {
          "$ref": "CompanyAnsweringRuleWeeklyScheduleInfoRequest",
          "name": "weeklyRanges"
        },
        {
          "type": "array",
          "description": "Specific data ranges. If specified, weeklyRanges cannot be specified",
          "items": {
            "$ref": "RangesInfo"
          },
          "name": "ranges"
        },
        {
          "type": "string",
          "description": "Reference to Business Hours or After Hours schedule",
          "enum": [
            "BusinessHours",
            "AfterHours"
          ],
          "name": "ref"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an answering rule",
          "name": "uri"
        },
        {
          "type": "boolean",
          "description": "Specifies if the rule is active or inactive",
          "default": true,
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Type of an answering rule",
          "default": "Custom",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user. Max number of symbols is 30. The default value is 'My Rule N' where 'N' is the first free number",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calls are received from the specified caller(s)",
          "items": {
            "$ref": "CompanyAnsweringRuleCallersInfoRequest"
          },
          "name": "callers"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calling the specified number(s)",
          "items": {
            "$ref": "CompanyAnsweringRuleCalledNumberInfoRequest"
          },
          "name": "calledNumbers"
        },
        {
          "$ref": "CompanyAnsweringRuleScheduleInfo",
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded. The default value is 'Operator' 'Operator' - play company greeting and forward to operator extension 'Disconnect' - play company greeting and disconnect 'Bypass' - bypass greeting to go to selected extension = ['Operator', 'Disconnect', 'Bypass']",
          "enum": [
            "Operator",
            "Disconnect",
            "Bypass"
          ],
          "name": "callHandlingAction"
        },
        {
          "$ref": "CompanyAnsweringRuleExtensionInfoRequest",
          "name": "extension"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleUpdate",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a rule is active or inactive. The default value is `true`",
          "default": true,
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user. Max number of\nsymbols is 30. The default value is 'My Rule N' where 'N' is the first\nfree number\n",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calls are received from\nthe specified caller(s)\n",
          "items": {
            "$ref": "CompanyAnsweringRuleCallersInfoRequest"
          },
          "name": "callers"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calling the specified number(s)",
          "items": {
            "$ref": "CompanyAnsweringRuleCalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "$ref": "CompanyAnsweringRuleScheduleInfoRequest",
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded. The default value is 'Operator' 'Operator' - play company greeting and forward to operator extension 'Disconnect' - play company greeting and disconnect 'Bypass' - bypass greeting to go to selected extension = ['Operator', 'Disconnect','Bypass']",
          "enum": [
            "Operator",
            "Disconnect",
            "Bypass"
          ],
          "name": "callHandlingAction"
        },
        {
          "type": "string",
          "description": "Type of an answering rule",
          "default": "Custom",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "$ref": "CompanyAnsweringRuleCallersInfoRequest",
          "name": "extension"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings\ncan be applied, see Dictionary Greeting List\n",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "PromptInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Internal identifier of a prompt",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Link to a prompt metadata",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of prompt media content",
          "name": "contentType"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a prompt media content",
          "name": "contentUri"
        },
        {
          "type": "string",
          "description": "Name of a prompt",
          "name": "filename"
        }
      ]
    },
    {
      "name": "IvrPrompts",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to prompts library resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of Prompts",
          "items": {
            "$ref": "PromptInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "UpdateIVRPromptRequest",
      "fields": [
        {
          "type": "string",
          "description": "Name of a file to be uploaded as a prompt",
          "name": "filename"
        }
      ]
    },
    {
      "name": "AddressBookBulkUploadTaskResult",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "AddressBookBulkUploadResource"
          },
          "name": "affectedItems"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ErrorEntity"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "AddressBookBulkUploadResponse",
      "description": "Information on a task for adding multiple contacts to multiple extensions\n",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link for the task status retrieval",
          "name": "uri",
          "required": true
        },
        {
          "type": "string",
          "description": "Task status",
          "enum": [
            "Accepted",
            "InProgress",
            "Completed",
            "Failed"
          ],
          "name": "status",
          "required": true
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Date/time of a task creation",
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Date/time of a task latest update",
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "$ref": "AddressBookBulkUploadTaskResult",
          "name": "results",
          "required": false
        }
      ]
    },
    {
      "name": "AddressBookBulkUploadResource",
      "fields": [
        {
          "type": "string",
          "name": "extensionId",
          "required": true
        },
        {
          "type": "array",
          "minItems": 1,
          "maxItems": 10000,
          "items": {
            "$ref": "AddressBookBulkContactResource"
          },
          "name": "contacts",
          "required": true
        }
      ]
    },
    {
      "name": "AddressBookBulkUploadRequest",
      "fields": [
        {
          "type": "array",
          "minItems": 1,
          "maxItems": 500,
          "items": {
            "$ref": "AddressBookBulkUploadResource"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "AddressBookBulkContactResource",
      "fields": [
        {
          "type": "string",
          "format": "email",
          "description": "Email of a contact",
          "example": "charlie.williams@example.com",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Notes for a contact",
          "example": "#1 Customer",
          "name": "notes"
        },
        {
          "type": "string",
          "description": "Company name of a contact",
          "example": "Example, Inc.",
          "name": "company"
        },
        {
          "type": "string",
          "description": "First name of a contact",
          "example": "Charlie",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last name of a contact",
          "example": "Williams",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Job title of a contact",
          "example": "CEO",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "description": "Date of birth of a contact",
          "format": "date-time",
          "name": "birthday"
        },
        {
          "type": "string",
          "description": "Link to a contact home page",
          "example": "http://www.example.com",
          "name": "webPage"
        },
        {
          "type": "string",
          "description": "Middle name of a contact",
          "example": "J",
          "name": "middleName"
        },
        {
          "type": "string",
          "description": "Nick name of a contact",
          "example": "The Boss",
          "name": "nickName"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Second email of a contact",
          "example": "charlie-example@gmail.com",
          "name": "email2"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Third email of the contact",
          "example": "theboss-example@hotmail.com",
          "name": "email3"
        },
        {
          "type": "string",
          "description": "Home phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone"
        },
        {
          "type": "string",
          "description": "Second home phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone2"
        },
        {
          "type": "string",
          "description": "Business phone of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "Second business phone of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone2"
        },
        {
          "type": "string",
          "description": "Mobile phone of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "mobilePhone"
        },
        {
          "type": "string",
          "description": "Business fax number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessFax"
        },
        {
          "type": "string",
          "description": "Company number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "companyPhone"
        },
        {
          "type": "string",
          "description": "Phone number of a contact assistant in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "assistantPhone"
        },
        {
          "type": "string",
          "description": "Car phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "carPhone"
        },
        {
          "type": "string",
          "description": "Other phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherPhone"
        },
        {
          "type": "string",
          "description": "Other fax number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherFax"
        },
        {
          "type": "string",
          "description": "Callback phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "callbackPhone"
        },
        {
          "$ref": "AddressBookBulkContactAddressInfo",
          "name": "businessAddress"
        },
        {
          "$ref": "AddressBookBulkContactAddressInfo",
          "name": "homeAddress"
        },
        {
          "$ref": "AddressBookBulkContactAddressInfo",
          "name": "otherAddress"
        }
      ]
    },
    {
      "name": "AddressBookBulkContactAddressInfo",
      "fields": [
        {
          "type": "string",
          "description": "Country name of the extension user company. Not returned for Address\nBook\n",
          "name": "country"
        },
        {
          "type": "string",
          "description": "State/province name of the extension user company",
          "name": "state"
        },
        {
          "type": "string",
          "description": "City name of the extension user company",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Street address of the extension user company",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Zip code of the extension user company",
          "name": "zip"
        }
      ]
    },
    {
      "name": "CallQueueInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a call queue",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call queue",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension number of a call queue",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of a call queue",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Group extension status",
          "enum": [
            "Enabled",
            "Disabled",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Indicates whether it is an emergency call queue extension or not",
          "enum": [
            "Emergency"
          ],
          "name": "subType"
        },
        {
          "$ref": "SiteBasicInfo",
          "name": "site"
        }
      ]
    },
    {
      "name": "CallQueueList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a call queues resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "array",
          "description": "List of call queues",
          "items": {
            "$ref": "CallQueueInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "CallQueueServiceLevelSettings",
      "description": "Call queue service level settings",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "description": "Target percentage of calls that must be answered by agents\nwithin the service level time threshold\n",
          "name": "slaGoal"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The period of time in seconds that is considered to be an acceptable\nservice level\n",
          "name": "slaThresholdSeconds"
        },
        {
          "type": "boolean",
          "description": "Includes abandoned calls (when callers hang up prior to being\nserved by an agent) into service-level calculation\n",
          "name": "includeAbandonedCalls"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Abandoned calls that are shorter than the defined period of\ntime in seconds will not be included into the calculation of Service Level\n",
          "name": "abandonedThresholdSeconds"
        }
      ]
    },
    {
      "name": "SiteReference",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site",
          "name": "id"
        }
      ]
    },
    {
      "name": "CallQueueDetails",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a call queue",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call queue",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension number of a call queue",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of a call queue",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Group extension status",
          "enum": [
            "Enabled",
            "Disabled",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Indicates whether it is an emergency call queue extension or not",
          "enum": [
            "Emergency"
          ],
          "name": "subType"
        },
        {
          "$ref": "SiteBasicInfo",
          "name": "site"
        },
        {
          "$ref": "CallQueueServiceLevelSettings",
          "name": "serviceLevelSettings"
        },
        {
          "type": "boolean",
          "description": "Allows members to change their queue status",
          "name": "editableMemberStatus"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Alert timer or pickup setting. Delay time in seconds before call queue group members are notified when calls are queued\n",
          "enum": [
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            240,
            300,
            360,
            420,
            480,
            540,
            600
          ],
          "name": "alertTimer"
        }
      ]
    },
    {
      "name": "CallQueueDetailsForUpdate",
      "fields": [
        {
          "type": "string",
          "description": "Extension number of a call queue",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of a call queue",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Group extension status",
          "enum": [
            "Enabled",
            "Disabled",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Indicates whether it is an emergency call queue extension or not",
          "enum": [
            "Emergency"
          ],
          "name": "subType"
        },
        {
          "$ref": "SiteReference",
          "name": "site"
        },
        {
          "$ref": "CallQueueServiceLevelSettings",
          "name": "serviceLevelSettings"
        },
        {
          "type": "boolean",
          "description": "Allows members to change their queue status",
          "name": "editableMemberStatus"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Alert timer or pickup setting. Delay time in seconds before call queue group members are notified when calls are queued\n",
          "enum": [
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            240,
            300,
            360,
            420,
            480,
            540,
            600
          ],
          "name": "alertTimer"
        }
      ]
    },
    {
      "name": "CallQueuePresenceEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter name",
          "name": "event"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "CallQueuePresenceEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "CallQueuePresenceEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Agent extension ID",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Call queue extension ID",
          "name": "callQueueId"
        },
        {
          "type": "boolean",
          "description": "Call queue agent availability for calls of this queue",
          "name": "acceptCalls"
        }
      ]
    },
    {
      "name": "CallQueueUpdateMemberPresence",
      "fields": [
        {
          "$ref": "CallQueueMemberId",
          "name": "member"
        },
        {
          "type": "boolean",
          "description": "Call queue member availability for calls of this queue",
          "name": "acceptCurrentQueueCalls"
        }
      ]
    },
    {
      "name": "CallQueueMember",
      "description": "Call queue member information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension full name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        },
        {
          "$ref": "SiteBasicInfo",
          "name": "site"
        }
      ]
    },
    {
      "name": "CallQueueMemberId",
      "description": "Call queue member information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension - queue member",
          "name": "id"
        }
      ]
    },
    {
      "name": "CallQueuePresence",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CallQueueMemberPresence"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CallQueueMemberPresence",
      "fields": [
        {
          "$ref": "CallQueueMember",
          "name": "member"
        },
        {
          "type": "boolean",
          "description": "Private member telephony availability status applied to calls of all queues",
          "name": "acceptQueueCalls"
        },
        {
          "type": "boolean",
          "description": "Call queue member availability in this particular queue",
          "name": "acceptCurrentQueueCalls"
        }
      ]
    },
    {
      "name": "CallQueueUpdatePresence",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CallQueueUpdateMemberPresence"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CallQueueBulkAssignResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "addedExtensionIds"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "removedExtensionIds"
        }
      ]
    },
    {
      "name": "CallQueueMemberInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a call queue member",
          "name": "uri"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a call queue member",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension number of a call queue member",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "CallQueueMembers",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a call queue members resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "array",
          "description": "List of call queue members",
          "items": {
            "$ref": "CallQueueMemberInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "EmergencyLocationRequestResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an emergency response location",
          "name": "id"
        },
        {
          "$ref": "CommonEmergencyLocationAddressInfo",
          "name": "address"
        },
        {
          "type": "string",
          "description": "Emergency response location name",
          "name": "name"
        },
        {
          "$ref": "ShortSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Emergency address status",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "name": "addressStatus"
        },
        {
          "type": "string",
          "description": "Status of an emergency response location usage.",
          "enum": [
            "Active",
            "Inactive"
          ],
          "name": "usageStatus"
        },
        {
          "type": "string",
          "description": "Address format ID",
          "name": "addressFormatId"
        },
        {
          "type": "string",
          "description": "Visibility of an emergency response location. If `Private`\nis set, then a location is visible only for restricted number of users,\nspecified in `owners` array\n",
          "default": "Public",
          "enum": [
            "Public"
          ],
          "name": "visibility"
        },
        {
          "type": "boolean",
          "default": false,
          "description": "Specifies emergency address validation during the ERL creation/update.\nIf set to 'true', then address validation for non-US addresses is skipped\n",
          "name": "trusted"
        }
      ]
    },
    {
      "name": "CommonEmergencyLocationAddressInfoFr",
      "fields": [
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "string",
          "description": "State/Province name. Mandatory for the USA, the UK and Canada\n",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "The name of the street (The field is utilized as 'streetName' field for FR addresses)",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Company name",
          "name": "companyName"
        },
        {
          "type": "string",
          "description": "(Optional) Building name",
          "name": "buildingName"
        },
        {
          "type": "string",
          "description": "Building/street number",
          "name": "buildingNumber"
        },
        {
          "type": "string",
          "description": "Second line address (apartment, suite, unit, building, floor,\netc.)\n",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "Postal (Zip) code",
          "name": "zip"
        },
        {
          "type": "string",
          "description": "Customer name",
          "name": "customerName"
        }
      ]
    },
    {
      "name": "EmergencyLocationsPaging",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "name": "page",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "totalPages",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "perPage",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "totalElements",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "pageStart",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "pageEnd",
          "required": true
        }
      ]
    },
    {
      "name": "EmergencyLocationsResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CommonEmergencyLocationResource"
          },
          "name": "records"
        },
        {
          "$ref": "EmergencyLocationsPaging",
          "name": "paging"
        }
      ]
    },
    {
      "name": "CommonEmergencyLocationAddressInfoAu",
      "fields": [
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "string",
          "description": "State/Province name. Mandatory for the USA, the UK and Canada\n",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "The name of the street (the field is utilized as 'streetName' field for AU addresses)",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Company name",
          "name": "companyName"
        },
        {
          "type": "string",
          "description": "(Optional) Building name",
          "name": "buildingName"
        },
        {
          "type": "string",
          "description": "Street type",
          "name": "streetType"
        },
        {
          "type": "string",
          "description": "Building/street number",
          "name": "buildingNumber"
        },
        {
          "type": "string",
          "description": "Second line address (apartment, suite, unit, building, floor, etc.)\n",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "Postal (Zip) code",
          "name": "zip"
        },
        {
          "type": "string",
          "description": "Customer name",
          "name": "customerName"
        }
      ]
    },
    {
      "name": "CommonEmergencyLocationAddressInfo",
      "fields": [
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "string",
          "description": "State/Province name. Mandatory for the USA, the UK and Canada\n",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "The name of the street (The field is utilized as 'streetName' field for FR addresses)",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Second line address (apartment, suite, unit, building, floor,\netc.)\n",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "Postal (Zip) code",
          "name": "zip"
        },
        {
          "type": "string",
          "description": "Customer name",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "Company name",
          "name": "companyName"
        },
        {
          "type": "string",
          "description": "(Optional) Building name",
          "name": "buildingName"
        },
        {
          "type": "string",
          "description": "Street type",
          "name": "streetType"
        },
        {
          "type": "string",
          "description": "Building/street number",
          "name": "buildingNumber"
        }
      ]
    },
    {
      "name": "CommonEmergencyLocationResource",
      "description": "Company emergency response location details",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an emergency response location\n",
          "name": "id"
        },
        {
          "$ref": "CommonEmergencyLocationAddressInfo",
          "name": "address"
        },
        {
          "type": "string",
          "description": "Emergency response location name",
          "name": "name"
        },
        {
          "$ref": "ShortSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Emergency address status",
          "enum": [
            "Valid",
            "Invalid",
            "Provisioning"
          ],
          "name": "addressStatus"
        },
        {
          "type": "string",
          "description": "Status of emergency response location usage.",
          "enum": [
            "Active",
            "Inactive"
          ],
          "name": "usageStatus"
        },
        {
          "type": "string",
          "description": "Resulting status of emergency address synchronization. Returned\nif `syncEmergencyAddress` parameter is set to `true`\n",
          "enum": [
            "Verified",
            "Updated",
            "Deleted",
            "ActivationProcess",
            "NotRequired",
            "Unsupported",
            "Failed"
          ],
          "name": "syncStatus"
        },
        {
          "type": "string",
          "enum": [
            "LocationWithElins",
            "LocationWithEndpoint"
          ],
          "name": "addressType"
        },
        {
          "type": "string",
          "description": "Visibility of an emergency response location. If `Private`\nis set, then location is visible only for the restricted number of users,\nspecified in `owners` array\n",
          "default": "Public",
          "enum": [
            "Private",
            "Public"
          ],
          "name": "visibility"
        },
        {
          "type": "array",
          "description": "List of private location owners",
          "items": {
            "$ref": "LocationOwnerInfo"
          },
          "name": "owners"
        },
        {
          "type": "string",
          "description": "Address format ID",
          "name": "addressFormatId"
        }
      ]
    },
    {
      "name": "LocationOwnerInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user - private location owner",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension number of a location number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of a location owner",
          "name": "name"
        }
      ]
    },
    {
      "name": "ShortSiteInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site extension",
          "example": "main-site",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension user first name",
          "name": "name"
        }
      ]
    },
    {
      "name": "EmergencyLocationResponseResource",
      "description": "Company emergency response location details",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an emergency response location\n",
          "name": "id"
        },
        {
          "$ref": "CommonEmergencyLocationAddressInfo",
          "name": "address"
        },
        {
          "type": "string",
          "description": "Emergency response location name",
          "name": "name"
        },
        {
          "$ref": "ShortSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Emergency address status",
          "enum": [
            "Valid",
            "Invalid",
            "Provisioning"
          ],
          "name": "addressStatus"
        },
        {
          "type": "string",
          "description": "Status of emergency response location usage.",
          "enum": [
            "Active",
            "Inactive"
          ],
          "name": "usageStatus"
        },
        {
          "type": "string",
          "description": "Resulting status of emergency address synchronization. Returned\nif `syncEmergencyAddress` parameter is set to `true`\n",
          "enum": [
            "Verified",
            "Updated",
            "Deleted",
            "ActivationProcess",
            "NotRequired",
            "Unsupported",
            "Failed"
          ],
          "name": "syncStatus"
        },
        {
          "type": "string",
          "enum": [
            "LocationWithElins",
            "LocationWithEndpoint"
          ],
          "name": "addressType"
        },
        {
          "type": "string",
          "description": "Visibility of an emergency response location. If `Private`\nis set, then location is visible only for the restricted number of users,\nspecified in `owners` array\n",
          "default": "Public",
          "enum": [
            "Private",
            "Public"
          ],
          "name": "visibility"
        },
        {
          "type": "array",
          "description": "List of private location owners",
          "items": {
            "$ref": "LocationOwnerInfo"
          },
          "name": "owners"
        },
        {
          "type": "string",
          "description": "Address format ID",
          "name": "addressFormatId"
        },
        {
          "type": "boolean",
          "description": "Specifies emergency address validation during the ERL creation/update.\nIf set to 'true', then address validation for non-US addresses is skipped\n",
          "name": "trusted"
        }
      ]
    },
    {
      "name": "LocationDeletionInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Identifies the possibility and status of emergency location\ndeletion\n",
          "enum": [
            "Failed",
            "Completed",
            "Forbidden",
            "Restricted",
            "Allowed"
          ],
          "name": "deletion"
        },
        {
          "$ref": "LocationDeletionErrorInfo",
          "name": "errors"
        }
      ]
    },
    {
      "name": "GetLocationDeletionMultiResponse",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Forbidden",
            "Restricted",
            "Allowed"
          ],
          "name": "deletion"
        },
        {
          "type": "string",
          "enum": [
            "Forbidden",
            "Allowed"
          ],
          "name": "reassignment"
        },
        {
          "type": "array",
          "items": {
            "$ref": "LocationDeletionInfo"
          },
          "name": "emergencyLocations"
        }
      ]
    },
    {
      "name": "LocationDeletionErrorInfo",
      "fields": [
        {
          "type": "string",
          "description": "Error code",
          "name": "errorCode"
        },
        {
          "type": "string",
          "description": "Error message",
          "name": "message"
        },
        {
          "type": "string",
          "description": "Additional attribute for this error, for example `parameterName`",
          "name": "additionalInfo"
        }
      ]
    },
    {
      "name": "ScheduleMeetingResponse",
      "fields": [
        {
          "type": "boolean",
          "name": "startHostVideo"
        },
        {
          "type": "boolean",
          "name": "startParticipantVideo"
        },
        {
          "type": "boolean",
          "name": "audioOptions"
        },
        {
          "type": "boolean",
          "name": "allowJoinBeforeHost"
        },
        {
          "type": "boolean",
          "name": "requirePasswordForSchedulingNewMeetings"
        },
        {
          "type": "boolean",
          "name": "requirePasswordForInstantMeetings"
        },
        {
          "type": "boolean",
          "name": "requirePasswordForPmiMeetings"
        },
        {
          "type": "boolean",
          "name": "enforceLogin"
        }
      ]
    },
    {
      "name": "AccountLockSettingRecordResponse",
      "fields": [
        {
          "type": "boolean",
          "name": "localRecording"
        },
        {
          "type": "boolean",
          "name": "cloudRecording"
        },
        {
          "type": "boolean",
          "name": "autoRecording"
        },
        {
          "type": "boolean",
          "name": "cloudRecordingDownload"
        },
        {
          "type": "boolean",
          "name": "hostDeleteCloudRecording"
        },
        {
          "type": "boolean",
          "name": "accountUserAccessRecording"
        },
        {
          "type": "boolean",
          "name": "autoDeleteCmr"
        }
      ]
    },
    {
      "name": "AccountLockedSettingResponse",
      "fields": [
        {
          "$ref": "ScheduleMeetingResponse",
          "name": "scheduleMeeting"
        },
        {
          "$ref": "AccountLockSettingRecordResponse",
          "name": "recording"
        }
      ]
    },
    {
      "name": "MeetingLinks",
      "description": "Meeting links",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "startUri"
        },
        {
          "type": "string",
          "format": "uri",
          "name": "joinUri"
        }
      ]
    },
    {
      "name": "MeetingsTimezoneResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "description"
        }
      ]
    },
    {
      "name": "MeetingOccurrenceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Identifier of a meeting occurrence",
          "name": "id"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Starting time of a meeting occurrence",
          "name": "startTime"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Duration of a meeting occurrence",
          "name": "durationInMinutes"
        },
        {
          "type": "string",
          "description": "Status of a meeting occurrence",
          "name": "status"
        }
      ]
    },
    {
      "name": "RecurrenceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Recurrence time frame",
          "enum": [
            "Daily",
            "Weekly",
            "Monthly"
          ],
          "name": "frequency"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Recurrence interval. The supported ranges are: 1-90 for `Daily`;\n1-12 for `Weekly`; 1-3 for `Monthly`\n",
          "name": "interval"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "This field is used only if you're scheduling a recurring meeting of type `3` to state a specific day in a week when the monthly meeting should recur; it works together with `MonthlyByWeek` field. The values are: 1 - Sunday; 2 - Monday; 3 - Tuesday; 4 - Wednesday; 5 - Thursday; 6 - Friday; 7- Saturday",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ]
          },
          "name": "weeklyByDays"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The supported range is 1-31",
          "name": "monthlyByDay"
        },
        {
          "type": "string",
          "description": "Supported together with `weeklyByDay`",
          "enum": [
            "Last",
            "First",
            "Second",
            "Third",
            "Fourth"
          ],
          "name": "monthlyByWeek"
        },
        {
          "type": "string",
          "description": "This field is used only if you're scheduling a recurring meeting of type `3` to state a specific day in a week when the monthly meeting should recur; it works together with `MonthlyByWeek` field. The values are: 1 - Sunday; 2 - Monday; 3 - Tuesday; 4 - Wednesday; 5 - Thursday; 6 - Friday; 7- Saturday",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "name": "monthlyByWeekDay"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Number of meeting occurrences",
          "name": "count"
        },
        {
          "type": "string",
          "description": "Meeting expiration date-time",
          "name": "until"
        }
      ]
    },
    {
      "name": "HostInfoRequest",
      "description": "Meeting host information",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the meeting host resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension which is assigned to be a meeting host. The default value is currently logged-in extension identifier",
          "name": "id"
        }
      ]
    },
    {
      "name": "MeetingScheduleResource",
      "description": "Timing of a meeting",
      "fields": [
        {
          "type": "string",
          "format": "date-time",
          "name": "startTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "durationInMinutes"
        },
        {
          "$ref": "MeetingsTimezoneResource",
          "name": "timeZone"
        }
      ]
    },
    {
      "name": "MeetingResponseResource",
      "fields": [
        {
          "type": "string",
          "description": "Link to a meeting resource",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Universally unique identifier of a meeting\"",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Internal identifier of a meeting",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Custom topic of a meeting",
          "name": "topic"
        },
        {
          "type": "string",
          "enum": [
            "Instant",
            "Scheduled",
            "ScheduledRecurring",
            "Recurring"
          ],
          "name": "meetingType"
        },
        {
          "type": "string",
          "description": "Meeting password",
          "name": "password"
        },
        {
          "type": "string",
          "name": "h323Password"
        },
        {
          "type": "string",
          "description": "Status of a meeting",
          "name": "status"
        },
        {
          "$ref": "MeetingLinks",
          "name": "links"
        },
        {
          "$ref": "MeetingScheduleResource",
          "name": "schedule"
        },
        {
          "$ref": "HostInfoRequest",
          "name": "host"
        },
        {
          "type": "boolean",
          "description": "If true, then participants can join the meeting before host arrives",
          "default": false,
          "name": "allowJoinBeforeHost"
        },
        {
          "type": "boolean",
          "description": "Starting meetings with host video on/off (true/false)",
          "default": false,
          "name": "startHostVideo"
        },
        {
          "type": "boolean",
          "description": "Starting meetings with participant video on/off (true/false)",
          "default": false,
          "name": "startParticipantsVideo"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Phone",
              "ComputerAudio"
            ]
          },
          "name": "audioOptions"
        },
        {
          "$ref": "RecurrenceInfo",
          "name": "recurrence"
        },
        {
          "type": "string",
          "description": "Automatic record type",
          "default": "none",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "name": "autoRecordType"
        },
        {
          "type": "boolean",
          "description": "If true, then only signed-in users can join this meeting",
          "name": "enforceLogin"
        },
        {
          "type": "boolean",
          "description": "If true, then participants are muted on entry",
          "name": "muteParticipantsOnEntry"
        },
        {
          "type": "array",
          "items": {
            "$ref": "MeetingOccurrenceInfo"
          },
          "name": "occurrences"
        },
        {
          "type": "boolean",
          "description": "If true, then the waiting room for participants is enabled",
          "name": "enableWaitingRoom"
        },
        {
          "type": "array",
          "description": "List of global dial-in countries (eg. US, UK, AU, etc.)",
          "items": {
            "type": "string"
          },
          "name": "globalDialInCountries"
        },
        {
          "type": "string",
          "name": "alternativeHosts"
        }
      ]
    },
    {
      "name": "DepartmentMemberList",
      "description": "Please note that legacy 'Department' extension type corresponds to\n'Call Queue' extensions in modern RingCentral product terminology\n",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URL of the resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of call queue member extensions",
          "items": {
            "$ref": "ExtensionInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "ExtensionInfo",
      "description": "Information on the extension, to which the phone number is assigned.\nReturned only for the request of Account phone number list\n",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension short number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "For partner applications. Internal identifier of an extension\ncreated by partner. The RingCentral supports the mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using `pid=XXX` clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n",
          "name": "partnerId"
        }
      ]
    },
    {
      "name": "BulkAssignItem",
      "fields": [
        {
          "type": "string",
          "name": "departmentId"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "addedExtensionIds"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "removedExtensionIds"
        }
      ]
    },
    {
      "name": "DepartmentBulkAssignResource",
      "description": "Please note that legacy 'Department' extension type corresponds to\n'Call Queue' extensions in modern RingCentral product terminology\n",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "BulkAssignItem"
          },
          "name": "items"
        }
      ]
    },
    {
      "name": "PresenceNavigationInfoURI",
      "description": "Canonical URI for the corresponding page of the list",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        }
      ]
    },
    {
      "name": "ActiveCallInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "boolean",
          "description": "Identifies if a call belongs to the call queue",
          "name": "queueCall"
        },
        {
          "type": "string",
          "description": "Phone number or extension number of a caller. For GCM transport type '_from' property should be used",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Name of a caller",
          "name": "fromName"
        },
        {
          "type": "string",
          "description": "Phone number or extension number of a callee",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Name of a callee",
          "name": "toName"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Time when the call is actually started",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Telephony presence status",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "$ref": "DetailedCallInfo",
          "name": "sipData"
        },
        {
          "type": "string",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Telephony identifier of a call session",
          "name": "telephonySessionId"
        },
        {
          "type": "string",
          "description": "Extension ID of the call owner on whose behalf a call is performed",
          "name": "onBehalfOf"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call party",
          "name": "partyId"
        },
        {
          "type": "string",
          "name": "terminationType"
        },
        {
          "$ref": "CallInfoCQ",
          "name": "callInfo"
        }
      ]
    },
    {
      "name": "PrimaryCQInfo",
      "description": "Primary call session information. Supported for Call Queues only",
      "fields": [
        {
          "type": "string",
          "description": "Call information to be displayed as 'Line 1' for a call queue call session",
          "enum": [
            "PhoneNumberLabel",
            "PhoneNumber",
            "QueueExtension",
            "QueueName",
            "CallerIdName",
            "CallerIdNumber",
            "None"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Call information value",
          "name": "value"
        }
      ]
    },
    {
      "name": "AdditionalCQInfo",
      "description": "Additional call session information. Supported for Call Queues only",
      "fields": [
        {
          "type": "string",
          "description": "Call information to be displayed as 'Line 2' for a call queue call session",
          "enum": [
            "PhoneNumberLabel",
            "PhoneNumber",
            "QueueExtension",
            "QueueName",
            "CallerIdName",
            "CallerIdNumber",
            "None"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Call information value",
          "name": "value"
        }
      ]
    },
    {
      "name": "AccountPresenceInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of account presence resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of Prompts",
          "items": {
            "$ref": "GetPresenceInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PresenceNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "PresencePagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "AccountPresenceEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter name",
          "name": "event"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "AccountPresenceEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "PresencePagingInfo",
      "description": "Information on paging",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "name": "page"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "name": "perPage"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "DetailedCallInfo",
      "fields": [
        {
          "type": "string",
          "name": "callId"
        },
        {
          "type": "string",
          "name": "toTag"
        },
        {
          "type": "string",
          "name": "fromTag"
        },
        {
          "format": "uri",
          "type": "string",
          "name": "remoteUri"
        },
        {
          "format": "uri",
          "type": "string",
          "name": "localUri"
        },
        {
          "type": "string",
          "name": "rcSessionId"
        }
      ]
    },
    {
      "name": "GetPresenceInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a presence info resource",
          "name": "uri"
        },
        {
          "type": "boolean",
          "description": "If set to `true` - enables other extensions to see the extension presence status",
          "name": "allowSeeMyPresence"
        },
        {
          "type": "string",
          "description": "Configures the user presence visibility. When the `allowSeeMyPresence` parameter is set to `true`,\nthe following visibility options are supported via this parameter - All, None, PermittedUsers\n",
          "enum": [
            "All",
            "None",
            "PermittedUsers"
          ],
          "name": "callerIdVisibility"
        },
        {
          "type": "string",
          "description": "Extended DnD (Do not Disturb) status. Cannot be set for Department/Announcement/Voicemail\n(Take Messages Only)/Fax User/Shared Lines Group/Paging Only Group/IVR\nMenu/Application Extension/Park Location extensions. The 'DoNotAcceptDepartmentCalls'\nand 'TakeDepartmentCallsOnly' values are applicable only for extensions\n- members of a Department; if these values are set for department outsiders,\nthe 400 Bad Request error code is returned. The 'TakeDepartmentCallsOnly'\nstatus can be set through the old RingCentral user interface and is available\nfor some migrated accounts only.\n",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly"
          ],
          "name": "dndStatus"
        },
        {
          "$ref": "GetPresenceExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Custom status message (as previously published by user)",
          "name": "message"
        },
        {
          "type": "boolean",
          "description": "If `true` enables the extension user to pick up a monitored line on hold",
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        },
        {
          "type": "boolean",
          "description": "If `true` enables to ring extension phone, if any user monitored by this extension is ringing",
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "string",
          "description": "Telephony presence status",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "string",
          "description": "User-defined presence status (as previously published by the user)",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "description": "RingCentral Meetings presence",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "name": "meetingStatus"
        },
        {
          "type": "array",
          "description": "Information on active calls",
          "items": {
            "$ref": "ActiveCallInfo"
          },
          "name": "activeCalls"
        }
      ]
    },
    {
      "name": "CallInfoCQ",
      "description": "Primary/additional CQ information",
      "fields": [
        {
          "$ref": "PrimaryCQInfo",
          "name": "primary"
        },
        {
          "$ref": "AdditionalCQInfo",
          "name": "additional"
        }
      ]
    },
    {
      "name": "GetPresenceExtensionInfo",
      "description": "Information on extension, for which this presence data is returned",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension number (usually 3 or 4 digits)",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "AccountPresenceEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension. Optional parameter",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Telephony presence status. Returned if telephony status is changed",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Order number of a notification to state the chronology",
          "name": "sequence"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        },
        {
          "type": "string",
          "description": "User-defined presence status (as previously published by the user)",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "description": "Extended DnD (Do not Disturb) status",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly"
          ],
          "name": "dndStatus"
        },
        {
          "type": "string",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "description": "Meetings presence status. Specifies if a user is on a meeting",
          "name": "meetingStatus"
        },
        {
          "type": "boolean",
          "description": "If `true` enables other extensions to see the extension presence status",
          "name": "allowSeeMyPresence"
        },
        {
          "type": "boolean",
          "description": "If `true` enables to ring extension phone, if any user monitored by this extension is ringing",
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "description": "If `true` enables the extension user to pick up a monitored line on hold",
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "PresenceNavigationInfo",
      "description": "Information on navigation",
      "fields": [
        {
          "$ref": "PresenceNavigationInfoURI",
          "name": "firstPage"
        },
        {
          "$ref": "PresenceNavigationInfoURI",
          "name": "nextPage"
        },
        {
          "$ref": "PresenceNavigationInfoURI",
          "name": "previousPage"
        },
        {
          "$ref": "PresenceNavigationInfoURI",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "CallRecordingIds",
      "fields": [
        {
          "type": "array",
          "description": "Call recordings ID(s) to delete",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 100,
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "ExtensionWithRolesCollectionResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ExtensionWithRolesResource"
          },
          "name": "records"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "AssignedRoleResource",
      "fields": [
        {
          "type": "string",
          "description": "Link to an assigned role resource",
          "format": "uri",
          "readOnly": true,
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a role",
          "name": "id"
        },
        {
          "type": "boolean",
          "default": false,
          "description": "Specifies if a role can be auto assigned",
          "name": "autoAssigned"
        },
        {
          "type": "string",
          "description": "Name of a default role",
          "name": "displayName"
        },
        {
          "type": "boolean",
          "description": "Site compatibility flag",
          "name": "siteCompatible"
        },
        {
          "type": "boolean",
          "description": "Site restricted flag",
          "name": "siteRestricted"
        }
      ]
    },
    {
      "name": "ExtensionWithRolesResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "extensionId"
        },
        {
          "type": "array",
          "items": {
            "$ref": "AssignedRoleResource"
          },
          "name": "roles"
        }
      ]
    },
    {
      "name": "MeetingRecordingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Unique identifier of a meeting instance",
          "name": "uuid"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link for downloading the recorded file (mp4, mp3 audio and text/plain chat file)",
          "name": "contentDownloadUri"
        },
        {
          "type": "string",
          "enum": [
            "video/mp4",
            "audio/m4a",
            "text/vtt"
          ],
          "name": "contentType"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "size"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Starting time of a recording",
          "name": "startTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Ending time of a recording",
          "name": "endTime"
        },
        {
          "type": "string",
          "enum": [
            "Completed",
            "Processing"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "MeetingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Unique identifier of a meeting instance",
          "name": "uuid"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "topic"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "startTime"
        }
      ]
    },
    {
      "name": "ListMeetingRecordingsResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "MeetingRecordings"
          },
          "name": "records"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "MeetingRecordings",
      "fields": [
        {
          "$ref": "MeetingInfo",
          "name": "meeting"
        },
        {
          "type": "array",
          "items": {
            "$ref": "MeetingRecordingInfo"
          },
          "name": "recordings"
        }
      ]
    },
    {
      "name": "ForwardAllCompanyCallsRequest",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates whether the *Forward All Company Calls* feature is enabled or disabled for an account",
          "name": "enabled",
          "required": true
        }
      ]
    },
    {
      "name": "ForwardAllCallsReason",
      "fields": [
        {
          "type": "string",
          "enum": [
            "ExtensionLimitation",
            "FeatureLimitation"
          ],
          "description": "Specifies the type of limitation. `ExtensionLimitation` means that the feature is turned off for this particular extension.\n`FeatureLimitation` means that the user may enable this feature and setup the rule via the Service Web UI\n",
          "name": "code"
        },
        {
          "type": "string",
          "description": "Error message depending on the type of limitation",
          "name": "message"
        }
      ]
    },
    {
      "name": "ForwardAllCompanyCallsInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates whether the *Forward All Company Calls* feature is enabled or disabled for an account",
          "name": "enabled"
        },
        {
          "type": "array",
          "description": "Specific data ranges. If specified, weeklyRanges cannot be specified",
          "items": {
            "$ref": "RangesInfo"
          },
          "name": "ranges"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded. The default value\nis 'Operator' 'Operator' - play company greeting and forward to operator\nextension 'Disconnect' - play company greeting and disconnect 'Bypass'\n- bypass greeting to go to selected extension = ['Operator', 'Disconnect',\n'Bypass']\n",
          "enum": [
            "Operator",
            "Disconnect",
            "Bypass"
          ],
          "name": "callHandlingAction"
        },
        {
          "$ref": "ExtensionShortInfoResource",
          "name": "extension"
        },
        {
          "$ref": "ForwardAllCallsReason",
          "name": "reason"
        }
      ]
    },
    {
      "name": "ExtensionShortInfoResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "CallMonitoringGroups",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a call monitoring groups resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "array",
          "description": "List of call monitoring group members",
          "items": {
            "$ref": "CallMonitoringGroup"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "CallMonitoringGroup",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a call monitoring group resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a group",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a group",
          "name": "name"
        },
        {
          "$ref": "CallMonitoringGroupSite",
          "name": "site"
        }
      ]
    },
    {
      "name": "CreateCallMonitoringGroupRequest",
      "fields": [
        {
          "type": "string",
          "description": "Name of a group",
          "name": "name",
          "required": true
        },
        {
          "$ref": "CreateCallMonitoringGroupRequestSite",
          "name": "site",
          "required": false
        }
      ]
    },
    {
      "name": "CallMonitoringBulkAssign",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CallMonitoringExtensionInfo"
          },
          "name": "addedExtensions"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallMonitoringExtensionInfo"
          },
          "name": "updatedExtensions"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallMonitoringExtensionInfo"
          },
          "name": "removedExtensions"
        }
      ]
    },
    {
      "name": "CallMonitoringExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension. Only the following extension\ntypes are allowed: User, DigitalUser, VirtualUser, FaxUser, Limited\n",
          "name": "id"
        },
        {
          "type": "array",
          "description": "Set of call monitoring group permissions granted to a specified\nextension. In order to remove a specified extension from a call monitoring\ngroup use an empty value\n",
          "items": {
            "type": "string",
            "enum": [
              "Monitoring",
              "Monitored"
            ]
          },
          "name": "permissions"
        }
      ]
    },
    {
      "name": "CallMonitoringGroupMemberInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a call monitoring group member",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call monitoring group member\n",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension number of a call monitoring group member\n",
          "name": "extensionNumber"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Call monitoring permission; multiple values are allowed:\n- `Monitoring` - User can monitor a group;\n- `Monitored` - User can be monitored.\n",
            "enum": [
              "Monitoring",
              "Monitored"
            ]
          },
          "name": "permissions"
        }
      ]
    },
    {
      "name": "CallMonitoringGroupMemberList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a call monitoring group members resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "array",
          "description": "List of a call monitoring group members",
          "items": {
            "$ref": "CallMonitoringGroupMemberInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "ModifyAccountBusinessAddressRequest",
      "fields": [
        {
          "type": "string",
          "description": "Company business name",
          "name": "company"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Company business email address",
          "name": "email"
        },
        {
          "$ref": "BusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "type": "string",
          "description": "Custom site name",
          "name": "mainSiteName"
        }
      ]
    },
    {
      "name": "BusinessAddressInfo",
      "description": "Company business address",
      "fields": [
        {
          "type": "string",
          "description": "Name of a country",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Name of a state/province",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Name of a city",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Street address",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Zip code",
          "name": "zip"
        }
      ]
    },
    {
      "name": "AccountBusinessAddressResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "type": "string",
          "description": "Company business name",
          "name": "company"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Company business email address",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Custom site name",
          "name": "mainSiteName"
        }
      ]
    },
    {
      "name": "AccountHistoryRecordTarget",
      "description": "Action target object (company/extension)",
      "fields": [
        {
          "type": "string",
          "description": "Extension identifier of the affected entity or \"0\" for Company level",
          "example": "404611540004",
          "name": "objectId"
        },
        {
          "type": "string",
          "description": "Type of the entity.",
          "example": "Extension",
          "enum": [
            "Extension",
            "Account",
            "Company",
            "Template"
          ],
          "name": "objectType"
        },
        {
          "type": "string",
          "description": "Target extension name",
          "example": "Charlie Williams",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Target extension (short) number  of the affected entity (if the objectType is EXTENSION).",
          "example": "103",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Target extension site identifier (if any)",
          "example": "871836004",
          "name": "siteId"
        }
      ]
    },
    {
      "name": "AccountHistoryRecordPublicDetails",
      "fields": [
        {
          "type": "array",
          "description": "Event details (additional parameters)",
          "items": {
            "$ref": "AccountHistoryRecordDetailsParameters"
          },
          "name": "parameters"
        }
      ]
    },
    {
      "name": "AccountHistoryRecordDetailsParameters",
      "fields": [
        {
          "type": "string",
          "example": "settingName",
          "name": "key",
          "required": true
        },
        {
          "type": "string",
          "example": "Password",
          "name": "value",
          "required": true
        }
      ]
    },
    {
      "name": "AccountHistoryPaging",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty\n(because non-existent page was specified or perPage=0 was requested)\n",
          "name": "page"
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "description": "Current page size, describes how many items are in each page. Matches \"perPage\" parameter from the request",
          "example": 50,
          "name": "perPage"
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "Total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "example": 25,
          "name": "total"
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "Total number of elements in a dataset. May be omitted for some resources due to performance reasons",
          "example": 25,
          "name": "totalFound"
        }
      ]
    },
    {
      "name": "AccountHistorySearchPublicResponse",
      "fields": [
        {
          "type": "array",
          "description": "List of records",
          "items": {
            "$ref": "AccountHistoryPublicRecord"
          },
          "name": "records"
        },
        {
          "$ref": "AccountHistoryPaging",
          "name": "paging"
        }
      ]
    },
    {
      "name": "AccountHistoryPublicRecord",
      "fields": [
        {
          "type": "string",
          "description": "Internal record identifier",
          "example": "9835bead-397b-4ba8-b457-73f07ab79997",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Timestamp of an event (provided by a client), RFC3339 date-time format, UTC time zone.",
          "format": "date-time",
          "name": "eventTime"
        },
        {
          "$ref": "AccountHistoryRecordPublicInitiator",
          "name": "initiator"
        },
        {
          "type": "string",
          "description": "Action type",
          "example": "CHANGE_SECRET_INFO",
          "name": "actionId"
        },
        {
          "type": "string",
          "description": "Operation: \"CREATE\", \"UPDATE\", \"DELETE\" or custom",
          "example": "UPDATE",
          "name": "eventType"
        },
        {
          "type": "string",
          "description": "Account identifier which is related with the particular record.",
          "example": "403858014008",
          "name": "accountId"
        },
        {
          "type": "string",
          "description": "Account (company) name",
          "example": "Some Company",
          "name": "accountName"
        },
        {
          "$ref": "AccountHistoryRecordTarget",
          "name": "target"
        },
        {
          "type": "string",
          "description": "IP-address of a client.",
          "example": "192.168.42.6",
          "name": "clientIp"
        },
        {
          "type": "string",
          "description": "Custom top-level comment",
          "name": "comment"
        },
        {
          "$ref": "AccountHistoryRecordPublicDetails",
          "name": "details"
        }
      ]
    },
    {
      "name": "AccountHistorySearchPublicRequest",
      "fields": [
        {
          "type": "string",
          "format": "date-time",
          "description": "The beginning of the time range to return records in ISO 8601 format in UTC timezone, default is \"eventTimeFrom\"-24 hours\n",
          "name": "eventTimeFrom"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The end of the time range to return records in ISO 8601 format in UTC timezone, default is the current time",
          "name": "eventTimeTo"
        },
        {
          "type": "array",
          "description": "List of extension IDs of change initiators.",
          "items": {
            "type": "string"
          },
          "name": "initiatorIds"
        },
        {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Page number in the result set",
          "name": "page"
        },
        {
          "type": "integer",
          "format": "int32",
          "example": 25,
          "description": "Number of records to be returned per page.",
          "name": "perPage"
        },
        {
          "type": "array",
          "example": [
            "404611540004"
          ],
          "description": "List of extension (user) IDs affected by this action.",
          "items": {
            "type": "string"
          },
          "name": "targetIds"
        },
        {
          "type": "string",
          "example": "871836004",
          "description": "Site ID to apply as a filter",
          "name": "siteId"
        },
        {
          "type": "array",
          "example": [
            "CHANGE_SECRET_INFO",
            "CHANGE_USER_INFO"
          ],
          "description": "List of action IDs (exact keys) to search for (alternatively \"excludeActionIds\" option can be used).",
          "items": {
            "type": "string"
          },
          "name": "actionIds"
        },
        {
          "type": "string",
          "example": "542617",
          "description": "The (sub)string to search, applied to the following fields:\n\n- initiator.name\n- initiator.role\n- initiator.extensionNumber\n- target.name\n- target.extensionNumber\n- details.parameters.value",
          "name": "searchString"
        },
        {
          "type": "array",
          "example": [
            "CHANGE_SECRET_INFO",
            "CHANGE_USER_INFO"
          ],
          "description": "List of action IDs (exact keys) to exclude from your search (alternatively \"actionIds\" option can be used).",
          "items": {
            "type": "string"
          },
          "name": "excludeActionIds"
        }
      ]
    },
    {
      "name": "AccountHistoryRecordPublicInitiator",
      "description": "Event initiator info",
      "fields": [
        {
          "type": "string",
          "description": "Current user extension identifier",
          "example": "402539300008",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Current user extension (short) number",
          "example": "101",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Current user full name",
          "example": "Alice Smith",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Current user role",
          "example": "Super Admin",
          "name": "role"
        }
      ]
    },
    {
      "name": "IvrMenuPromptInfo",
      "description": "Prompt metadata",
      "fields": [
        {
          "type": "string",
          "description": "Prompt mode: custom media or text",
          "enum": [
            "Audio",
            "TextToSpeech"
          ],
          "name": "mode"
        },
        {
          "$ref": "AudioPromptInfo",
          "name": "audio"
        },
        {
          "type": "string",
          "description": "For 'TextToSpeech' mode only. Prompt text",
          "name": "text"
        },
        {
          "$ref": "PromptLanguageInfo",
          "name": "language"
        }
      ]
    },
    {
      "name": "IvrMenuSiteInfo",
      "description": "Site data",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site. If the value is not specified in request, then the `main-site` default value is used",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Site name",
          "name": "name"
        }
      ]
    },
    {
      "name": "PromptLanguageInfo",
      "description": "For 'TextToSpeech' mode only. Prompt language metadata",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a prompt language",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a language",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Language name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Language locale code",
          "name": "localeCode"
        }
      ]
    },
    {
      "name": "IVRMenuExtensionInfo",
      "description": "For 'Connect' or 'Voicemail' actions only. Extension reference",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an extension resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of an extension",
          "name": "name"
        }
      ]
    },
    {
      "name": "IVRMenuListInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an IVR Menu extension",
          "example": "7258440006",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an IVR Menu extension resource",
          "example": "https://api-example.rincentral.com/restapi/v1.0/account/5936989006/ivr-menus/7258440006",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "First name of an IVR Menu user",
          "example": "IVR Menu 1001",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Number of an IVR Menu extension",
          "example": "1001",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "IVRMenuInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an IVR Menu extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an IVR Menu extension resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "First name of an IVR Menu user",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Number of an IVR Menu extension",
          "name": "extensionNumber"
        },
        {
          "$ref": "IvrMenuSiteInfo",
          "name": "site"
        },
        {
          "$ref": "IvrMenuPromptInfo",
          "name": "prompt"
        },
        {
          "type": "array",
          "description": "Keys handling settings",
          "items": {
            "$ref": "IVRMenuActionsInfo"
          },
          "name": "actions"
        }
      ]
    },
    {
      "name": "AudioPromptInfo",
      "description": "For 'Audio' mode only. Prompt media reference",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a prompt audio file",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a prompt",
          "name": "id"
        }
      ]
    },
    {
      "name": "IVRMenuActionsInfo",
      "fields": [
        {
          "type": "string",
          "description": "Key. The following values are supported: numeric: '1' to '9' Star Hash NoInput ",
          "name": "input"
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "enum": [
            "Connect",
            "Voicemail",
            "DialByName",
            "Transfer",
            "Repeat",
            "ReturnToRoot",
            "ReturnToPrevious",
            "Disconnect",
            "ReturnToTopLevelMenu",
            "DoNothing",
            "ConnectToOperator"
          ],
          "name": "action"
        },
        {
          "$ref": "IVRMenuExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "For 'Transfer' action only. PSTN number in E.164 format",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "IVRMenuList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an IVR Menu list",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of ivr menus",
          "items": {
            "$ref": "IVRMenuListInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CreateMessageStoreReportRequest",
      "fields": [
        {
          "type": "string",
          "format": "date-time",
          "description": "The end of the time range to collect message records in ISO 8601 format including timezone.\nDefault is the current time\n",
          "name": "dateTo"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The beginning of the time range to collect call log records in ISO 8601 format including timezone.\nDefault is the current time minus 24 hours\n",
          "name": "dateFrom"
        },
        {
          "type": "array",
          "description": "Types of messages to be collected. If not specified, all messages without message type filtering will be returned. Multiple values are accepted",
          "items": {
            "type": "string",
            "description": "Type of messages to be collected",
            "enum": [
              "Fax",
              "SMS",
              "VoiceMail",
              "Pager"
            ],
            "example": "Fax"
          },
          "example": [
            "Fax",
            "VoiceMail"
          ],
          "name": "messageTypes"
        }
      ]
    },
    {
      "name": "MessageStoreReport",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a message store report task",
          "example": "400142200026-400142200026-bd162f24028442489385eb3f44c18354",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a task",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Status of a message store report task",
          "enum": [
            "Accepted",
            "Pending",
            "InProgress",
            "AttemptFailed",
            "Failed",
            "Completed",
            "Cancelled"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Internal identifier of an account",
          "name": "accountId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The end of the time range to collect message records in ISO 8601 format including timezone",
          "name": "dateTo"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The beginning of the time range to collect call log records in ISO 8601 format including timezone",
          "name": "dateFrom"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time when this task was started",
          "name": "startTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time when this task was finished",
          "name": "finishTime"
        },
        {
          "type": "array",
          "description": "Type of messages to be collected.",
          "items": {
            "type": "string",
            "description": "Type of messages to be collected",
            "enum": [
              "Fax",
              "SMS",
              "VoiceMail",
              "Pager"
            ],
            "example": "Fax"
          },
          "example": [
            "Fax",
            "VoiceMail"
          ],
          "name": "messageTypes"
        }
      ]
    },
    {
      "name": "MessageStoreReportArchive",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "ArchiveInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ArchiveInfo",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Archive size in bytes",
          "example": 201412,
          "name": "size"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link for archive download",
          "name": "uri"
        }
      ]
    },
    {
      "name": "ADGError",
      "description": "Description of an error occurred during request processing. This data type can be used only in readonly mode, no writing is allowed",
      "fields": [
        {
          "type": "string",
          "description": "Code that characterizes this error. Code uniquely identifies the source of the error.",
          "readOnly": true,
          "enum": [
            "ErrorCode{code='ADG-000', httpStatus=503, description='Service temporary unavailable.'}",
            "ErrorCode{code='ADG-010', httpStatus=503, description='Federation data temporary unavailable.'}",
            "ErrorCode{code='ADG-001', httpStatus=500, description='Service internal error.'}",
            "ErrorCode{code='ADG-100', httpStatus=403, description='Insufficient permissions.'}",
            "ErrorCode{code='ADG-101', httpStatus=403, description='Unauthorized access.'}",
            "ErrorCode{code='ADG-102', httpStatus=405, description='Method not allowed.'}",
            "ErrorCode{code='ADG-111', httpStatus=400, description='Need Content-Type header.'}",
            "ErrorCode{code='ADG-112', httpStatus=400, description='Request body is invalid.'}",
            "ErrorCode{code='ADG-121', httpStatus=400, description='Parameter [${paramName}] is invalid. ${additionalInfo:-}'}",
            "ErrorCode{code='ADG-115', httpStatus=415, description='Unsupported Media Type.'}",
            "ErrorCode{code='ADG-105', httpStatus=404, description='Current account is not linked to any federation.'}",
            "ErrorCode{code='ADG-107', httpStatus=404, description='Account not found.'}",
            "ErrorCode{code='ADG-122', httpStatus=404, description='Contact not found.'}",
            "ErrorCode{code='ADG-200', httpStatus=404, description='Invalid URI'}"
          ],
          "name": "errorCode"
        },
        {
          "type": "string",
          "description": "Message that describes the error. This message can be used in UI.",
          "readOnly": true,
          "name": "message"
        }
      ]
    },
    {
      "name": "BusinessSiteResource",
      "fields": [
        {
          "type": "string",
          "example": "872781820006",
          "name": "id"
        },
        {
          "type": "string",
          "example": "Sales site",
          "name": "name"
        },
        {
          "type": "string",
          "example": "1007",
          "name": "code"
        }
      ]
    },
    {
      "name": "PhoneNumberResource",
      "fields": [
        {
          "type": "string",
          "example": "+1 (205) 6812029",
          "name": "formattedPhoneNumber"
        },
        {
          "type": "string",
          "example": "+12056812029",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "example": "VoiceFax",
          "name": "type"
        },
        {
          "type": "string",
          "description": "Custom user name of a phone number, if any",
          "example": "Boss",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Usage type of phone number",
          "enum": [
            "MobileNumber",
            "ContactNumber",
            "DirectNumber",
            "ForwardedNumber",
            "PartnerBusinessMobileNumber"
          ],
          "example": "DirectNumber",
          "name": "usageType"
        },
        {
          "type": "boolean",
          "description": "Specifies if a phone number should be hidden or not",
          "name": "hidden"
        },
        {
          "type": "boolean",
          "description": "Specifies if the number is primary, i.e. displayed as 'main number' and called by default",
          "name": "primary"
        }
      ]
    },
    {
      "name": "ExternalIntegrationResource",
      "fields": [
        {
          "type": "string",
          "example": "9813",
          "name": "id"
        },
        {
          "type": "string",
          "example": "1",
          "name": "typeId"
        },
        {
          "type": "string",
          "example": "External",
          "name": "type"
        },
        {
          "type": "string",
          "example": "Integration X",
          "name": "displayName"
        },
        {
          "type": "string",
          "example": "Account",
          "name": "routingType"
        },
        {
          "type": "string",
          "example": "1726",
          "name": "outboundEdgeId"
        }
      ]
    },
    {
      "name": "ContactResource",
      "fields": [
        {
          "type": "string",
          "description": "Contact extension identifier",
          "example": "865706371004",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Contact type",
          "example": "User",
          "enum": [
            "User",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "ParkLocation",
            "IvrMenu",
            "Limited",
            "ApplicationExtension",
            "Site",
            "Bot",
            "Room",
            "ProxyAdmin",
            "DelegatedLinesGroup",
            "GroupCallPickup",
            "External",
            "RoomConnector",
            "Unknown"
          ],
          "name": "type",
          "required": false
        },
        {
          "type": "string",
          "description": "Contact status",
          "example": "Enabled",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated",
            "Unassigned",
            "Unknown"
          ],
          "name": "status",
          "required": false
        },
        {
          "$ref": "AccountResource",
          "name": "account",
          "required": false
        },
        {
          "type": "string",
          "example": "External",
          "name": "department",
          "required": false
        },
        {
          "type": "string",
          "format": "email",
          "example": "john.doe@mycompany.com",
          "name": "email",
          "required": false
        },
        {
          "type": "string",
          "example": "103",
          "name": "extensionNumber",
          "required": false
        },
        {
          "type": "string",
          "description": "First name of a contact, for user extensions only",
          "example": "John",
          "name": "firstName",
          "required": false
        },
        {
          "type": "string",
          "description": "Last name of a contact, for user extensions only",
          "example": "Doe",
          "name": "lastName",
          "required": false
        },
        {
          "type": "string",
          "description": "Name of a contact, for non-user extensions",
          "example": "Conference room ?5",
          "name": "name",
          "required": false
        },
        {
          "type": "string",
          "example": "Sales manager",
          "name": "jobTitle",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "PhoneNumberResource"
          },
          "name": "phoneNumbers",
          "required": false
        },
        {
          "$ref": "AccountDirectoryProfileImageResource",
          "name": "profileImage",
          "required": false
        },
        {
          "$ref": "BusinessSiteResource",
          "name": "site",
          "required": false
        },
        {
          "type": "boolean",
          "name": "hidden",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldResource"
          },
          "name": "customFields",
          "required": false
        },
        {
          "$ref": "ExternalIntegrationResource",
          "name": "integration",
          "required": false
        }
      ]
    },
    {
      "name": "AccountResource",
      "fields": [
        {
          "type": "string",
          "example": "My lovely company",
          "name": "companyName",
          "required": false
        },
        {
          "type": "string",
          "example": "Lovely Holding",
          "name": "federatedName",
          "required": false
        },
        {
          "type": "string",
          "example": "400131426008",
          "name": "id",
          "required": true
        },
        {
          "$ref": "PhoneNumberResource",
          "name": "mainNumber",
          "required": false
        }
      ]
    },
    {
      "name": "DirectoryResource",
      "fields": [
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "ContactResource"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "CustomFieldResource",
      "fields": [
        {
          "type": "string",
          "example": "1032854",
          "name": "id"
        },
        {
          "type": "string",
          "example": "Rank",
          "name": "name"
        },
        {
          "type": "string",
          "example": "5",
          "name": "value"
        }
      ]
    },
    {
      "name": "AccountDirectoryProfileImageResource",
      "fields": [
        {
          "type": "string",
          "example": "tag",
          "name": "etag"
        },
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        }
      ]
    },
    {
      "name": "ADGErrorResponse",
      "description": "Format of response in case that any error occurred during request processing",
      "fields": [
        {
          "type": "array",
          "description": "Collection of all gathered errors",
          "readOnly": true,
          "items": {
            "$ref": "ADGError"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "SearchDirectoryEntriesRequest",
      "fields": [
        {
          "type": "string",
          "description": "String value to filter the contacts. The value specified is\nsearched through the following fields: `firstName`, `lastName`, `extensionNumber`, `phoneNumber`, `email`,\n`jobTitle`, `department`, `customFieldValue`\n",
          "name": "searchString"
        },
        {
          "type": "array",
          "description": "The list of field to be searched for",
          "items": {
            "type": "string",
            "enum": [
              "firstName",
              "lastName",
              "extensionNumber",
              "phoneNumber",
              "email",
              "jobTitle",
              "department",
              "customFieldValue"
            ]
          },
          "name": "searchFields"
        },
        {
          "type": "boolean",
          "description": "If `true` then contacts of all accounts in federation are returned, if it is in federation, account section will be returned. If `false` then only contacts of the current account are returned, and account section is eliminated in this case",
          "name": "showFederated"
        },
        {
          "type": "boolean",
          "description": "Should show AdminOnly Contacts",
          "default": false,
          "name": "showAdminOnlyContacts"
        },
        {
          "type": "string",
          "description": "Type of directory contact to filter",
          "enum": [
            "User",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "ParkLocation",
            "IvrMenu",
            "Limited",
            "ApplicationExtension",
            "Site",
            "Bot",
            "Room",
            "DelegatedLinesGroup",
            "GroupCallPickup",
            "External"
          ],
          "example": "User",
          "name": "extensionType"
        },
        {
          "type": "string",
          "description": "Internal identifier of the business site to which extensions belong",
          "example": "872781797006",
          "name": "siteId"
        },
        {
          "type": "boolean",
          "default": false,
          "description": "Allows to control whether External (Hybrid) contacts should be returned in the response or not",
          "example": true,
          "name": "showExternalContacts"
        },
        {
          "type": "array",
          "description": "The list of Internal identifiers of an accounts",
          "items": {
            "type": "string"
          },
          "example": [
            "854874047006",
            "422456828004",
            "854874151006"
          ],
          "name": "accountIds"
        },
        {
          "type": "string",
          "description": "Department",
          "name": "department"
        },
        {
          "type": "array",
          "description": "The list of Internal identifiers of the business sites to which extensions belong",
          "items": {
            "type": "string"
          },
          "name": "siteIds"
        },
        {
          "type": "array",
          "description": "Extension current state.",
          "items": {
            "type": "string",
            "enum": [
              "Enabled",
              "Disabled",
              "NotActivated"
            ]
          },
          "name": "extensionStatuses"
        },
        {
          "type": "array",
          "description": "Types of extension to filter the contacts",
          "items": {
            "type": "string",
            "description": "Type of extension to filter the contacts",
            "enum": [
              "User",
              "Department",
              "Announcement",
              "Voicemail",
              "DigitalUser",
              "VirtualUser",
              "FaxUser",
              "PagingOnly",
              "SharedLinesGroup",
              "IvrMenu",
              "ApplicationExtension",
              "ParkLocation",
              "Limited",
              "Bot",
              "Site",
              "Room",
              "ProxyAdmin",
              "DelegatedLinesGroup",
              "FlexibleUser",
              "GroupCallPickup",
              "RoomConnector"
            ],
            "example": "User"
          },
          "name": "extensionTypes"
        },
        {
          "type": "array",
          "description": "Sorting settings",
          "items": {
            "$ref": "OrderBy"
          },
          "name": "orderBy"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "page"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "perPage"
        }
      ]
    },
    {
      "name": "OrderBy",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "default": 1,
          "description": "Sorting priority index, starting from '1'. Optional if only one element in `orderBy` array is specified",
          "example": 1,
          "name": "index"
        },
        {
          "type": "string",
          "description": "Field name by which to sort the contacts",
          "enum": [
            "firstName",
            "lastName",
            "extensionNumber",
            "phoneNumber",
            "email",
            "jobTitle",
            "department"
          ],
          "example": "department",
          "name": "fieldName"
        },
        {
          "type": "string",
          "default": "Asc",
          "description": "Sorting direction",
          "enum": [
            "Asc",
            "Desc"
          ],
          "example": "Asc",
          "name": "direction"
        }
      ]
    },
    {
      "name": "FederationResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "FederatedAccountResource"
          },
          "name": "accounts"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "name": "displayName"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Federation type",
          "enum": [
            "Regular",
            "AdminOnly"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "FederatedAccountResource",
      "fields": [
        {
          "type": "string",
          "name": "companyName",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "conflictCount",
          "required": false
        },
        {
          "type": "string",
          "name": "federatedName",
          "required": false
        },
        {
          "type": "string",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "linkCreationTime",
          "required": false
        },
        {
          "$ref": "PhoneNumberResource",
          "name": "mainNumber",
          "required": false
        }
      ]
    },
    {
      "name": "PagingGroupExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a paging group user extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a paging group user extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension number of a paging group user",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of a paging group user",
          "name": "name"
        }
      ]
    },
    {
      "name": "PagingOnlyGroupUsers",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a list of users allowed to page the Paging Only group\n",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of users allowed to page the Paging Only group",
          "items": {
            "$ref": "PagingGroupExtensionInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "EditPagingGroupRequest",
      "fields": [
        {
          "type": "array",
          "description": "List of users that will be allowed to page a group specified\n",
          "items": {
            "type": "string"
          },
          "name": "addedUserIds"
        },
        {
          "type": "array",
          "description": "List of users that will be disallowed to page a group specified\n",
          "items": {
            "type": "string"
          },
          "name": "removedUserIds"
        },
        {
          "type": "array",
          "description": "List of account devices that will be assigned to a paging group\nspecified\n",
          "items": {
            "type": "string"
          },
          "name": "addedDeviceIds"
        },
        {
          "type": "array",
          "description": "List of account devices that will be unassigned from a paging\ngroup specified\n",
          "items": {
            "type": "string"
          },
          "name": "removedDeviceIds"
        }
      ]
    },
    {
      "name": "PagingOnlyGroupDevices",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a list of devices assigned to the paging only group",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of paging devices assigned to this group",
          "items": {
            "$ref": "PagingDeviceInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "PagingDeviceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a paging device",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a paging device resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of a paging device",
          "name": "name"
        }
      ]
    },
    {
      "name": "RegionalSettings",
      "description": "Regional data (timezone, home country, language) of an extension/account.\nThe default is Company (Auto-Receptionist) settings\n",
      "fields": [
        {
          "$ref": "CountryInfoShortModel",
          "name": "homeCountry"
        },
        {
          "$ref": "TimezoneInfo",
          "name": "timezone"
        },
        {
          "$ref": "RegionalLanguageInfo",
          "name": "language"
        },
        {
          "$ref": "GreetingLanguageInfo",
          "name": "greetingLanguage"
        },
        {
          "$ref": "FormattingLocaleInfo",
          "name": "formattingLocale"
        },
        {
          "type": "string",
          "description": "Time format (12-hours or 24-hours).",
          "enum": [
            "12h",
            "24h"
          ],
          "default": "12h",
          "name": "timeFormat"
        }
      ]
    },
    {
      "name": "SiteInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a site resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension user first name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Custom name of a caller. Max number of characters is 15 (only\nalphabetical symbols, numbers and commas are supported)\n",
          "name": "callerIdName"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Site extension contact email",
          "name": "email"
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "$ref": "RegionalSettings",
          "name": "regionalSettings"
        },
        {
          "type": "string",
          "description": "Site access status for cross-site limitation",
          "enum": [
            "Limited",
            "Unlimited"
          ],
          "name": "siteAccess"
        },
        {
          "$ref": "OperatorInfo",
          "name": "operator"
        },
        {
          "type": "string",
          "description": "Site code value. Returned only if specified\n",
          "name": "code"
        }
      ]
    },
    {
      "name": "SitesList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a sites resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "SiteInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "CreateSiteRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension user first name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Custom name of a caller. Max number of characters is 15 (only\nalphabetical symbols, numbers and commas are supported)\n",
          "name": "callerIdName"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Extension user email",
          "name": "email"
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "$ref": "RegionalSettings",
          "name": "regionalSettings"
        },
        {
          "$ref": "SiteOperatorReference",
          "name": "operator"
        },
        {
          "type": "string",
          "description": "Site access status for cross-site limitation",
          "enum": [
            "Limited",
            "Unlimited"
          ],
          "name": "siteAccess"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Site id that is accessible for the current site"
          },
          "name": "accessibleSiteIds"
        },
        {
          "type": "string",
          "description": "Site code value",
          "name": "code"
        }
      ]
    },
    {
      "name": "OperatorInfo",
      "description": "Site Fax/SMS recipient (operator) reference. Multi-level IVR should\nbe enabled\n",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an operator",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an operator resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension number (pin)",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Operator extension user full name",
          "name": "name"
        }
      ]
    },
    {
      "name": "SiteOperatorReference",
      "description": "Site Fax/SMS recipient (operator) reference. Multi-level IVR should\nbe enabled\n",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an operator extension",
          "name": "id"
        }
      ]
    },
    {
      "name": "SiteUpdateRequest",
      "fields": [
        {
          "type": "string",
          "description": "Extension user first name",
          "name": "name",
          "required": true
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber",
          "required": false
        },
        {
          "type": "string",
          "description": "Custom name of a caller. Max number of characters is 15 (only\nalphabetical symbols, numbers and commas are supported)\n",
          "name": "callerIdName",
          "required": false
        },
        {
          "type": "string",
          "format": "email",
          "description": "Site extension contact email",
          "name": "email",
          "required": false
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress",
          "required": false
        },
        {
          "$ref": "RegionalSettings",
          "name": "regionalSettings",
          "required": false
        },
        {
          "$ref": "OperatorInfo",
          "name": "operator",
          "required": false
        },
        {
          "type": "string",
          "description": "Site access status for cross-site limitation",
          "enum": [
            "Limited",
            "Unlimited"
          ],
          "name": "siteAccess",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Site id that is accessible for the current site"
          },
          "name": "accessibleSiteIds",
          "required": false
        }
      ]
    },
    {
      "name": "SiteMembersBulkUpdate",
      "fields": [
        {
          "type": "array",
          "description": "List of removed extensions",
          "items": {
            "type": "string"
          },
          "name": "removedExtensionIds"
        },
        {
          "type": "array",
          "description": "List of added extensions",
          "items": {
            "type": "string"
          },
          "name": "addedExtensionIds"
        }
      ]
    },
    {
      "name": "SiteMembersList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a site members list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "SiteMemberInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "SiteMemberInfo",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "name": "type"
        },
        {
          "type": "string",
          "name": "name"
        }
      ]
    },
    {
      "name": "SiteIVRActionsExtensionInfo",
      "description": "Extension information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of an extension user",
          "name": "name"
        }
      ]
    },
    {
      "name": "SiteIvrActionsUpdate",
      "description": "Keys handling settings",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Star",
            "Hash",
            "NoInput",
            "0"
          ],
          "name": "input"
        },
        {
          "type": "string",
          "description": "Key handling action:\n- Repeat - repeat menu greeting, for Star and Hash only;\n- ReturnToRoot - return to root IVR menu, for Star and Hash only;\n- ReturnToPrevious - return to previous IVR menu, for Star and Hash only;\n- Connect - connect to specific extension, for NoInput and \"0\" (zero) only;\n- Disconnect - end call, for NoInput only.\n",
          "enum": [
            "Repeat",
            "ReturnToRoot",
            "ReturnToPrevious",
            "ReturnToTopLevelMenu",
            "Connect",
            "ConnectToOperator",
            "Disconnect",
            "DoNothing"
          ],
          "name": "action"
        },
        {
          "$ref": "SiteIVRActionsExtensionInfoUpdate",
          "name": "extension"
        }
      ]
    },
    {
      "name": "SiteIVRSettings",
      "fields": [
        {
          "$ref": "SiteIVRTopMenu",
          "name": "topMenu"
        },
        {
          "type": "array",
          "items": {
            "$ref": "SiteIvrActions"
          },
          "name": "actions"
        }
      ]
    },
    {
      "name": "SiteIVRActionsExtensionInfoUpdate",
      "description": "Extension information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        }
      ]
    },
    {
      "name": "SiteIvrActions",
      "description": "Keys handling settings",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Star",
            "Hash",
            "NoInput"
          ],
          "name": "input"
        },
        {
          "type": "string",
          "description": "Key handling action:\n- Repeat - repeat menu greeting, for Star and Hash only;\n- ReturnToRoot - return to root IVR menu, for Star and Hash only;\n- ReturnToPrevious - return to previous IVR menu, for Star and Hash only;\n- Connect - connect to specific extension, for NoInput only;\n- Disconnect - end call, for NoInput only.\n",
          "enum": [
            "Repeat",
            "ReturnToRoot",
            "ReturnToPrevious",
            "ReturnToTopLevelMenu",
            "Connect",
            "Disconnect",
            "DoNothing"
          ],
          "name": "action"
        },
        {
          "$ref": "SiteIVRActionsExtensionInfo",
          "name": "extension"
        }
      ]
    },
    {
      "name": "SiteIVRTopMenuUpdate",
      "description": "Top IVR Menu extension",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an IVR menu extension\n",
          "name": "id"
        }
      ]
    },
    {
      "name": "SiteIVRTopMenu",
      "description": "Top IVR Menu extension. Mandatory for MultiLevel mode\n",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an IVR menu extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an IVR menu extension resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Full name of an IVR menu extension user",
          "name": "name"
        }
      ]
    },
    {
      "name": "SiteIVRSettingsUpdate",
      "fields": [
        {
          "$ref": "SiteIVRTopMenuUpdate",
          "name": "topMenu"
        },
        {
          "type": "array",
          "items": {
            "$ref": "SiteIvrActionsUpdate"
          },
          "name": "actions"
        }
      ]
    },
    {
      "name": "GetCallRecordingResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call recording",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a call recording binary content. Has to be retrieved with proper authorization\n(access token must be passed via `Authorization` header or query parameter)\n",
          "name": "contentUri",
          "required": true
        },
        {
          "type": "string",
          "description": "Call recording file MIME format. Supported format is `audio/wav` and `audio/mpeg`",
          "example": "audio/wav",
          "name": "contentType",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Recorded call duration",
          "name": "duration",
          "required": true
        }
      ]
    },
    {
      "name": "MessageStoreConfiguration",
      "fields": [
        {
          "maximum": 90,
          "minimum": 7,
          "type": "integer",
          "format": "int32",
          "description": "Retention policy setting, specifying how long to keep messages;\nthe supported value range is 7-90 days. Currently, the retention period is supported for `Fax` and `Voicemail` messages only.\nSMS messages are stored with no time limits\n",
          "name": "retentionPeriod"
        }
      ]
    },
    {
      "name": "AnsweringRuleQueryRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        }
      ]
    },
    {
      "name": "CustomCompanyGreetingLanguageInfo",
      "description": "Information on a greeting language. Supported for types 'StopRecording', 'StartRecording', 'AutomaticRecording'",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a greeting language",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a greeting language",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of a greeting language",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Locale code of a greeting language",
          "name": "localeCode"
        }
      ]
    },
    {
      "name": "CustomCompanyGreetingInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an extension custom greeting",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of a company greeting",
          "enum": [
            "Company",
            "StartRecording",
            "StopRecording",
            "AutomaticRecording",
            "TemplateGreeting"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Content media type",
          "enum": [
            "audio/mpeg",
            "audio/wav"
          ],
          "name": "contentType"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a greeting content (audio file)",
          "name": "contentUri"
        },
        {
          "$ref": "CustomGreetingAnsweringRuleInfo",
          "name": "answeringRule"
        },
        {
          "$ref": "CustomCompanyGreetingLanguageInfo",
          "name": "language"
        }
      ]
    },
    {
      "name": "CustomGreetingAnsweringRuleInfo",
      "description": "Information on an answering rule that the greeting is applied to",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an answering rule",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        }
      ]
    },
    {
      "name": "RoleResource",
      "fields": [
        {
          "type": "string",
          "description": "Link to a role resource",
          "format": "uri",
          "readOnly": true,
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a role",
          "name": "id"
        },
        {
          "maxLength": 128,
          "minLength": 0,
          "pattern": "^((?!(<|>|\\/|\\\")).)*$",
          "type": "string",
          "example": "Super Admin",
          "description": "Dispayed name of a role",
          "name": "displayName"
        },
        {
          "maxLength": 2000,
          "minLength": 0,
          "pattern": "^((?!(<|>|\\/|\\\")).)*$",
          "type": "string",
          "description": "Role description",
          "example": "Primary company administrator role",
          "name": "description"
        },
        {
          "type": "boolean",
          "description": "Site compatibility of a user role",
          "name": "siteCompatible"
        },
        {
          "type": "boolean",
          "default": false,
          "description": "Specifies if a user role is custom",
          "name": "custom"
        },
        {
          "type": "string",
          "description": "Specifies resource for permission",
          "enum": [
            "Account",
            "AllExtensions",
            "Federation",
            "Group",
            "NonUserExtensions",
            "RoleBased",
            "Self",
            "UserExtensions"
          ],
          "name": "scope"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "hidden"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "lastUpdated"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PermissionIdResource"
          },
          "name": "permissions"
        }
      ]
    },
    {
      "name": "PermissionsCapabilities",
      "description": "Advanced permissions capabilities. Returned if `advancedPermissions` query parameter is set to `true`.",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies whether the user is enabled with the listed permission or not",
          "name": "enabled"
        },
        {
          "type": "boolean",
          "description": "Specifies if the user can manage the listed permission and is allowed to enable it on other users",
          "name": "manageEnabled"
        },
        {
          "type": "boolean",
          "description": "Specifies if the users who were enabled with the listed permission can grant it further to other users",
          "name": "grantEnabled"
        }
      ]
    },
    {
      "name": "RolesCollectionResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "RoleResource"
          },
          "name": "records"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "PermissionIdResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Site compatibility flag set for permission",
          "enum": [
            "Compatible",
            "Incompatible",
            "Independent"
          ],
          "name": "siteCompatible"
        },
        {
          "type": "boolean",
          "description": "Specifies if the permission is editable on UI (if set to `true`) or not (if set to `false`)",
          "name": "readOnly"
        },
        {
          "type": "boolean",
          "description": "Specifies if the permission can be assigned by the account administrator",
          "name": "assignable"
        },
        {
          "$ref": "PermissionsCapabilities",
          "name": "permissionsCapabilities"
        }
      ]
    },
    {
      "name": "DefaultUserRole",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a default role resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a default role",
          "name": "id"
        },
        {
          "maxLength": 128,
          "minLength": 0,
          "pattern": "^((?!(<|>|\\/|\\\")).)*$",
          "type": "string",
          "description": "Custom name of a default role",
          "example": "My Custom User Role",
          "name": "displayName"
        },
        {
          "type": "boolean",
          "description": "Site compatibility of a user role",
          "name": "siteCompatible"
        }
      ]
    },
    {
      "name": "DefaultUserRoleRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user role to be set as default",
          "name": "id"
        }
      ]
    },
    {
      "name": "BulkRoleAssignResource",
      "fields": [
        {
          "type": "boolean",
          "example": true,
          "name": "siteRestricted"
        },
        {
          "type": "boolean",
          "name": "siteCompatible"
        },
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "addedExtensionIds"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "removedExtensionIds"
        }
      ]
    },
    {
      "name": "PermissionInfoAdmin",
      "description": "Admin permission",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a permission is enabled or not",
          "name": "enabled"
        }
      ]
    },
    {
      "name": "ProfileImageInfoURI",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        }
      ]
    },
    {
      "name": "ExtensionPermissions",
      "description": "Extension permissions, corresponding to the Service Web permissions\n'Admin' and 'InternationalCalling'\n",
      "fields": [
        {
          "$ref": "PermissionInfoAdmin",
          "name": "admin"
        },
        {
          "$ref": "PermissionInfoInt",
          "name": "internationalCalling"
        }
      ]
    },
    {
      "name": "ContactInfoCreationRequest",
      "description": "Contact Information",
      "fields": [
        {
          "type": "string",
          "description": "For User extension type only. Extension user first name\n",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "For User extension type only. Extension user last name\n",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Extension user company name",
          "name": "company"
        },
        {
          "type": "string",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of extension user",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Extension user contact phone number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\nformat\n",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "Extension user mobile (**non** Toll Free) phone number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(with '+' sign) format\n",
          "name": "mobilePhone"
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "type": "boolean",
          "description": "If `true` then contact email is enabled as login name for\nthis user. Please note that email should be unique in this case.\nThe default value is `false`\n",
          "name": "emailAsLoginName"
        },
        {
          "$ref": "PronouncedNameInfo",
          "name": "pronouncedName"
        },
        {
          "type": "string",
          "description": "Extension user department, if any",
          "name": "department"
        }
      ]
    },
    {
      "name": "CallQueueExtensionInfo",
      "description": "For Call Queue extension type only. Please note that legacy\n'Department' extension type corresponds to 'Call Queue' extensions\nin modern RingCentral product terminology\n",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "description": "Target percentage of calls that must be answered by agents\nwithin the service level time threshold\n",
          "name": "slaGoal"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Period of time in seconds that is considered to be an acceptable\nservice level\n",
          "name": "slaThresholdSeconds"
        },
        {
          "type": "boolean",
          "description": "If `true` abandoned calls (hanged up prior to being served)\nare included into service level calculation\n",
          "name": "includeAbandonedCalls"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Period of time in seconds specifying abandoned calls duration\n- calls that are shorter will not be included into the calculation of\nservice level.; zero value means that abandoned calls of any duration\nwill be included into calculation\n",
          "name": "abandonedThresholdSeconds"
        }
      ]
    },
    {
      "name": "ProfileImageInfo",
      "description": "Information on profile image",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a profile image. If an image is not uploaded for an\nextension, only `uri` is returned\n",
          "name": "uri",
          "required": true
        },
        {
          "type": "string",
          "description": "Identifier of an image",
          "name": "etag",
          "required": false
        },
        {
          "type": "string",
          "description": "Date/time when an image was last updated, in ISO 8601 format,\nfor example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "lastModified",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of image",
          "name": "contentType",
          "required": false
        },
        {
          "type": "array",
          "description": "List of URIs to profile images in different dimensions\n",
          "items": {
            "$ref": "ProfileImageInfoURI"
          },
          "name": "scales",
          "required": false
        }
      ]
    },
    {
      "name": "PermissionInfoInt",
      "description": "International Calling permission",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a permission is enabled or not",
          "name": "enabled"
        }
      ]
    },
    {
      "name": "ExtensionCreationResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "$ref": "ContactInfo",
          "name": "contact"
        },
        {
          "$ref": "CostCenterInfo",
          "name": "costCenter"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldInfo"
          },
          "name": "customFields"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Extension name. For user extension types the value is a combination\nof the specified first name and last name\n",
          "name": "name"
        },
        {
          "type": "string",
          "description": "For Partner Applications Internal identifier of an extension\ncreated by partner. The RingCentral supports the mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using `pid=XXX` clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n",
          "name": "partnerId"
        },
        {
          "$ref": "ExtensionPermissions",
          "name": "permissions"
        },
        {
          "$ref": "ProfileImageInfo",
          "name": "profileImage"
        },
        {
          "type": "array",
          "description": "List of non-RC internal identifiers assigned to an extension\n",
          "items": {
            "$ref": "ReferenceInfo"
          },
          "name": "references"
        },
        {
          "$ref": "RegionalSettings",
          "name": "regionalSettings"
        },
        {
          "type": "array",
          "description": "Extension service features returned in response only when the\nlogged-in user requests his/her own extension info, see also Extension\nService Features\n",
          "items": {
            "$ref": "ExtensionServiceFeatureInfo"
          },
          "name": "serviceFeatures"
        },
        {
          "type": "string",
          "description": "Initial configuration wizard state",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed"
          ],
          "default": "NotStarted",
          "name": "setupWizardState"
        },
        {
          "$ref": "ProvisioningSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Extension status",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "$ref": "ExtensionStatusInfo",
          "name": "statusInfo"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type\ncorresponds to 'Call Queue' extensions in modern RingCentral product terminology\n",
          "enum": [
            "User",
            "VirtualUser",
            "DigitalUser",
            "FlexibleUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "ParkLocation",
            "Limited"
          ],
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "Hides an extension from showing in company directory. Supported\nfor extensions of 'User' type only\n",
          "name": "hidden"
        },
        {
          "$ref": "AssignedCountryInfo",
          "name": "assignedCountry"
        }
      ]
    },
    {
      "name": "ExtensionServiceFeatureInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Feature status; shows feature availability for an extension",
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Feature name",
          "enum": [
            "AccountFederation",
            "Archiver",
            "AutomaticCallRecordingMute",
            "AutomaticInboundCallRecording",
            "AutomaticOutboundCallRecording",
            "BlockedMessageForwarding",
            "Calendar",
            "CallerIdControl",
            "CallForwarding",
            "CallPark",
            "CallParkLocations",
            "CallSupervision",
            "CallSwitch",
            "CallQualitySurvey",
            "Conferencing",
            "ConferencingNumber",
            "ConfigureDelegates",
            "DeveloperPortal",
            "DND",
            "DynamicConference",
            "EmergencyAddressAutoUpdate",
            "EmergencyCalling",
            "EncryptionAtRest",
            "ExternalDirectoryIntegration",
            "Fax",
            "FaxReceiving",
            "FreeSoftPhoneLines",
            "HDVoice",
            "HipaaCompliance",
            "Intercom",
            "InternationalCalling",
            "InternationalSMS",
            "LinkedSoftphoneLines",
            "MMS",
            "MobileVoipEmergencyCalling",
            "OnDemandCallRecording",
            "Pager",
            "PagerReceiving",
            "Paging",
            "PasswordAuth",
            "PromoMessage",
            "Reports",
            "Presence",
            "RCTeams",
            "RingOut",
            "SalesForce",
            "SharedLines",
            "SingleExtensionUI",
            "SiteCodes",
            "SMS",
            "SMSReceiving",
            "SoftPhoneUpdate",
            "TelephonySessions",
            "UserManagement",
            "VideoConferencing",
            "VoipCalling",
            "VoipCallingOnMobile",
            "Voicemail",
            "VoicemailToText",
            "WebPhone"
          ],
          "name": "featureName"
        },
        {
          "type": "string",
          "description": "Reason for limitation of a particular service feature. Returned\nonly if the enabled parameter value is `false`, see Service Feature\nLimitations and Reasons. When retrieving service features for an extension,\nthe reasons for limitations, if any, are returned in response\n",
          "name": "reason"
        }
      ]
    },
    {
      "name": "AssignedCountryInfo",
      "description": "Information on a country assigned to an extension user. Returned for the User extension type only",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an assigned country",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an assigned country resource",
          "name": "uri"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Official name of a country",
          "name": "name"
        }
      ]
    },
    {
      "name": "ExtensionCreationRequest",
      "fields": [
        {
          "$ref": "ContactInfoCreationRequest",
          "name": "contact"
        },
        {
          "type": "string",
          "description": "Extension short number",
          "name": "extensionNumber"
        },
        {
          "$ref": "CostCenterInfo",
          "name": "costCenter"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldInfo"
          },
          "name": "customFields"
        },
        {
          "type": "string",
          "description": "Password for extension. If not specified, the password is auto-generated",
          "name": "password"
        },
        {
          "type": "array",
          "description": "List of non-RC internal identifiers assigned to an extension",
          "items": {
            "$ref": "ReferenceInfo"
          },
          "name": "references"
        },
        {
          "$ref": "RegionalSettings",
          "name": "regionalSettings"
        },
        {
          "type": "string",
          "description": "Additional extension identifier, created by partner application\nand applied on client side\n",
          "name": "partnerId"
        },
        {
          "type": "string",
          "description": "IVR PIN",
          "name": "ivrPin"
        },
        {
          "type": "string",
          "description": "Initial configuration wizard state",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed"
          ],
          "default": "NotStarted",
          "name": "setupWizardState"
        },
        {
          "$ref": "SiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Extension status",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "$ref": "ExtensionStatusInfo",
          "name": "statusInfo"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type\ncorresponds to 'Call Queue' extensions in modern RingCentral product\nterminology\n",
          "enum": [
            "User",
            "VirtualUser",
            "DigitalUser",
            "FlexibleUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "ParkLocation",
            "Limited"
          ],
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "Hides extension from showing in company directory. Supported\nfor extensions of 'User' type only. For unassigned extensions the value\nis set to `true` by default. For assigned extensions the value is set\nto `false` by default\n",
          "name": "hidden"
        },
        {
          "type": "string",
          "description": "Extension name. For user extension types the value is a combination\nof the specified first name and last name\n",
          "name": "name"
        }
      ]
    },
    {
      "name": "GetExtensionListResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an extension list resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of extensions with extension information",
          "items": {
            "$ref": "GetExtensionListInfoResponse"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": false
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": false
        }
      ]
    },
    {
      "name": "ExtensionListEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Type of extension info change",
          "enum": [
            "Create",
            "Update",
            "Delete"
          ],
          "name": "eventType"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension\n",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "ExtensionListEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification\n",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Date/time of sending a notification in\n[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "ExtensionListEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "ContactInfo",
      "description": "Detailed contact information",
      "fields": [
        {
          "type": "string",
          "description": "User's first name (for extensions of `User` type only)\n",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "For User extension type only. User's last name (for extensions of `User` type only)\n",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Extension name (for extensions of `User` type - concatenation of first and last name)\n",
          "name": "name"
        },
        {
          "type": "string",
          "description": "User's company name",
          "name": "company"
        },
        {
          "type": "string",
          "description": "User's job title",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "format": "email",
          "description": "User's contact email",
          "name": "email"
        },
        {
          "type": "string",
          "description": "User's contact phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(with '+' sign) format\n",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "User's mobile (**non** Toll Free) phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(with '+' sign) format\n",
          "name": "mobilePhone"
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "type": "boolean",
          "description": "Indicates that the contact email is enabled as a login name for this\nuser. Please note that the email must be unique in this case.\n",
          "default": false,
          "name": "emailAsLoginName"
        },
        {
          "$ref": "PronouncedNameInfo",
          "name": "pronouncedName"
        },
        {
          "type": "string",
          "description": "User's department name\n",
          "name": "department"
        }
      ]
    },
    {
      "name": "GetExtensionListInfoResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "$ref": "ContactInfo",
          "name": "contact"
        },
        {
          "type": "string",
          "description": "Extension short number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Extension name. For user extension types the value is a combination\nof the specified first name and last name\n",
          "name": "name"
        },
        {
          "$ref": "ExtensionPermissions",
          "name": "permissions"
        },
        {
          "$ref": "ProfileImageInfo",
          "name": "profileImage"
        },
        {
          "type": "string",
          "description": "Extension status",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy `Department` extension type\ncorresponds to 'Call Queue' extensions in modern RingCentral product\nterminology\n",
          "enum": [
            "User",
            "FaxUser",
            "FlexibleUser",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "Bot",
            "Room",
            "Limited",
            "Site",
            "ProxyAdmin",
            "DelegatedLinesGroup",
            "GroupCallPickup"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Extension subtype, if applicable. For any unsupported subtypes the\n`Unknown` value will be returned\n",
          "enum": [
            "VideoPro",
            "VideoProPlus",
            "DigitalSignage",
            "Unknown",
            "Emergency"
          ],
          "name": "subType"
        },
        {
          "$ref": "CallQueueExtensionInfo",
          "name": "callQueueInfo"
        },
        {
          "type": "boolean",
          "description": "Hides extension from showing in company directory.\nSupported for extensions of User type only\n",
          "name": "hidden"
        },
        {
          "$ref": "ProvisioningSiteInfo",
          "name": "site"
        },
        {
          "$ref": "AssignedCountryInfo",
          "name": "assignedCountry"
        },
        {
          "$ref": "CostCenterInfo",
          "name": "costCenter"
        },
        {
          "type": "string",
          "description": "Extension creation date/time, in ISO 8601 format\n",
          "format": "date-time",
          "example": "2024-06-06T07:01:14.123Z",
          "name": "creationTime"
        }
      ]
    },
    {
      "name": "GetExtensionAccountInfo",
      "description": "Account information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an account",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an account resource",
          "name": "uri"
        }
      ]
    },
    {
      "name": "ExtensionInfoEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Type of extension info change",
          "enum": [
            "Update",
            "Delete"
          ],
          "name": "eventType"
        },
        {
          "type": "array",
          "description": "Returned for 'Update' event type only",
          "items": {
            "type": "string",
            "enum": [
              "AccountSettings",
              "AccountStatus",
              "AnsweringRules",
              "CompanyNumbers",
              "DialingPlan",
              "ExtensionInfo",
              "Features",
              "Limits",
              "Permissions",
              "ProfileImage",
              "VideoConfiguration"
            ]
          },
          "name": "hints"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension\n",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "ExtensionUpdateRequest",
      "fields": [
        {
          "type": "string",
          "description": "Extension status",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated"
          ],
          "name": "status"
        },
        {
          "$ref": "ExtensionStatusInfo",
          "name": "statusInfo"
        },
        {
          "type": "string",
          "description": "Extension number available",
          "name": "extensionNumber"
        },
        {
          "$ref": "ContactInfoUpdateRequest",
          "name": "contact"
        },
        {
          "$ref": "ExtensionRegionalSettingRequest",
          "name": "regionalSettings"
        },
        {
          "type": "string",
          "description": "Initial configuration wizard state",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed"
          ],
          "default": "NotStarted",
          "name": "setupWizardState"
        },
        {
          "type": "string",
          "description": "Additional extension identifier, created by partner application\nand applied on client side\n",
          "name": "partnerId"
        },
        {
          "type": "string",
          "description": "IVR PIN",
          "name": "ivrPin"
        },
        {
          "type": "string",
          "description": "Password for extension",
          "name": "password"
        },
        {
          "$ref": "CallQueueInfoRequest",
          "name": "callQueueInfo"
        },
        {
          "$ref": "UserTransitionInfo",
          "name": "transition"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldInfo"
          },
          "name": "customFields"
        },
        {
          "$ref": "SiteReference",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension\ntype corresponds to 'Call Queue' extensions in modern RingCentral\nproduct terminology\n",
          "enum": [
            "User",
            "FaxUser",
            "FlexibleUser",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "DelegatedLinesGroup",
            "GroupCallPickup"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Extension subtype, if applicable. For any unsupported subtypes\nthe 'Unknown' value will be returned\n",
          "enum": [
            "VideoPro",
            "VideoProPlus",
            "DigitalSignageOnlyRooms",
            "Unknown",
            "Emergency"
          ],
          "name": "subType"
        },
        {
          "type": "array",
          "description": "List of non-RC internal identifiers assigned to an extension\n",
          "items": {
            "$ref": "ReferenceInfo"
          },
          "name": "references"
        }
      ]
    },
    {
      "name": "GetExtensionInfoResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "$ref": "GetExtensionAccountInfo",
          "name": "account"
        },
        {
          "$ref": "ContactInfo",
          "name": "contact"
        },
        {
          "$ref": "CostCenterInfo",
          "name": "costCenter"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldInfo"
          },
          "name": "customFields"
        },
        {
          "type": "array",
          "description": "Information on department extension(s), to which the requested\nextension belongs. Returned only for user extensions, members of\ndepartment, requested by single extensionId. Please note that\nlegacy 'Department' extension type corresponds to 'Call Queue'\nextensions in modern RingCentral product terminology\n",
          "items": {
            "$ref": "DepartmentInfo"
          },
          "name": "departments"
        },
        {
          "type": "string",
          "description": "Extension short number",
          "name": "extensionNumber"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "extensionNumbers"
        },
        {
          "type": "string",
          "description": "Extension name. For user extension types the value is a combination\nof the specified first name and last name\n",
          "name": "name"
        },
        {
          "type": "string",
          "description": "For Partner Applications Internal identifier of an extension\ncreated by partner. The RingCentral supports mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using `pid=XXX` clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n",
          "name": "partnerId"
        },
        {
          "$ref": "ExtensionPermissions",
          "name": "permissions"
        },
        {
          "$ref": "ProfileImageInfo",
          "name": "profileImage"
        },
        {
          "type": "array",
          "description": "List of non-RC internal identifiers assigned to an extension\n",
          "items": {
            "$ref": "ReferenceInfo"
          },
          "name": "references"
        },
        {
          "type": "array",
          "items": {
            "$ref": "Roles"
          },
          "name": "roles"
        },
        {
          "$ref": "RegionalSettings",
          "name": "regionalSettings"
        },
        {
          "type": "array",
          "description": "Extension service features is returned in response only when the\nlogged-in user requests their own extension info, see also Extension\nService Features\n",
          "items": {
            "$ref": "ExtensionServiceFeatureInfo"
          },
          "name": "serviceFeatures"
        },
        {
          "type": "string",
          "description": "Initial configuration wizard state",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed"
          ],
          "default": "NotStarted",
          "name": "setupWizardState"
        },
        {
          "type": "string",
          "description": "Extension status",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "$ref": "ExtensionStatusInfo",
          "name": "statusInfo"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type\ncorresponds to 'Call Queue' extensions in modern RingCentral product\nterminology\n",
          "enum": [
            "User",
            "FaxUser",
            "FlexibleUser",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "Bot",
            "Room",
            "RoomConnector",
            "Limited",
            "Site",
            "ProxyAdmin",
            "DelegatedLinesGroup",
            "GroupCallPickup"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Extension subtype, if applicable. For any unsupported subtypes the\n`Unknown` value will be returned\n",
          "enum": [
            "VideoPro",
            "VideoProPlus",
            "DigitalSignage",
            "Unknown",
            "Emergency"
          ],
          "name": "subType"
        },
        {
          "$ref": "CallQueueExtensionInfo",
          "name": "callQueueInfo"
        },
        {
          "type": "boolean",
          "description": "Hides extension from showing in company directory. Supported for\nextensions of User type only\n",
          "name": "hidden"
        },
        {
          "$ref": "ProvisioningSiteInfo",
          "name": "site"
        },
        {
          "$ref": "AssignedCountryInfo",
          "name": "assignedCountry"
        },
        {
          "type": "string",
          "description": "Extension creation date/time, in ISO 8601 format\n",
          "format": "date-time",
          "example": "2024-06-06T07:01:14.123Z",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Site access status for cross-site limitation",
          "enum": [
            "Limited",
            "Unlimited"
          ],
          "name": "siteAccess"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Alert timer or pickup setting. Delay time in seconds before call queue group members are notified when calls are queued\n",
          "enum": [
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            240,
            300,
            360,
            420,
            480,
            540,
            600
          ],
          "name": "alertTimer"
        }
      ]
    },
    {
      "name": "ExtensionInfoEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Date/time of sending a notification in\n[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "ExtensionInfoEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "DepartmentInfo",
      "description": "Please note that the `Department` extension type corresponds to\n'Call Queue' extensions in modern RingCentral product terminology\n",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Internal identifier of a department extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Short number of a department extension",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "Roles",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a role",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a role",
          "name": "id"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "autoAssigned"
        },
        {
          "type": "string",
          "name": "displayName"
        },
        {
          "type": "boolean",
          "name": "siteCompatible"
        },
        {
          "type": "boolean",
          "name": "siteRestricted"
        }
      ]
    },
    {
      "name": "GetUserBusinessHoursResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a business-hours resource",
          "name": "uri"
        },
        {
          "$ref": "ScheduleInfoUserBusinessHours",
          "name": "schedule"
        }
      ]
    },
    {
      "name": "UserBusinessHoursScheduleInfo",
      "description": "Schedule when an answering rule is applied",
      "fields": [
        {
          "$ref": "WeeklyScheduleInfo",
          "name": "weeklyRanges"
        }
      ]
    },
    {
      "name": "UserBusinessHoursUpdateRequest",
      "fields": [
        {
          "$ref": "UserBusinessHoursScheduleInfo",
          "name": "schedule",
          "required": true
        }
      ]
    },
    {
      "name": "ScheduleInfoUserBusinessHours",
      "description": "Schedule when an answering rule is applied",
      "fields": [
        {
          "$ref": "WeeklyScheduleInfo",
          "name": "weeklyRanges"
        }
      ]
    },
    {
      "name": "UserBusinessHoursUpdateResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a business-hours resource",
          "name": "uri"
        },
        {
          "$ref": "UserBusinessHoursScheduleInfo",
          "name": "schedule"
        }
      ]
    },
    {
      "name": "UserVideoConfiguration",
      "fields": [
        {
          "type": "string",
          "description": "Video provider of the user",
          "enum": [
            "RCMeetings",
            "RCVideo",
            "None"
          ],
          "name": "provider"
        },
        {
          "type": "string",
          "description": "Specifies if the user is 'paid' (has meeting license) or 'free' (w/o meeting license)\n",
          "enum": [
            "Paid",
            "Free"
          ],
          "name": "userLicenseType"
        }
      ]
    },
    {
      "name": "FavoriteCollection",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "FavoriteContactResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ExtensionFavoritesEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "format": "date-time",
          "type": "string",
          "description": "Date/time of sending a notification in\n[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "ExtensionFavoritesEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "ExtensionFavoritesEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "FavoriteContactList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "FavoriteContactResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "FavoriteContactResource",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "name": "extensionId"
        },
        {
          "type": "string",
          "name": "accountId"
        },
        {
          "type": "string",
          "name": "contactId"
        }
      ]
    },
    {
      "name": "GetExtensionDevicesResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a list of extension devices",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of extension devices",
          "items": {
            "$ref": "DeviceResource"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "ExtensionGrantListEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "ExtensionInfoGrants",
      "description": "Extension information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension short number (usually 3 or 4 digits)",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of extension",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department'\nextension type corresponds to 'Call Queue' extensions in modern RingCentral\nproduct terminology\n",
          "enum": [
            "User",
            "Fax User",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "DelegatedLinesGroup"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "ExtensionGrantListEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Date/time of sending a notification in\n[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "ExtensionGrantListEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "GrantInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a grant",
          "name": "uri"
        },
        {
          "$ref": "ExtensionInfoGrants",
          "name": "extension"
        },
        {
          "type": "boolean",
          "description": "Specifies if picking up of other extensions' calls is allowed\nfor the extension. If 'Presence' feature is disabled for the given extension,\nthe flag is not returned\n",
          "name": "callPickup"
        },
        {
          "type": "boolean",
          "description": "Specifies if monitoring of other extensions' calls is allowed\nfor the extension. If 'CallMonitoring' feature is disabled for the given\nextension, the flag is not returned\n",
          "name": "callMonitoring"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension is able to make or\nreceive calls on behalf of the user referenced in extension object\n",
          "name": "callOnBehalfOf"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension can delegate a call\nto the user referenced in extension object\n",
          "name": "callDelegation"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension is allowed to call\nPaging Only group referenced to in extension object\n",
          "name": "groupPaging"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension is assigned as a Full-Access\nmanager in the call queue referenced in extension object\n",
          "name": "callQueueSetup"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension is assigned as a Members-Only\nmanager in the call queue referenced in extension object\n",
          "name": "callQueueMembersSetup"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension is assigned as a Messages Manager\nin the queue referenced in extension object\n",
          "name": "callQueueMessages"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension is granted *Forward All Calls (FAC)* permission\n",
          "name": "callQueueFacSetup"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the user referenced in extension object is sharing voicemails\nwith the current extension\n",
          "name": "sharedVoicemails"
        }
      ]
    },
    {
      "name": "GetExtensionGrantListResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the list of extension grants",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of extension grants with details",
          "items": {
            "$ref": "GrantInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "ConferencePhoneNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Dial-in phone number to connect to a conference",
          "name": "phoneNumber"
        },
        {
          "type": "boolean",
          "description": "The value should be `true` if the number is default for the conference. Default\nconference number is a domestic number that can be set by user (otherwise\nit is set by the system). Only one default number per country is allowed\n",
          "name": "default"
        }
      ]
    },
    {
      "name": "PhoneNumberInfoConferencing",
      "fields": [
        {
          "$ref": "CountryInfoShortModel",
          "name": "country"
        },
        {
          "type": "boolean",
          "description": "The value should be `true` if the number is default for the conference. Default\nconference number is a domestic number that can be set by user (otherwise\nit is set by the system). Only one default number per country is allowed\n",
          "name": "default"
        },
        {
          "type": "boolean",
          "description": "The value should be `true` if any greeting message is played on this number\n",
          "name": "hasGreeting"
        },
        {
          "type": "string",
          "description": "Location (city, region, state) of a conference phone number\n",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Dial-in phone number to connect to a conference",
          "name": "phoneNumber"
        },
        {
          "type": "boolean",
          "description": "Indicates if the number is 'premium' (account phone number\nwith the `ConferencingNumber` usageType)\n",
          "name": "premium"
        }
      ]
    },
    {
      "name": "GetConferencingInfoResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a conferencing",
          "name": "uri"
        },
        {
          "type": "boolean",
          "description": "Determines if host user allows conference participants to join\nbefore the host\n",
          "name": "allowJoinBeforeHost"
        },
        {
          "type": "string",
          "description": "Access code for a host user",
          "name": "hostCode"
        },
        {
          "type": "string",
          "description": "Internal parameter specifying a conferencing engine\n",
          "name": "mode"
        },
        {
          "type": "string",
          "description": "Access code for any participant",
          "name": "participantCode"
        },
        {
          "type": "string",
          "description": "Primary conference phone number for user's home country returned\nin [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format\n",
          "name": "phoneNumber"
        },
        {
          "description": "Link to a branded support page",
          "type": "string",
          "example": "http://success.ringcentral.com",
          "name": "supportUri"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Short URL leading to the service web page Tap to Join for audio\nconference bridge\n",
          "name": "tapToJoinUri"
        },
        {
          "type": "array",
          "description": "List of multiple dial-in phone numbers to connect to audio\nconference service, relevant for the user's brand. Each number is given with\nthe country and location information, in order to let the user choose\nless expensive way to connect to a conference. The first number in\nthe list is a primary conference number, that is default and domestic\n",
          "items": {
            "$ref": "PhoneNumberInfoConferencing"
          },
          "name": "phoneNumbers"
        }
      ]
    },
    {
      "name": "UpdateConferencingInfoRequest",
      "fields": [
        {
          "type": "array",
          "description": "Multiple dial-in phone numbers to connect to audio conference\nservice, relevant for user's brand. Each number is given with the country\nand location information, in order to let the user choose the less expensive\nway to connect to a conference. The first number in the list is the primary\nconference number, that is default and domestic\n",
          "items": {
            "$ref": "ConferencePhoneNumberInfo"
          },
          "name": "phoneNumbers"
        },
        {
          "type": "boolean",
          "description": "Determines if host user allows conference participants to join before the host",
          "name": "allowJoinBeforeHost"
        }
      ]
    },
    {
      "name": "ExtensionCallQueuePresenceList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "ExtensionCallQueuePresence"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CallQueueId",
      "description": "Call queue information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call queue",
          "name": "id"
        }
      ]
    },
    {
      "name": "PresenceCallQueueInfo",
      "description": "Call queue information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call queue",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a call queue",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension number of a call queue",
          "name": "extensionNumber"
        },
        {
          "type": "boolean",
          "description": "Flag allow members to change their queue status",
          "name": "editableMemberStatus"
        }
      ]
    },
    {
      "name": "ExtensionCallQueueUpdatePresenceList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "ExtensionCallQueueUpdatePresence"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ExtensionCallQueuePresence",
      "fields": [
        {
          "$ref": "PresenceCallQueueInfo",
          "name": "callQueue"
        },
        {
          "type": "boolean",
          "description": "Call queue agent availability for calls of this queue",
          "name": "acceptCalls"
        }
      ]
    },
    {
      "name": "ExtensionCallQueueUpdatePresence",
      "fields": [
        {
          "$ref": "CallQueueId",
          "name": "callQueue"
        },
        {
          "type": "boolean",
          "description": "Call queue agent availability for calls of this queue",
          "name": "acceptCalls"
        }
      ]
    },
    {
      "name": "ConversationInfo",
      "description": "SMS and Pager only. Information about a conversation the message belongs to",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a conversation",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Deprecated. Link to a conversation resource",
          "name": "uri"
        }
      ]
    },
    {
      "name": "MessageStoreCallerInfoResponseFrom",
      "description": "Sender information",
      "fields": [
        {
          "type": "string",
          "description": "Extension short number (usually 3 or 4 digits). This property\nis filled when parties communicate by means of short internal numbers,\nfor example when calling to other extension or sending/receiving Company\nPager message\n",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined\nfrom phoneNumber. This property is filled only when phoneNumber is not\nempty and server can calculate location information from it (for example,\nthis information is unavailable for US toll-free numbers)\n",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a party. If the phone does not\nbelong to the known extension, only the location is returned, the name\nis not determined then\n",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Phone number of a party. Usually it is a plain number including\ncountry and area code like 18661234567. But sometimes it could be returned\nfrom database with some formatting applied, for example (866)123-4567.\nThis property is filled in all cases where parties communicate by means\nof global phone numbers, for example when calling to direct numbers or\nsending/receiving SMS\n",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "GetMessageSyncResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the message sync resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of message records with synchronization information",
          "items": {
            "$ref": "GetMessageInfoResponse"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "SyncInfoMessages",
          "name": "syncInfo",
          "required": true
        }
      ]
    },
    {
      "name": "OwnerResource",
      "description": "Message owner information. Supported for shared voicemail and sms messages only",
      "fields": [
        {
          "type": "string",
          "description": "Name of a voicemail owner",
          "name": "name"
        },
        {
          "type": "string",
          "description": "ExtensionType",
          "enum": [
            "User",
            "Department",
            "Announcement",
            "Voicemail",
            "DigitalUser",
            "VirtualUser",
            "FaxUser",
            "PagingOnly",
            "SharedLinesGroup",
            "DelegatedLinesGroup",
            "GroupCallPickup",
            "IvrMenu",
            "ApplicationExtension",
            "ProxyAdmin",
            "RoomConnector",
            "ParkLocation",
            "Limited",
            "Bot",
            "Site",
            "Room",
            "FlexibleUser"
          ],
          "name": "extensionType"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        }
      ]
    },
    {
      "name": "MessageAttachmentInfo",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a message attachment",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a message attachment",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Type of message attachment",
          "enum": [
            "AudioRecording",
            "AudioTranscription",
            "Text",
            "SourceDocument",
            "RenderedDocument",
            "MmsAttachment"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "MIME type for a given attachment, for instance 'audio/wav'",
          "name": "contentType"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Supported for `Voicemail` only. Duration of a voicemail in\nseconds\n",
          "name": "vmDuration"
        },
        {
          "type": "string",
          "description": "Name of a file attached",
          "name": "fileName"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Size of attachment in bytes",
          "name": "size"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Attachment height in pixels if available",
          "name": "height"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Attachment width in pixels if available",
          "name": "width"
        }
      ]
    },
    {
      "name": "SyncInfoMessages",
      "description": "Sync type, token and time",
      "fields": [
        {
          "type": "string",
          "enum": [
            "FSync",
            "ISync"
          ],
          "description": "Type of message synchronization request:\n  - FSync -- full sync\n  - ISync -- incremental sync\n",
          "name": "syncType"
        },
        {
          "type": "string",
          "description": "Synchronization token",
          "name": "syncToken"
        },
        {
          "type": "string",
          "description": "Last synchronization date/time in ISO 8601 format including\ntimezone, for example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "syncTime"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "olderRecordsExist"
        }
      ]
    },
    {
      "name": "MessageStoreCallerInfoResponseTo",
      "fields": [
        {
          "type": "string",
          "description": "Extension short number (usually 3 or 4 digits). This property\nis filled when parties communicate by means of short internal numbers,\nfor example when calling to other extension or sending/receiving Company\nPager messages\n",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined\nfrom a phone number. This property is filled only when `phoneNumber` is not\nempty and a server can calculate location information from it (for example,\nthis information is unavailable for US toll-free numbers)\n",
          "name": "location"
        },
        {
          "type": "boolean",
          "description": "The `true` value specifies that message is sent exactly to this recipient.\nReturned in the `to` field for group MMS. Useful if one extension has several\nphone numbers'\n",
          "name": "target"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "string",
          "enum": [
            "AllLinesInUse",
            "Undefined",
            "NoFaxSendPermission",
            "NoInternationalPermission",
            "NoFaxMachine",
            "NoAnswer",
            "LineBusy",
            "CallerHungUp",
            "NotEnoughCredits",
            "SentPartially",
            "InternationalCallingDisabled",
            "DestinationCountryDisabled",
            "UnknownCountryCode",
            "NotAccepted",
            "InvalidNumber",
            "CallDeclined",
            "TooManyCallsPerLine",
            "CallFailed",
            "RenderingFailed",
            "TooManyPages",
            "ReturnToDBQueue",
            "NoCallTime",
            "WrongNumber",
            "ProhibitedNumber",
            "InternalError",
            "FaxSendingProhibited",
            "ThePhoneIsBlacklisted",
            "UserNotFound",
            "ConvertError",
            "DBGeneralError",
            "SkypeBillingFailed",
            "AccountSuspended",
            "ProhibitedDestination",
            "InternationalDisabled"
          ],
          "name": "faxErrorCode"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a party. If the phone does not\nbelong to the known extension, only the location is returned, the name\nis not determined then\n",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Phone number of a party. Usually it is a plain number including\ncountry and area code like 18661234567. But sometimes it could be returned\nfrom database with some formatting applied, for example (866)123-4567.\nThis property is filled in all cases where parties communicate by means\nof global phone numbers, for example when calling to direct numbers or\nsending/receiving SMS\n",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Internal identifier of a message recipient",
          "name": "recipientId"
        }
      ]
    },
    {
      "name": "GetMessageInfoResponse",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a message",
          "example": 1724099032020,
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a message",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "array",
          "description": "List of message attachments",
          "items": {
            "$ref": "MessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n",
          "name": "availability"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "SMS and Pager only. Identifier of a conversation the message\nbelongs to\n",
          "name": "conversationId"
        },
        {
          "$ref": "ConversationInfo",
          "name": "conversation"
        },
        {
          "type": "string",
          "description": "Message creation date/time in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n",
          "name": "direction"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Fax only. Page count in a fax message",
          "name": "faxPageCount"
        },
        {
          "type": "string",
          "description": "Fax only. Resolution of a fax message. 'High' for black and\nwhite image scanned at 200 dpi, 'Low' for black and white image scanned\nat 100 dpi\n",
          "enum": [
            "High",
            "Low"
          ],
          "name": "faxResolution"
        },
        {
          "$ref": "MessageStoreCallerInfoResponseFrom",
          "name": "from"
        },
        {
          "type": "string",
          "description": "The date/time when the message was modified on server in ISO\n8601 format including timezone, for example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "boolean",
          "description": "Pager only. `true` if at least one of the message recipients is\n'Department' extension\n",
          "name": "pgToDepartment"
        },
        {
          "type": "string",
          "description": "Message priority",
          "enum": [
            "Normal",
            "High"
          ],
          "name": "priority"
        },
        {
          "description": "Message read status",
          "type": "string",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "SMS only. Date/time when outbound SMS was delivered to recipient's\nhandset in ISO 8601 format including timezone, for example\n2016-03-10T18:07:52.534Z. It is filled only if a carrier sends a delivery\nreceipt to RingCentral\n",
          "format": "date-time",
          "name": "smsDeliveryTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "SMS only. Number of attempts made to send an outbound SMS to\nthe Gateway (if Gateway is temporary unavailable)\n",
          "name": "smsSendingAttemptsCount"
        },
        {
          "type": "string",
          "description": "Message subject. For SMS and Pager messages it replicates message\ntext which is also returned as an attachment\n",
          "name": "subject"
        },
        {
          "type": "array",
          "description": "Recipient information",
          "items": {
            "$ref": "MessageStoreCallerInfoResponseTo"
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Message type",
          "enum": [
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Voicemail only. Status of a voicemail to text transcription.\nIf 'VoicemailToText' feature is not activated for account,\nthe 'NotAvailable' value is returned\n",
          "enum": [
            "NotAvailable",
            "InProgress",
            "TimedOut",
            "Completed",
            "CompletedPartially",
            "Failed",
            "Unknown"
          ],
          "name": "vmTranscriptionStatus"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Cover page identifier. If coverIndex is set to '0' (zero) cover\npage is not attached. For the list of available cover page identifiers\n(1-13) please call the Fax Cover Pages method. If not specified,\nthe default cover page is attached (which is configured in 'Outbound\nFax Settings')\n",
          "name": "coverIndex"
        },
        {
          "type": "string",
          "description": "Cover page text, entered by the fax sender and printed on the\ncover page. Maximum length is limited to 1024 symbols\n",
          "name": "coverPageText"
        },
        {
          "$ref": "OwnerResource",
          "name": "owner"
        }
      ]
    },
    {
      "name": "CallerIdByFeatureInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "If 'PhoneNumber' value is specified, then a certain phone number\nis shown as a caller ID when using this telephony feature. If 'Blocked'\nvalue is specified, then a caller ID is hidden. The value 'CurrentLocation'\ncan be specified for 'RingOut' feature only. The default is 'PhoneNumber'\n= ['PhoneNumber', 'Blocked', 'CurrentLocation']\n",
          "name": "type"
        },
        {
          "$ref": "CallerIdPhoneInfoRequest",
          "name": "phoneInfo"
        }
      ]
    },
    {
      "name": "ExtensionCallerIdInfoRequest",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URL of a caller ID resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallerIdByDeviceRequest"
          },
          "name": "byDevice"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallerIdByFeatureRequest"
          },
          "name": "byFeature"
        },
        {
          "type": "boolean",
          "description": "If `true`, then the user first name and last name will be used\nas caller ID when making outbound calls from extension\n",
          "name": "extensionNameForOutboundCalls"
        },
        {
          "type": "boolean",
          "description": "If `true`, then extension number will be used as caller ID\nwhen making internal calls\n",
          "name": "extensionNumberForInternalCalls"
        }
      ]
    },
    {
      "name": "CallerIdByFeature",
      "description": "Caller ID settings by feature",
      "fields": [
        {
          "type": "string",
          "enum": [
            "RingOut",
            "RingMe",
            "CallFlip",
            "FaxNumber",
            "AdditionalSoftphone",
            "Alternate",
            "CommonPhone",
            "MobileApp",
            "Delegated"
          ],
          "name": "feature"
        },
        {
          "$ref": "CallerIdByFeatureInfo",
          "name": "callerId"
        }
      ]
    },
    {
      "name": "CallerIdByFeatureInfo",
      "fields": [
        {
          "type": "string",
          "description": "If 'PhoneNumber' value is specified, then a certain phone number\nis shown as a caller ID when using this telephony feature. If 'Blocked'\nvalue is specified, then a caller ID is hidden. The value 'CurrentLocation'\ncan be specified for 'RingOut' feature only. The default is 'PhoneNumber'\n= ['PhoneNumber', 'Blocked', 'CurrentLocation']\n",
          "name": "type"
        },
        {
          "$ref": "CallerIdPhoneInfo",
          "name": "phoneInfo"
        }
      ]
    },
    {
      "name": "CallerIdPhoneInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a phone number",
          "name": "id"
        }
      ]
    },
    {
      "name": "CallerIdByDeviceRequest",
      "description": "Caller ID settings by device",
      "fields": [
        {
          "$ref": "CallerIdDeviceInfoRequest",
          "name": "device"
        },
        {
          "$ref": "CallerIdByDeviceInfoRequest",
          "name": "callerId"
        }
      ]
    },
    {
      "name": "CallerIdByFeatureRequest",
      "description": "Caller ID settings by feature",
      "fields": [
        {
          "type": "string",
          "enum": [
            "RingOut",
            "RingMe",
            "CallFlip",
            "FaxNumber",
            "AdditionalSoftphone",
            "Alternate",
            "CommonPhone",
            "MobileApp",
            "Delegated"
          ],
          "name": "feature"
        },
        {
          "$ref": "CallerIdByFeatureInfoRequest",
          "name": "callerId"
        }
      ]
    },
    {
      "name": "CallerIdByDeviceInfo",
      "fields": [
        {
          "type": "string",
          "description": "If 'PhoneNumber' value is specified, then a certain phone number\nis shown as a caller ID when using this telephony feature. If 'Blocked'\nvalue is specified, then a caller ID is hidden. The value 'CurrentLocation'\ncan be specified for 'RingOut' feature only. The default is 'PhoneNumber'\n= ['PhoneNumber', 'Blocked', 'CurrentLocation']\n",
          "name": "type"
        },
        {
          "$ref": "CallerIdPhoneInfo",
          "name": "phoneInfo"
        }
      ]
    },
    {
      "name": "CallerIdPhoneInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a phone number",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a phone number resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(with '+' sign) format\n",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "CallerIdDeviceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a device resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of a device",
          "name": "name"
        }
      ]
    },
    {
      "name": "CallerIdByDeviceInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "If 'PhoneNumber' value is specified, then a certain phone number\nis shown as a caller ID when using this telephony feature. If 'Blocked'\nvalue is specified, then a caller ID is hidden. The value 'CurrentLocation'\ncan be specified for 'RingOut' feature only. The default is 'PhoneNumber'\n= ['PhoneNumber', 'Blocked', 'CurrentLocation']\n",
          "name": "type"
        },
        {
          "$ref": "CallerIdPhoneInfoRequest",
          "name": "phoneInfo"
        }
      ]
    },
    {
      "name": "ExtensionCallerIdInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URL of a caller ID resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallerIdByDevice"
          },
          "name": "byDevice"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallerIdByFeature"
          },
          "name": "byFeature"
        },
        {
          "type": "boolean",
          "description": "If `true`, then user first name and last name will be used\nas caller ID when making outbound calls from extension\n",
          "name": "extensionNameForOutboundCalls"
        },
        {
          "type": "boolean",
          "description": "If `true`, then extension number will be used as caller ID\nwhen making internal calls\n",
          "name": "extensionNumberForInternalCalls"
        }
      ]
    },
    {
      "name": "CallerIdByDevice",
      "description": "Caller ID settings by device",
      "fields": [
        {
          "$ref": "CallerIdDeviceInfo",
          "name": "device"
        },
        {
          "$ref": "CallerIdByDeviceInfo",
          "name": "callerId"
        }
      ]
    },
    {
      "name": "CallerIdDeviceInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        }
      ]
    },
    {
      "name": "TransferredExtension",
      "description": "Transfer extension settings, set/returned if `callHandlingAction` is specified as `TransferToExtension`",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "readOnly": true,
          "description": "Canonical URI of an extension resource",
          "name": "uri"
        }
      ]
    },
    {
      "name": "RecipientInfo",
      "description": "Recipient data",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a voicemail recipient extension resource",
          "name": "uri"
        },
        {
          "description": "Internal identifier of a voicemail recipient",
          "type": "string",
          "name": "id"
        }
      ]
    },
    {
      "name": "TransferInfo",
      "fields": [
        {
          "$ref": "TransferExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Event that initiates transferring to the specified extension",
          "enum": [
            "HoldTimeExpiration",
            "MaxCallers",
            "NoAnswer"
          ],
          "name": "action"
        }
      ]
    },
    {
      "name": "UnconditionalForwardingInfo",
      "description": "Unconditional forwarding parameters.\nReturned if 'UnconditionalForwarding' value is specified for the `callHandlingAction` parameter\n",
      "fields": [
        {
          "type": "string",
          "description": "Phone number to which the call is forwarded. In addition to\ncommon E.164 format, the following number patterns are supported: 11xxxxxxxxxxx,\n444xxxxxxxxxxx, 616xxxxxxxxxxx, 1700yyyy; where xxxxxxxxxxx is a phone number in\nE.164 format (without '+' sign) and yyyy is an external short extension number.\nMax number of digits is 15\n",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Event that initiates forwarding to the specified phone number",
          "enum": [
            "HoldTimeExpiration",
            "MaxCallers",
            "NoAnswer"
          ],
          "name": "action"
        }
      ]
    },
    {
      "name": "TransferredExtensionInfo",
      "fields": [
        {
          "$ref": "TransferredExtension",
          "name": "extension"
        }
      ]
    },
    {
      "name": "QueueInfo",
      "description": "Queue settings applied for department (call queue) extension type,\nwith the 'AgentQueue' value specified as a call handling action\n",
      "fields": [
        {
          "type": "string",
          "description": "Specifies how calls are transferred to group members",
          "enum": [
            "Rotating",
            "Simultaneous",
            "FixedOrder"
          ],
          "name": "transferMode"
        },
        {
          "type": "array",
          "description": "Call transfer information",
          "items": {
            "$ref": "TransferInfo"
          },
          "name": "transfer"
        },
        {
          "type": "string",
          "description": "Specifies the type of action to be taken if: members are available\nbut no one answers, or all members are busy/unavailable. This option is\navailable for Business hours only. For simultaneous transfer mode only\n'WaitPrimaryMembers' and 'WaitPrimaryAndOverflowMembers' are supported\n",
          "enum": [
            "WaitPrimaryMembers",
            "WaitPrimaryAndOverflowMembers",
            "Voicemail",
            "TransferToExtension",
            "UnconditionalForwarding"
          ],
          "name": "noAnswerAction"
        },
        {
          "type": "array",
          "description": "Information on a call forwarding rule",
          "items": {
            "$ref": "FixedOrderAgents"
          },
          "name": "fixedOrderAgents"
        },
        {
          "type": "string",
          "description": "Connecting audio interruption mode",
          "enum": [
            "Never",
            "WhenMusicEnds",
            "Periodically"
          ],
          "name": "holdAudioInterruptionMode"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Connecting audio interruption message period in seconds",
          "name": "holdAudioInterruptionPeriod"
        },
        {
          "type": "string",
          "description": "Specifies the type of action to be taken after the hold time\n(waiting for an available call queue member) expires. If 'TransferToExtension'\noption is selected, the extension specified in `transfer` field is used.\nThe default value is `Voicemail`\n",
          "default": "Voicemail",
          "enum": [
            "TransferToExtension",
            "UnconditionalForwarding",
            "Voicemail"
          ],
          "name": "holdTimeExpirationAction"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Maximum time in seconds to wait for a call queue member before trying the next member",
          "name": "agentTimeout"
        },
        {
          "type": "integer",
          "format": "int32",
          "default": 15,
          "minimum": 0,
          "maximum": 300,
          "description": "Minimum post-call wrap up time in seconds before agent status\nis automatically set; the value range is from 0 to 300 sec.\n",
          "name": "wrapUpTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Maximum hold time in seconds to wait for an available call queue member",
          "name": "holdTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "maximum": 25,
          "description": "Maximum count of callers on hold; the limitation is 25 callers",
          "name": "maxCallers"
        },
        {
          "type": "string",
          "description": "Specifies the type of action to be taken if count of callers on hold exceeds the supported maximum",
          "enum": [
            "Voicemail",
            "Announcement",
            "TransferToExtension",
            "UnconditionalForwarding"
          ],
          "name": "maxCallersAction"
        },
        {
          "type": "array",
          "items": {
            "$ref": "UnconditionalForwardingInfo"
          },
          "name": "unconditionalForwarding"
        }
      ]
    },
    {
      "name": "CallersInfo",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a caller",
          "name": "callerId"
        },
        {
          "type": "string",
          "description": "Contact name of a caller",
          "name": "name"
        }
      ]
    },
    {
      "name": "TransferExtensionInfo",
      "description": "Transfer extension settings, set/returned if `callHandlingAction` is specified as `TransferToExtension`",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "readOnly": true,
          "description": "Canonical URI of an extension resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "CallHandlingRuleInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI to an answering rule resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of an answering rule",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user",
          "name": "name"
        },
        {
          "type": "boolean",
          "description": "Specifies if an answering rule is active or inactive",
          "name": "enabled"
        },
        {
          "$ref": "ScheduleInfo",
          "name": "schedule"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calling to selected number(s)",
          "items": {
            "$ref": "CalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calls are received from specified caller(s)",
          "items": {
            "$ref": "CallersInfo"
          },
          "name": "callers"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded",
          "enum": [
            "ForwardCalls",
            "UnconditionalForwarding",
            "AgentQueue",
            "TransferToExtension",
            "TakeMessagesOnly",
            "PlayAnnouncementOnly",
            "SharedLines"
          ],
          "name": "callHandlingAction"
        },
        {
          "$ref": "ForwardingInfo",
          "name": "forwarding"
        },
        {
          "$ref": "UnconditionalForwardingInfo",
          "name": "unconditionalForwarding"
        },
        {
          "$ref": "QueueInfo",
          "name": "queue"
        },
        {
          "$ref": "TransferredExtensionInfo",
          "name": "transfer"
        },
        {
          "$ref": "VoicemailInfo",
          "name": "voicemail"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        },
        {
          "type": "string",
          "description": "Call screening status. 'Off' - no call screening; 'NoCallerId' - if caller ID is missing, then callers are asked to say their name before connecting; 'UnknownCallerId' - if caller ID is not in contact list, then callers are asked to say their name before connecting; 'Always' - the callers are always asked to say their name before connecting. The default value is 'Off'",
          "enum": [
            "Off",
            "NoCallerId",
            "UnknownCallerId",
            "Always"
          ],
          "default": "Off",
          "name": "screening"
        },
        {
          "$ref": "SharedLinesInfo",
          "name": "sharedLines"
        },
        {
          "$ref": "MissedCallInfo",
          "name": "missedCall"
        }
      ]
    },
    {
      "name": "CreateAnsweringRuleForwardingNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a forwarding number",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a forwarding/call flip phone number",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip number title",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Type of forwarding number",
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "PhoneLine",
            "Outage",
            "Other",
            "BusinessMobilePhone",
            "ExternalCarrier",
            "ExtensionApps"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "MissedCallExtensionInfo",
      "description": "Specifies an extension (a calling group) which should be used for the missed call transfer. Returned only if the `actionType` is set to 'ConnectToExtension'",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension which should be used for the missed call transfer",
          "name": "id"
        },
        {
          "$ref": "MissedCallExtensionInfoExternalNumber",
          "name": "externalNumber"
        }
      ]
    },
    {
      "name": "SharedLinesInfo",
      "description": "SharedLines call handling action settings",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "minimum": 10,
          "maximum": 80,
          "description": "Number of seconds to wait before forwarding unanswered calls. The value range is 10 - 80\n",
          "name": "timeout"
        }
      ]
    },
    {
      "name": "CallersInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a caller",
          "name": "callerId"
        },
        {
          "type": "string",
          "description": "Contact name of a caller",
          "name": "name"
        }
      ]
    },
    {
      "name": "FixedOrderAgents",
      "fields": [
        {
          "$ref": "FixedOrderAgentsExtensionInfo",
          "name": "extension"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Ordinal of an agent (call queue member)",
          "name": "index"
        }
      ]
    },
    {
      "name": "ScheduleInfo",
      "description": "Schedule when an answering rule should be applied",
      "fields": [
        {
          "$ref": "WeeklyScheduleInfo",
          "name": "weeklyRanges"
        },
        {
          "type": "array",
          "description": "Specific data ranges",
          "items": {
            "$ref": "RangesInfo"
          },
          "name": "ranges"
        },
        {
          "type": "string",
          "description": "The user's schedule specified for business hours or after hours; it can also be set/retrieved calling the corresponding method",
          "enum": [
            "BusinessHours",
            "AfterHours"
          ],
          "name": "ref"
        }
      ]
    },
    {
      "name": "MissedCallExtensionInfoExternalNumber",
      "description": "Specifies an external PSTN number which should be used for the missed call transfer. Returned only if the actionType is set to `ConnectToExternalNumber`",
      "fields": [
        {
          "type": "string",
          "description": "Phone number to which the call is forwarded. In addition to common [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format, the following number patterns are supported: 11xxxxxxxxxxx, 444xxxxxxxxxxx, 616xxxxxxxxxxx, 1700yyyy; where `xxxxxxxxxxx` is a phone number in E.164 format (without '+' sign) and `yyyy` is an external short extension number. Maximum number of digits is 15",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "CustomAnsweringRuleInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI to an answering rule resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of an answering rule",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user",
          "name": "name"
        },
        {
          "type": "boolean",
          "description": "Specifies if an answering rule is active or inactive",
          "name": "enabled"
        },
        {
          "$ref": "ScheduleInfo",
          "name": "schedule"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calling to selected number(s)",
          "items": {
            "$ref": "CalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calls are received from specified caller(s)",
          "items": {
            "$ref": "CallersInfo"
          },
          "name": "callers"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded",
          "enum": [
            "ForwardCalls",
            "UnconditionalForwarding",
            "AgentQueue",
            "TransferToExtension",
            "TakeMessagesOnly",
            "PlayAnnouncementOnly",
            "SharedLines"
          ],
          "name": "callHandlingAction"
        },
        {
          "$ref": "ForwardingInfo",
          "name": "forwarding"
        },
        {
          "$ref": "UnconditionalForwardingInfo",
          "name": "unconditionalForwarding"
        },
        {
          "$ref": "QueueInfo",
          "name": "queue"
        },
        {
          "$ref": "TransferredExtensionInfo",
          "name": "transfer"
        },
        {
          "$ref": "VoicemailInfo",
          "name": "voicemail"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        },
        {
          "type": "string",
          "description": "Call screening status. 'Off' - no call screening; 'NoCallerId' - if caller ID is missing, then callers are asked to say their name before connecting; 'UnknownCallerId' - if caller ID is not in contact list, then callers are asked to say their name before connecting; 'Always' - the callers are always asked to say their name before connecting. The default value is 'Off'",
          "enum": [
            "Off",
            "NoCallerId",
            "UnknownCallerId",
            "Always"
          ],
          "default": "Off",
          "name": "screening"
        },
        {
          "$ref": "SharedLinesInfo",
          "name": "sharedLines"
        }
      ]
    },
    {
      "name": "CreateAnsweringRuleRequest",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if the rule is active or inactive. The default value\nis `true`\n",
          "name": "enabled",
          "required": false
        },
        {
          "type": "string",
          "description": "Type of an answering rule. The 'Custom' value should be specified",
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user",
          "name": "name",
          "required": true
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calls are received from the specified caller(s)",
          "items": {
            "$ref": "CallersInfoRequest"
          },
          "name": "callers",
          "required": false
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calling to selected number(s)",
          "items": {
            "$ref": "CalledNumberInfo"
          },
          "name": "calledNumbers",
          "required": false
        },
        {
          "$ref": "ScheduleInfo",
          "name": "schedule",
          "required": false
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded",
          "enum": [
            "ForwardCalls",
            "UnconditionalForwarding",
            "AgentQueue",
            "TransferToExtension",
            "TakeMessagesOnly",
            "PlayAnnouncementOnly",
            "SharedLines"
          ],
          "name": "callHandlingAction",
          "required": false
        },
        {
          "$ref": "ForwardingInfo",
          "name": "forwarding",
          "required": false
        },
        {
          "$ref": "UnconditionalForwardingInfo",
          "name": "unconditionalForwarding",
          "required": false
        },
        {
          "$ref": "QueueInfo",
          "name": "queue",
          "required": false
        },
        {
          "$ref": "TransferredExtensionInfo",
          "name": "transfer",
          "required": false
        },
        {
          "$ref": "VoicemailInfo",
          "name": "voicemail",
          "required": false
        },
        {
          "$ref": "MissedCallInfo",
          "name": "missedCall",
          "required": false
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings\ncan be applied, see Dictionary Greeting List\n",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings",
          "required": false
        },
        {
          "type": "string",
          "description": "Call screening status. 'Off' - no call screening; 'NoCallerId'\n- if caller ID is missing, then callers are asked to say their name before\nconnecting; 'UnknownCallerId' - if caller ID is not in contact list, then\ncallers are asked to say their name before connecting; 'Always' - the\ncallers are always asked to say their name before connecting. The default\nvalue is 'Off'\n",
          "enum": [
            "Off",
            "NoCallerId",
            "UnknownCallerId",
            "Always"
          ],
          "default": "Off",
          "name": "screening",
          "required": false
        }
      ]
    },
    {
      "name": "UserAnsweringRuleList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an answering rule list resource",
          "example": "https://platform.ringcentral.com/restapi/v1.0/account/240913004/extension/240972004/answering-rule?page=1&perPage=100",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of answering rules",
          "items": {
            "$ref": "CallHandlingRuleInfo"
          },
          "name": "records"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "ForwardingInfo",
      "description": "Forwarding parameters. Returned if 'ForwardCalls' is specified in 'callHandlingAction'. These settings determine the forwarding numbers to which the call will be forwarded",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if the user's softphone(s) are notified before forwarding the incoming call to desk phones and forwarding numbers",
          "name": "notifyMySoftPhones"
        },
        {
          "type": "boolean",
          "description": "Deprecated parameter. Specifies if the administrator's softphone is notified before forwarding the incoming call to desk phones and forwarding numbers. The default value is `false`",
          "deprecated": true,
          "name": "notifyAdminSoftPhones"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Number of rings before forwarding starts",
          "name": "softPhonesRingCount"
        },
        {
          "type": "boolean",
          "description": "Specifies that desktop and mobile applications of the user will ring till the end of their forwarding list. If set to `true` then `softPhonesRingCount` is ignored",
          "default": true,
          "name": "softPhonesAlwaysRing"
        },
        {
          "type": "string",
          "description": "Specifies the order in which the forwarding numbers ring. 'Sequentially' means that forwarding numbers are ringing one at a time, in order of priority. 'Simultaneously' means that forwarding numbers are ring all at the same time",
          "enum": [
            "Sequentially",
            "Simultaneously"
          ],
          "name": "ringingMode"
        },
        {
          "type": "array",
          "description": "Information on a call forwarding rule",
          "items": {
            "$ref": "ForwardingRuleInfo"
          },
          "name": "rules"
        },
        {
          "type": "boolean",
          "description": "Specifies if desktop and mobile applications of the user are notified before (true) or after (false) forwarding the incoming call to desk phones and forwarding numbers. Applicable only if `notifyMySoftPhones` parameter is set to `true`",
          "name": "softPhonesPositionTop"
        },
        {
          "type": "boolean",
          "description": "Deprecated parameter. Specifies if mobile timeout is activated for the rule",
          "deprecated": true,
          "name": "mobileTimeout"
        }
      ]
    },
    {
      "name": "ForwardingRuleInfo",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "description": "Forwarding number (or group) ordinal",
          "name": "index"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Number of rings for a forwarding number (or group)",
          "name": "ringCount"
        },
        {
          "type": "boolean",
          "description": "Forwarding number status. Returned only if `showInactiveNumbers` is set to `true`",
          "name": "enabled"
        },
        {
          "type": "array",
          "description": "Forwarding number (or group) data",
          "items": {
            "$ref": "CreateAnsweringRuleForwardingNumberInfo"
          },
          "name": "forwardingNumbers"
        }
      ]
    },
    {
      "name": "VoicemailInfo",
      "description": "Specifies whether to take a voicemail and who should do it",
      "fields": [
        {
          "type": "boolean",
          "description": "If `true` then voicemails are allowed to be received",
          "name": "enabled"
        },
        {
          "$ref": "RecipientInfo",
          "name": "recipient"
        }
      ]
    },
    {
      "name": "FixedOrderAgentsExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of agent extension",
          "name": "name"
        }
      ]
    },
    {
      "name": "MissedCallInfo",
      "description": "Specifies behavior for the missed call scenario. Returned only if `enabled` parameter of a voicemail is set to 'false'",
      "fields": [
        {
          "type": "string",
          "description": "Specifies the action that should be executed on a missed call. It can either be playing greeting message and disconnection, or sending call to a calling group. If 'ConnectToExtension' is set, then calling group extension should be specified",
          "enum": [
            "PlayGreetingAndDisconnect",
            "ConnectToExtension",
            "ConnectToExternalNumber"
          ],
          "name": "actionType"
        },
        {
          "$ref": "MissedCallExtensionInfo",
          "name": "extension"
        }
      ]
    },
    {
      "name": "UpdateAnsweringRuleRequest",
      "fields": [
        {
          "type": "string",
          "description": "Identifier of an answering rule",
          "name": "id"
        },
        {
          "$ref": "ForwardingInfoCreateRuleRequest",
          "name": "forwarding"
        },
        {
          "type": "boolean",
          "description": "Specifies if the rule is active or inactive. The default value is `true`",
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calls are received from the specified caller(s)",
          "items": {
            "$ref": "CallersInfoRequest"
          },
          "name": "callers"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calling to selected number(s)",
          "items": {
            "$ref": "CalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "$ref": "ScheduleInfo",
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded",
          "enum": [
            "ForwardCalls",
            "UnconditionalForwarding",
            "AgentQueue",
            "TransferToExtension",
            "TakeMessagesOnly",
            "PlayAnnouncementOnly",
            "SharedLines"
          ],
          "name": "callHandlingAction"
        },
        {
          "type": "string",
          "description": "Type of an answering rule",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "$ref": "UnconditionalForwardingInfo",
          "name": "unconditionalForwarding"
        },
        {
          "$ref": "QueueInfo",
          "name": "queue"
        },
        {
          "$ref": "VoicemailInfo",
          "name": "voicemail"
        },
        {
          "$ref": "MissedCallInfo",
          "name": "missedCall"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings\ncan be applied, see Dictionary Greeting List\n",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        },
        {
          "type": "string",
          "description": "Call screening status. 'Off' - no call screening; 'NoCallerId'\n- if caller ID is missing, then callers are asked to say their name before\nconnecting; 'UnknownCallerId' - if caller ID is not in contact list, then\ncallers are asked to say their name before connecting; 'Always' - the\ncallers are always asked to say their name before connecting. The default\nvalue is 'Off'\n",
          "enum": [
            "Off",
            "NoCallerId",
            "UnknownCallerId",
            "Always"
          ],
          "default": "Off",
          "name": "screening"
        },
        {
          "type": "boolean",
          "description": "Indicates whether inactive numbers should be returned or not",
          "name": "showInactiveNumbers"
        },
        {
          "$ref": "TransferredExtensionInfo",
          "name": "transfer"
        }
      ]
    },
    {
      "name": "ForwardingInfoCreateRuleRequest",
      "description": "Forwarding parameters. Returned if 'ForwardCalls' is specified in 'callHandlingAction'. These settings determine the forwarding numbers to which the call will be forwarded",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if the first ring on desktop/mobile apps is enabled. The default value is `true`",
          "name": "notifyMySoftPhones"
        },
        {
          "type": "boolean",
          "description": "Deprecated parameter. Specifies if the administrator's softphone (desktop application) is notified before forwarding the incoming call to desk phones and forwarding numbers. The default value is `true`.",
          "deprecated": true,
          "name": "notifyAdminSoftPhones"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Specifies delay between ring on apps and starting of a call forwarding. To activate this parameter use the value > 0, and turn off the `softPhonesAlwaysRing` setting. If the value is 1 or 0, the `softPhonesAlwaysRing` setting cannot be turned off",
          "name": "softPhonesRingCount"
        },
        {
          "type": "boolean",
          "description": "Specifies that desktop and mobile applications of the user will ring till the end of their forwarding list. If set to `true` then `softPhonesRingCount` is ignored",
          "default": true,
          "name": "softPhonesAlwaysRing"
        },
        {
          "type": "string",
          "description": "Specifies the order in which forwarding numbers ring. 'Sequentially' means that forwarding numbers are ringing one at a time, in order of priority. 'Simultaneously' means that forwarding numbers are ringing all at the same time. The default value is 'Sequentially'",
          "enum": [
            "Sequentially",
            "Simultaneously"
          ],
          "name": "ringingMode"
        },
        {
          "type": "array",
          "description": "Information on a call forwarding rule",
          "items": {
            "$ref": "ForwardingRuleCreateRequest"
          },
          "name": "rules"
        },
        {
          "type": "boolean",
          "description": "Deprecated parameter. Specifies if mobile timeout is activated for the rule",
          "deprecated": true,
          "name": "mobileTimeout"
        }
      ]
    },
    {
      "name": "ForwardingRuleCreateRequest",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "description": "Forwarding number (or group) ordinal. Not returned for inactive numbers",
          "name": "index"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Number of rings for a forwarding number (or group). For inactive\nnumbers the default value ('4') is returned\n",
          "name": "ringCount"
        },
        {
          "type": "boolean",
          "description": "Phone number status",
          "name": "enabled"
        },
        {
          "type": "array",
          "description": "Forwarding number (or group) data",
          "items": {
            "$ref": "ForwardingNumberInfoRulesCreateRuleRequest"
          },
          "name": "forwardingNumbers"
        }
      ]
    },
    {
      "name": "ForwardingNumberInfoRulesCreateRuleRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a forwarding number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Forwarding phone number type",
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "PhoneLine",
            "Outage",
            "Other",
            "BusinessMobilePhone",
            "ExternalCarrier",
            "ExtensionApps"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip number title",
          "name": "label"
        }
      ]
    },
    {
      "name": "GetInternalTextMessageInfoResponse",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a message",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "The list of message attachments",
          "items": {
            "$ref": "MessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n",
          "name": "availability"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "SMS and Pager only. Identifier of a conversation that the message\nbelongs to\n",
          "name": "conversationId"
        },
        {
          "$ref": "ConversationInfo",
          "name": "conversation"
        },
        {
          "type": "string",
          "description": "Message creation date/time in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n",
          "name": "direction"
        },
        {
          "$ref": "MessageStoreCallerInfoResponseFrom",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Date/time when the message was modified on server in ISO\n8601 format including timezone, for example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "boolean",
          "description": "Pager only. `true` if at least one of a message recipients\nis 'Department' extension\n",
          "name": "pgToDepartment"
        },
        {
          "type": "string",
          "description": "Message priority",
          "enum": [
            "Normal",
            "High"
          ],
          "name": "priority"
        },
        {
          "description": "Message read status",
          "type": "string",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "Message subject. For SMS and Pager messages it replicates message\ntext which is also returned as an attachment\n",
          "name": "subject"
        },
        {
          "type": "array",
          "description": "Recipient information",
          "items": {
            "$ref": "MessageStoreCallerInfoResponseTo"
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Message type",
          "enum": [
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "CreateInternalTextMessageRequest",
      "fields": [
        {
          "$ref": "PagerCallerInfoRequest",
          "name": "from",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Internal identifier of a message this message replies to",
          "name": "replyOn",
          "required": false
        },
        {
          "type": "string",
          "description": "Text of a pager message. Max length is 1024 symbols (2-byte\nUTF-16 encoded). If a character is encoded in 4 bytes in UTF-16 it is\ntreated as 2 characters, thus restricting the maximum message length to\n512 symbols\n",
          "example": "hello world",
          "name": "text",
          "required": true
        },
        {
          "type": "array",
          "description": "Optional if `replyOn` parameter is specified. Receiver of a pager\nmessage.\n",
          "items": {
            "$ref": "PagerCallerInfoRequest"
          },
          "name": "to",
          "required": false
        }
      ]
    },
    {
      "name": "PagerCallerInfoRequest",
      "description": "Sender of a pager message.",
      "fields": [
        {
          "type": "string",
          "description": "Extension identifier",
          "example": "123456789",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Extension number",
          "example": "105",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "RoleIdResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        }
      ]
    },
    {
      "name": "AuthProfileResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ActivePermissionResource"
          },
          "name": "permissions"
        }
      ]
    },
    {
      "name": "ActivePermissionResource",
      "fields": [
        {
          "$ref": "PermissionIdResource",
          "name": "permission"
        },
        {
          "$ref": "RoleIdResource",
          "name": "effectiveRole"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Account",
              "AllExtensions",
              "Federation",
              "NonUserExtensions",
              "RoleBased",
              "Self",
              "UserExtensions"
            ]
          },
          "name": "scopes"
        }
      ]
    },
    {
      "name": "AuthProfileCheckResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "successful"
        },
        {
          "$ref": "ActivePermissionResource",
          "name": "details"
        }
      ]
    },
    {
      "name": "UserCallQueues",
      "fields": [
        {
          "type": "array",
          "description": "List of queues where an extension is an agent",
          "items": {
            "$ref": "QueueShortInfoResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "QueueShortInfoResource",
      "fields": [
        {
          "type": "string",
          "description": "Call queue extension identifier",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Call queue name (read-only)",
          "name": "name"
        }
      ]
    },
    {
      "name": "CreateUserEmergencyLocationRequest",
      "fields": [
        {
          "type": "string",
          "description": "Name of a new personal emergency response location",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Address format ID",
          "name": "addressFormatId"
        },
        {
          "type": "boolean",
          "default": false,
          "description": "Specifies emergency address validation during the ERL creation/update.\nIf set to 'true', then address validation for non-US addresses is skipped\n",
          "name": "trusted"
        },
        {
          "$ref": "CommonEmergencyLocationAddressInfo",
          "name": "address"
        },
        {
          "$ref": "ShortSiteInfo",
          "name": "site"
        }
      ]
    },
    {
      "name": "GetExtensionForwardingNumberListResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the forwarding number list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of forwarding phone numbers",
          "items": {
            "$ref": "ForwardingNumberInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "CreateForwardingNumberDeviceInfo",
      "description": "Forwarding device information. Applicable for 'PhoneLine' type only.\nCannot be specified together with 'phoneNumber' parameter\n",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the other extension device",
          "name": "id"
        }
      ]
    },
    {
      "name": "ForwardingNumberId",
      "fields": [
        {
          "type": "string",
          "description": "Forwarding number id",
          "name": "forwardingNumberId"
        }
      ]
    },
    {
      "name": "DeleteForwardingNumbersRequest",
      "fields": [
        {
          "type": "array",
          "description": "List of forwarding number IDs",
          "items": {
            "$ref": "ForwardingNumberId"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ForwardingNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a forwarding/call flip phone number",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a forwarding/call flip phone number",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip number title",
          "name": "label"
        },
        {
          "type": "array",
          "description": "Type of option this phone number is used for. Multiple values are accepted",
          "items": {
            "type": "string",
            "enum": [
              "CallFlip",
              "CallForwarding"
            ]
          },
          "name": "features"
        },
        {
          "type": "string",
          "description": "Number assigned to the call flip phone number, corresponds to the shortcut dial number",
          "name": "flipNumber"
        },
        {
          "$ref": "CreateForwardingNumberDeviceInfo",
          "name": "device"
        },
        {
          "type": "string",
          "description": "Forwarding phone number type",
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "PhoneLine",
            "Outage",
            "Other",
            "BusinessMobilePhone",
            "ExternalCarrier",
            "ExtensionApps"
          ],
          "name": "type"
        },
        {
          "description": "Extension information. Returned only if extension type is 'ExtensionApps'",
          "$ref": "ForwardingNumberInfoExtension",
          "name": "extension"
        }
      ]
    },
    {
      "name": "CreateForwardingNumberRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a forwarding/call flip phone number",
          "name": "id"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Number assigned to the call flip phone number, corresponds to the shortcut dial number",
          "name": "flipNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/call flip phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/call flip number title",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Forwarding/call flip phone type. If specified, 'label' attribute value is ignored",
          "default": "Other",
          "enum": [
            "PhoneLine",
            "Home",
            "Mobile",
            "Work",
            "Other"
          ],
          "name": "type"
        },
        {
          "$ref": "CreateForwardingNumberDeviceInfo",
          "name": "device"
        }
      ]
    },
    {
      "name": "ForwardingNumberResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "name": "label"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CallFlip",
              "CallForwarding"
            ]
          },
          "name": "features"
        },
        {
          "pattern": "[1-8]",
          "type": "string",
          "name": "flipNumber"
        },
        {
          "type": "string",
          "description": "Forwarding phone number type",
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "PhoneLine",
            "Outage",
            "Other"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "UpdateForwardingNumberRequest",
      "fields": [
        {
          "type": "string",
          "description": "Forwarding/Call flip phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip number title",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Number assigned to the call flip phone number, corresponds to the shortcut dial number",
          "name": "flipNumber"
        },
        {
          "type": "string",
          "description": "Forwarding phone number type",
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "PhoneLine",
            "Outage",
            "Other",
            "BusinessMobilePhone",
            "ExternalCarrier"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "MeetingsResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "MeetingResponseResource"
          },
          "name": "records"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "MeetingRequestResource",
      "fields": [
        {
          "type": "string",
          "description": "Custom topic of a meeting",
          "name": "topic"
        },
        {
          "type": "string",
          "enum": [
            "Instant",
            "Scheduled",
            "ScheduledRecurring",
            "Recurring"
          ],
          "name": "meetingType"
        },
        {
          "$ref": "MeetingScheduleResource",
          "name": "schedule"
        },
        {
          "type": "string",
          "format": "password",
          "description": "Meeting password",
          "name": "password"
        },
        {
          "$ref": "HostInfoRequest",
          "name": "host"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "allowJoinBeforeHost"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "startHostVideo"
        },
        {
          "type": "boolean",
          "description": "Starting meetings with participant video on/off (true/false)",
          "default": false,
          "name": "startParticipantsVideo"
        },
        {
          "type": "boolean",
          "description": "If true, then personal user's meeting ID is applied for creation of this meeting",
          "name": "usePersonalMeetingId"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Phone",
              "ComputerAudio"
            ]
          },
          "name": "audioOptions"
        },
        {
          "$ref": "RecurrenceInfo",
          "name": "recurrence"
        },
        {
          "type": "string",
          "description": "Automatic record type",
          "default": "none",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "name": "autoRecordType"
        },
        {
          "type": "boolean",
          "description": "If true, then only signed-in users can join this meeting",
          "name": "enforceLogin"
        },
        {
          "type": "boolean",
          "description": "If true, then participants are muted on entry",
          "name": "muteParticipantsOnEntry"
        },
        {
          "type": "boolean",
          "description": "If true, then the waiting room for participants is enabled",
          "name": "enableWaitingRoom"
        },
        {
          "type": "array",
          "description": "List of global dial-in countries (eg. US, UK, AU, etc.)",
          "items": {
            "type": "string"
          },
          "name": "globalDialInCountries"
        },
        {
          "type": "string",
          "name": "alternativeHosts"
        }
      ]
    },
    {
      "name": "MeetingUserSettingsResponse",
      "fields": [
        {
          "$ref": "UserMeetingRecordingSetting",
          "name": "recording"
        },
        {
          "$ref": "ScheduleUserMeetingInfo",
          "name": "scheduleMeeting"
        },
        {
          "$ref": "TelephonyUserMeetingSettings",
          "name": "telephony"
        },
        {
          "$ref": "UserInMeetingResponse",
          "name": "inMeetings"
        }
      ]
    },
    {
      "name": "ScheduleUserMeetingInfo",
      "description": "Scheduling meeting settings locked on account level || Settings defining how to schedule user meetings",
      "fields": [
        {
          "type": "boolean",
          "description": "If true, then only signed-in users can join this meeting",
          "name": "enforceLogin"
        },
        {
          "type": "boolean",
          "description": "Starting meetings with host video on/off (true/false)",
          "name": "startHostVideo"
        },
        {
          "type": "boolean",
          "description": "Starting meetings with participant video on/off (true/false)",
          "name": "startParticipantsVideo"
        },
        {
          "type": "array",
          "description": "Determines how participants can join the audio channel of a meeting",
          "items": {
            "type": "string",
            "enum": [
              "Phone",
              "ComputerAudio",
              "ThirdParty"
            ]
          },
          "name": "audioOptions"
        },
        {
          "type": "boolean",
          "description": "Allows participants to join the meeting before the host arrives",
          "name": "allowJoinBeforeHost"
        },
        {
          "type": "boolean",
          "description": "Determines whether to use Personal Meeting ID (PMI) when scheduling a meeting",
          "name": "usePmiForScheduledMeetings"
        },
        {
          "type": "boolean",
          "description": "Determines whether to use Personal Meeting ID (PMI) when starting an instant meeting",
          "name": "usePmiForInstantMeetings"
        },
        {
          "type": "boolean",
          "description": "A password will be generated when scheduling a meeting and participants will require password to join a meeting. The Personal Meeting ID (PMI) meetings are not included",
          "name": "requirePasswordForSchedulingNewMeetings"
        },
        {
          "type": "boolean",
          "description": "Specifies whether to require a password for meetings which have already been scheduled",
          "name": "requirePasswordForScheduledMeetings"
        },
        {
          "type": "string",
          "description": "Password for already scheduled meetings. Users can set it individually",
          "name": "defaultPasswordForScheduledMeetings"
        },
        {
          "type": "boolean",
          "description": "A random password will be generated for an instant meeting, if set to `true`. If you use PMI for your instant meetings, this option will be disabled",
          "name": "requirePasswordForInstantMeetings"
        },
        {
          "type": "string",
          "description": "Specifies whether to require a password for meetings using Personal Meeting ID (PMI). The supported values are: 'none', 'all' and 'jbhOnly' (joined before host only)",
          "enum": [
            "all",
            "none",
            "jbhOnly"
          ],
          "name": "requirePasswordForPmiMeetings"
        },
        {
          "type": "string",
          "description": "The default password for Personal Meeting ID (PMI) meetings",
          "name": "pmiPassword"
        },
        {
          "type": "boolean",
          "description": "Specifies whether to generate and require a password for participants joining by phone",
          "name": "pstnPasswordProtected"
        },
        {
          "type": "boolean",
          "name": "muteParticipantsOnEntry"
        }
      ]
    },
    {
      "name": "GlobalDialInCountryResponse",
      "fields": [
        {
          "type": "string",
          "name": "countryCode"
        },
        {
          "type": "string",
          "name": "countryName"
        },
        {
          "type": "boolean",
          "name": "checked"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "order"
        }
      ]
    },
    {
      "name": "UserMeetingRecordingSetting",
      "description": "Meeting recording settings locked on account level",
      "fields": [
        {
          "type": "boolean",
          "description": "Allows hosts and participants to record a meeting to a local file",
          "name": "localRecording"
        },
        {
          "type": "boolean",
          "description": "Allows hosts to record and save a meeting/webinar in the cloud",
          "name": "cloudRecording"
        },
        {
          "type": "boolean",
          "description": "Allows to record active speaker with the shared screen",
          "default": false,
          "name": "recordSpeakerView"
        },
        {
          "type": "boolean",
          "description": "Allows to record gallery view with the shared screen",
          "default": false,
          "name": "recordGalleryView"
        },
        {
          "type": "boolean",
          "description": "Allows to record an audio-only file",
          "default": false,
          "name": "recordAudioFile"
        },
        {
          "type": "boolean",
          "description": "Allows to save chat text from a meeting",
          "default": false,
          "name": "saveChatText"
        },
        {
          "type": "boolean",
          "description": "Allows to show timestamp on video",
          "default": false,
          "name": "showTimestamp"
        },
        {
          "type": "string",
          "description": "Automatic recording (local/cloud/none) of meetings as they start",
          "default": "local",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "name": "autoRecording"
        },
        {
          "type": "string",
          "description": "Automatic deletion of cloud recordings",
          "default": "false",
          "name": "autoDeleteCmr"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "A specified number of days for automatic deletion of cloud recordings, the value range is 1-60",
          "name": "autoDeleteCmrDays"
        }
      ]
    },
    {
      "name": "UserInMeetingResponse",
      "fields": [
        {
          "type": "boolean",
          "name": "enableWaitingRoom"
        },
        {
          "type": "boolean",
          "name": "breakoutRoom"
        },
        {
          "type": "boolean",
          "name": "chat"
        },
        {
          "type": "boolean",
          "name": "polling"
        },
        {
          "type": "boolean",
          "name": "annotation"
        },
        {
          "type": "boolean",
          "name": "virtualBackground"
        },
        {
          "type": "boolean",
          "name": "screenSharing"
        },
        {
          "type": "boolean",
          "name": "requestPermissionToUnmute"
        }
      ]
    },
    {
      "name": "TelephonyUserMeetingSettings",
      "fields": [
        {
          "type": "boolean",
          "description": "ThirdParty audio option",
          "name": "thirdPartyAudio"
        },
        {
          "type": "boolean",
          "description": "Users can join the meeting using the existing 3rd party audio configuration",
          "name": "audioConferenceInfo"
        },
        {
          "type": "array",
          "items": {
            "$ref": "GlobalDialInCountryResponse"
          },
          "name": "globalDialCountries"
        }
      ]
    },
    {
      "name": "PublicMeetingInvitationResponse",
      "fields": [
        {
          "type": "string",
          "description": "Meeting invitation",
          "name": "invitation"
        }
      ]
    },
    {
      "name": "MeetingsCountryResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Country calling code defined by [ITU-T](http://en.wikipedia.org/wiki/ITU-T)\nrecommendations, [E.123](http://en.wikipedia.org/wiki/E.123) and\n[E.164](http://en.wikipedia.org/wiki/E.164).\nSee also [Calling Codes](http://en.wikipedia.org/wiki/List_of_country_calling_codes)\n",
          "name": "callingCode"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "emergencyCalling"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "numberSelling"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "loginAllowed"
        }
      ]
    },
    {
      "name": "MeetingExternalUserInfoResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "userId"
        },
        {
          "type": "string",
          "name": "accountId"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "userType"
        },
        {
          "type": "string",
          "name": "userToken"
        },
        {
          "type": "string",
          "name": "hostKey"
        },
        {
          "type": "string",
          "name": "personalMeetingId"
        },
        {
          "type": "string",
          "description": "Link to the user's personal meeting room, used as an alias for personal meeting URL (with personal meeting ID)",
          "example": "https://meetings.ringcentral.com/my/jsmith",
          "name": "personalLink"
        },
        {
          "type": "string",
          "name": "personalLinkName"
        },
        {
          "type": "boolean",
          "description": "Enables using personal meeting ID for instant meetings",
          "default": false,
          "name": "usePmiForInstantMeetings"
        }
      ]
    },
    {
      "name": "DialInNumberResource",
      "fields": [
        {
          "type": "string",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "name": "formattedNumber"
        },
        {
          "type": "string",
          "name": "location"
        },
        {
          "$ref": "MeetingsCountryResource",
          "name": "country"
        }
      ]
    },
    {
      "name": "MeetingServiceInfoResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "format": "uri",
          "name": "supportUri"
        },
        {
          "type": "string",
          "format": "uri",
          "name": "intlDialInNumbersUri"
        },
        {
          "$ref": "MeetingExternalUserInfoResource",
          "name": "externalUserInfo"
        },
        {
          "type": "array",
          "items": {
            "$ref": "DialInNumberResource"
          },
          "name": "dialInNumbers"
        }
      ]
    },
    {
      "name": "MeetingServiceInfoRequest",
      "fields": [
        {
          "$ref": "MeetingExternalUserInfoResource",
          "name": "externalUserInfo"
        }
      ]
    },
    {
      "name": "DetailedExtensionPresenceWithSIPEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Telephony presence status. Returned if telephony status is changed.",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "array",
          "description": "List of the latest 7 active calls on extension",
          "items": {
            "$ref": "ActiveCallInfo"
          },
          "name": "activeCalls"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Order number of a notification to state the chronology",
          "name": "sequence"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        },
        {
          "type": "string",
          "description": "User-defined presence status (as previously published by the user)",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "description": "Meetings presence status",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "name": "meetingStatus"
        },
        {
          "type": "string",
          "description": "Extended DnD (Do not Disturb) status",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly"
          ],
          "name": "dndStatus"
        },
        {
          "type": "boolean",
          "description": "If `true` enables other extensions to see the extension presence status",
          "name": "allowSeeMyPresence"
        },
        {
          "type": "boolean",
          "description": "If `true` enables to ring extension phone, if any user monitored by this extension is ringing",
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "description": "If `true` enables the extension user to pick up a monitored line on hold",
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Total number of active calls on extension at the present moment",
          "name": "totalActiveCalls"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "IncomingCallEvent",
      "fields": [
        {
          "$ref": "APSInfo",
          "name": "aps"
        },
        {
          "type": "string",
          "description": "Event filter name",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of a call action in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example 2016-03-10T18:07:52.534Z",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Calling action, for example 'StartRing'",
          "name": "action"
        },
        {
          "type": "string",
          "description": "Identifier of a call session",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Identifier of a server",
          "name": "serverId"
        },
        {
          "type": "string",
          "description": "Phone number of a caller. For GCM transport type '_from' property should be used",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Caller name",
          "name": "fromName"
        },
        {
          "type": "string",
          "description": "Phone number of a callee",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Callee name",
          "name": "toName"
        },
        {
          "type": "string",
          "description": "Unique identifier of a session",
          "name": "sid"
        },
        {
          "type": "string",
          "description": "SIP proxy registration name",
          "name": "toUrl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvlExt"
        },
        {
          "type": "string",
          "description": "File containing recorded caller name",
          "name": "recUrl"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Notification lifetime value in seconds, the default value is 30 seconds",
          "name": "pn_ttl"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "ExtensionPresenceEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter name",
          "name": "event"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "ExtensionPresenceEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "DetailedExtensionPresenceWithSIPEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter name",
          "name": "event"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "DetailedExtensionPresenceWithSIPEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "APSInfo",
      "description": "APS (Apple Push Service) information/ priority data",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "description": "If the value is '1' then notification is turned on even if the application is in background",
          "name": "content-available"
        }
      ]
    },
    {
      "name": "APNSInfo",
      "description": "APNS (Apple Push Notification Service) information",
      "fields": [
        {
          "$ref": "APSInfo",
          "name": "aps"
        }
      ]
    },
    {
      "name": "DetailedExtensionPresenceEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Telephony presence status. Returned if telephony status is changed.",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "array",
          "description": "List of the latest 7 active calls on extension",
          "items": {
            "$ref": "ActiveCallInfoWithoutSIP"
          },
          "name": "activeCalls"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Order number of a notification to state the chronology",
          "name": "sequence"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        },
        {
          "type": "string",
          "description": "User-defined presence status (as previously published by the user)",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "description": "Meetings presence status",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "name": "meetingStatus"
        },
        {
          "type": "string",
          "description": "Extended DnD (Do not Disturb) status",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly"
          ],
          "name": "dndStatus"
        },
        {
          "type": "boolean",
          "description": "If `true` enables other extensions to see the extension presence status",
          "name": "allowSeeMyPresence"
        },
        {
          "type": "boolean",
          "description": "If `true` enables to ring extension phone, if any user monitored by this extension is ringing",
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "description": "If `true` enables the extension user to pick up a monitored line on hold",
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Total number of active calls on extension at the present moment",
          "name": "totalActiveCalls"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "PresenceInfoRequest",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly",
            "DoNotAcceptAnyCalls",
            "Unknown"
          ],
          "name": "dndStatus"
        },
        {
          "maxLength": 75,
          "minLength": 0,
          "type": "string",
          "name": "message"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "allowSeeMyPresence"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "string",
          "description": "Configures the user presence visibility. When the `allowSeeMyPresence` parameter is set to `true`,\nthe following visibility options are supported via this parameter - All, None, PermittedUsers\n",
          "enum": [
            "All",
            "None",
            "PermittedUsers"
          ],
          "name": "callerIdVisibility"
        }
      ]
    },
    {
      "name": "ActiveCallInfoWithoutSIP",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Call direction",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "boolean",
          "description": "Identifies if a call belongs to the call queue",
          "name": "queueCall"
        },
        {
          "type": "string",
          "description": "Phone number or extension number of a caller. For GCM transport type '_from' property should be used",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Name of a caller",
          "name": "fromName"
        },
        {
          "type": "string",
          "description": "Phone number or extension number of a callee",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Name of a callee",
          "name": "toName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call party",
          "name": "partyId"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Time when the call is actually started",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call session",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Telephony identifier of a call session",
          "name": "telephonySessionId"
        },
        {
          "type": "string",
          "description": "Telephony call status",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "string",
          "description": "Type of call termination. Supported for calls in 'NoCall' status. If the returned termination type is 'intermediate' it means the call is not actually ended, the connection is established on one of the devices",
          "enum": [
            "final",
            "intermediate"
          ],
          "name": "terminationType"
        },
        {
          "$ref": "CallInfoCQ",
          "name": "callInfo"
        }
      ]
    },
    {
      "name": "ExtensionPresenceEventBody",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension. Optional parameter",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Telephony presence status. Returned if telephony status is changed.",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Order number of a notification to state the chronology",
          "name": "sequence"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        },
        {
          "type": "string",
          "description": "User-defined presence status (as previously published by the user)",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "description": "Extended DnD (Do not Disturb) status",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly"
          ],
          "name": "dndStatus"
        },
        {
          "type": "boolean",
          "description": "If `true` enables other extensions to see the extension presence status",
          "name": "allowSeeMyPresence"
        },
        {
          "type": "boolean",
          "description": "If `true` enables to ring extension phone, if any user monitored by this extension is ringing",
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "description": "If `true` enables the extension user to pick up a monitored line on hold",
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "PresenceInfoResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the presence resource",
          "name": "uri"
        },
        {
          "type": "string",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly",
            "DoNotAcceptAnyCalls",
            "Unknown"
          ],
          "name": "dndStatus"
        },
        {
          "maxLength": 75,
          "minLength": 0,
          "type": "string",
          "name": "message"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "allowSeeMyPresence"
        },
        {
          "type": "string",
          "description": "Configures the user presence visibility. When the `allowSeeMyPresence` parameter is set to `true`,\nthe following visibility options are supported via this parameter - All, None, PermittedUsers\n",
          "enum": [
            "All",
            "None",
            "PermittedUsers"
          ],
          "name": "callerIdVisibility"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ActiveCallInfo"
          },
          "name": "activeCalls"
        },
        {
          "$ref": "GetPresenceExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Meetings presence status",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "name": "meetingStatus"
        },
        {
          "type": "string",
          "description": "Telephony presence status. Returned if telephony status is changed",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        }
      ]
    },
    {
      "name": "DetailedExtensionPresenceEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter name",
          "name": "event"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "DetailedExtensionPresenceEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "MissedCallEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "$ref": "APNSInfo",
          "name": "pn_apns"
        },
        {
          "type": "string",
          "description": "Event filter name",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of a call action in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example 2016-03-10T18:07:52.534Z",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Calling action, for example 'StartRing'",
          "name": "action"
        },
        {
          "type": "string",
          "description": "Identifier of a call session",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Identifier of a server",
          "name": "serverId"
        },
        {
          "type": "string",
          "description": "Phone number of a caller. For GCM transport type '_from' property should be used",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Caller name",
          "name": "fromName"
        },
        {
          "type": "string",
          "description": "Phone number of a callee",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Callee name",
          "name": "toName"
        },
        {
          "type": "string",
          "description": "Unique identifier of a session",
          "name": "sid"
        },
        {
          "type": "string",
          "description": "SIP proxy registration name",
          "name": "toUrl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvlExt"
        },
        {
          "type": "string",
          "description": "File containing recorded caller name",
          "name": "recUrl"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Notification lifetime value in seconds, the default value is 30 seconds",
          "name": "pn_ttl"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "FaxResponseTo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a fax recipient",
          "name": "recipientId"
        },
        {
          "type": "string",
          "description": "Phone number in E.164 (with '+' sign) format",
          "example": "+18661234567",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Name of a fax recipient listed on a fax cover page",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined\nfrom phoneNumber. This property is filled only when phoneNumber is not\nempty and server can calculate location information from it (for example,\nthis information is unavailable for US toll-free numbers)\n",
          "name": "location"
        }
      ]
    },
    {
      "name": "MessageAttachmentInfoIntId",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a message attachment",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a message attachment",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Type of message attachment",
          "enum": [
            "AudioRecording",
            "AudioTranscription",
            "Text",
            "SourceDocument",
            "RenderedDocument",
            "MmsAttachment"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "MIME type for a given attachment, for instance 'audio/wav'",
          "name": "contentType"
        },
        {
          "type": "string",
          "description": "Name of a file attached",
          "name": "filename"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Size of an attachment in bytes",
          "name": "size"
        }
      ]
    },
    {
      "name": "FaxRequestTo",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 (with '+' sign) format",
          "example": "+18661234567",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Name of a fax recipient that will be listed on a fax cover page",
          "name": "name"
        }
      ]
    },
    {
      "name": "FaxResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a message",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a message",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Message type - 'Fax'",
          "enum": [
            "Fax"
          ],
          "name": "type"
        },
        {
          "$ref": "MessageStoreCallerInfoResponseFrom",
          "name": "from"
        },
        {
          "type": "array",
          "description": "Recipient information",
          "items": {
            "$ref": "FaxResponseTo"
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Message creation date/time in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "description": "Message read status",
          "type": "string",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "Message priority",
          "enum": [
            "Normal",
            "High"
          ],
          "name": "priority"
        },
        {
          "type": "array",
          "description": "List of message attachments",
          "items": {
            "$ref": "MessageAttachmentInfoIntId"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n",
          "name": "direction"
        },
        {
          "type": "string",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n",
          "name": "availability"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "string",
          "description": "Fax only. Resolution of a fax message. 'High' for black and\nwhite image scanned at 200 dpi, 'Low' for black and white image scanned\nat 100 dpi\n",
          "enum": [
            "High",
            "Low"
          ],
          "name": "faxResolution"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Page count in a fax message",
          "name": "faxPageCount"
        },
        {
          "type": "string",
          "description": "Date/time when the message was modified on server in ISO 8601\nformat including timezone, for example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Cover page identifier. If `coverIndex` is set to '0' (zero), a cover\npage is not attached. For a list of available cover page identifiers\n(1-13) please call the Fax Cover Pages method. If not specified,\nthe default cover page is attached (which is configured in\n'Outbound Fax Settings')\n",
          "name": "coverIndex"
        },
        {
          "type": "string",
          "description": "Cover page text, entered by a fax sender and printed on a\ncover page. Maximum length is limited to 1024 symbols\n",
          "name": "coverPageText"
        }
      ]
    },
    {
      "name": "RingOutStatusInfo",
      "description": "RingOut status information",
      "fields": [
        {
          "type": "string",
          "description": "Status of a call",
          "enum": [
            "Invalid",
            "Success",
            "InProgress",
            "Busy",
            "NoAnswer",
            "Rejected",
            "GenericError",
            "Finished",
            "InternationalDisabled",
            "DestinationBlocked",
            "NotEnoughFunds",
            "NoSuchUser"
          ],
          "name": "callStatus"
        },
        {
          "type": "string",
          "description": "Status of a calling party",
          "enum": [
            "Invalid",
            "Success",
            "InProgress",
            "Busy",
            "NoAnswer",
            "Rejected",
            "GenericError",
            "Finished",
            "InternationalDisabled",
            "DestinationBlocked",
            "NotEnoughFunds",
            "NoSuchUser"
          ],
          "name": "callerStatus"
        },
        {
          "type": "string",
          "description": "Status of a called party",
          "enum": [
            "Invalid",
            "Success",
            "InProgress",
            "Busy",
            "NoAnswer",
            "Rejected",
            "GenericError",
            "Finished",
            "InternationalDisabled",
            "DestinationBlocked",
            "NotEnoughFunds",
            "NoSuchUser"
          ],
          "name": "calleeStatus"
        }
      ]
    },
    {
      "name": "MakeRingOutCallerInfoRequestTo",
      "description": "Phone number of a called party. This number corresponds to the\n2nd leg of a RingOut call\n",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "GetRingOutStatusResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a RingOut call",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a RingOut call resource",
          "format": "uri",
          "name": "uri"
        },
        {
          "$ref": "RingOutStatusInfo",
          "name": "status"
        }
      ]
    },
    {
      "name": "MakeRingOutRequest",
      "fields": [
        {
          "$ref": "MakeRingOutCallerInfoRequestFrom",
          "name": "from",
          "required": true
        },
        {
          "$ref": "MakeRingOutCallerInfoRequestTo",
          "name": "to",
          "required": true
        },
        {
          "$ref": "MakeRingOutCallerIdInfo",
          "name": "callerId",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Audio prompt that a calling party hears when a call\nis connected\n",
          "name": "playPrompt",
          "required": false
        },
        {
          "$ref": "MakeRingOutCountryInfo",
          "name": "country",
          "required": false
        }
      ]
    },
    {
      "name": "MakeRingOutCallerInfoRequestFrom",
      "description": "Phone number of a caller. This number corresponds to the 1st\nleg of a RingOut call. This number can be one of the user's configured forwarding\nnumbers or an arbitrary number\n",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Internal identifier of a forwarding number; returned in response\nas an 'id' field value. Can be specified instead of a `phoneNumber` attribute\n",
          "name": "forwardingNumberId"
        }
      ]
    },
    {
      "name": "MakeRingOutCountryInfo",
      "description": "Optional. Dialing plan country data. If not specified, then an extension\nhome country is applied by default\n",
      "fields": [
        {
          "type": "string",
          "description": "Dialing plan country identifier",
          "name": "id"
        }
      ]
    },
    {
      "name": "MakeRingOutCallerIdInfo",
      "description": "Phone number which will be displayed to the called party",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "BusinessSiteCollectionResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "RolesBusinessSiteResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "RolesCountryResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Country calling code defined by [ITU-T](http://en.wikipedia.org/wiki/ITU-T)\nrecommendations, [E.123](http://en.wikipedia.org/wiki/E.123) and\n[E.164](http://en.wikipedia.org/wiki/E.164).\nSee also [Calling Codes](http://en.wikipedia.org/wiki/List_of_country_calling_codes)\n",
          "name": "callingCode"
        },
        {
          "type": "boolean",
          "name": "emergencyCalling"
        },
        {
          "type": "boolean",
          "name": "numberSelling"
        },
        {
          "type": "boolean",
          "name": "loginAllowed"
        },
        {
          "type": "boolean",
          "name": "freeSoftphoneLine"
        },
        {
          "type": "boolean",
          "name": "signupAllowed"
        }
      ]
    },
    {
      "name": "BusinessSiteCollectionRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "RolesBusinessSiteResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "RolesBusinessSiteResource",
      "fields": [
        {
          "type": "string",
          "description": "Link to a business site resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "string",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "format": "email",
          "name": "email",
          "required": false
        },
        {
          "type": "string",
          "name": "code",
          "required": false
        },
        {
          "type": "string",
          "name": "name",
          "required": false
        },
        {
          "type": "string",
          "name": "extensionNumber",
          "required": false
        },
        {
          "type": "string",
          "name": "callerIdName",
          "required": false
        },
        {
          "$ref": "BasicExtensionInfoResource",
          "name": "operator",
          "required": false
        },
        {
          "$ref": "RolesRegionalSettingsResource",
          "name": "regionalSettings",
          "required": false
        },
        {
          "$ref": "ContactAddressInfoResource",
          "name": "businessAddress",
          "required": false
        }
      ]
    },
    {
      "name": "BasicExtensionInfoResource",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "RolesTimezoneResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "description"
        },
        {
          "type": "string",
          "name": "bias"
        }
      ]
    },
    {
      "name": "RolesLanguageResource",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "localeCode"
        }
      ]
    },
    {
      "name": "CurrencyResource",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "code"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "symbol"
        },
        {
          "type": "string",
          "name": "minorSymbol"
        }
      ]
    },
    {
      "name": "ContactAddressInfoResource",
      "fields": [
        {
          "type": "string",
          "name": "street"
        },
        {
          "type": "string",
          "name": "city"
        },
        {
          "type": "string",
          "name": "state"
        },
        {
          "type": "string",
          "name": "zip"
        },
        {
          "type": "string",
          "name": "country"
        }
      ]
    },
    {
      "name": "RolesRegionalSettingsResource",
      "fields": [
        {
          "$ref": "RolesTimezoneResource",
          "name": "timezone"
        },
        {
          "$ref": "RolesCountryResource",
          "name": "homeCountry"
        },
        {
          "$ref": "RolesLanguageResource",
          "name": "language"
        },
        {
          "$ref": "RolesLanguageResource",
          "name": "greetingLanguage"
        },
        {
          "$ref": "RolesLanguageResource",
          "name": "formattingLocale"
        },
        {
          "type": "string",
          "description": "Time format (12-hours or 24-hours).",
          "enum": [
            "12h",
            "24h"
          ],
          "default": "12h",
          "name": "timeFormat"
        },
        {
          "$ref": "CurrencyResource",
          "name": "currency"
        }
      ]
    },
    {
      "name": "UserContactsGroupsInfo",
      "description": "Information on address book groups",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the list of address book groups",
          "name": "uri"
        }
      ]
    },
    {
      "name": "UserContactsNavigationInfoUri",
      "description": "Canonical URI for a corresponding page of a list",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        }
      ]
    },
    {
      "name": "ContactList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the list of user personal contacts",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of personal contacts from the extension address book\n",
          "items": {
            "$ref": "PersonalContactResource"
          },
          "name": "records"
        },
        {
          "$ref": "UserContactsNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "UserContactsPagingInfo",
          "name": "paging"
        },
        {
          "$ref": "UserContactsGroupsInfo",
          "name": "groups"
        }
      ]
    },
    {
      "name": "PersonalContactRequest",
      "fields": [
        {
          "type": "string",
          "description": "First name of a contact",
          "example": "Charlie",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last name of a contact",
          "example": "Williams",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Middle name of a contact",
          "example": "J",
          "name": "middleName"
        },
        {
          "type": "string",
          "description": "Nick name of a contact",
          "example": "The Boss",
          "name": "nickName"
        },
        {
          "type": "string",
          "description": "Company name of a contact",
          "example": "Example, Inc.",
          "name": "company"
        },
        {
          "type": "string",
          "description": "Job title of a contact",
          "example": "CEO",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of a contact",
          "example": "charlie.williams@example.com",
          "name": "email"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Second email of a contact",
          "example": "charlie-example@gmail.com",
          "name": "email2"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Third email of a contact",
          "example": "theboss-example@hotmail.com",
          "name": "email3"
        },
        {
          "type": "string",
          "description": "Date of birth of a contact",
          "format": "date-time",
          "name": "birthday"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Contact home page URL",
          "example": "http://www.example.com",
          "name": "webPage"
        },
        {
          "type": "string",
          "description": "Notes for a contact",
          "example": "#1 Customer",
          "name": "notes"
        },
        {
          "type": "string",
          "description": "Home phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone"
        },
        {
          "type": "string",
          "description": "Second home phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone2"
        },
        {
          "type": "string",
          "description": "Business phone of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "Second business phone of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone2"
        },
        {
          "type": "string",
          "description": "Mobile phone of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "mobilePhone"
        },
        {
          "type": "string",
          "description": "Business fax number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessFax"
        },
        {
          "type": "string",
          "description": "Company number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "companyPhone"
        },
        {
          "type": "string",
          "description": "Phone number of a contact assistant in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "assistantPhone"
        },
        {
          "type": "string",
          "description": "Car phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "carPhone"
        },
        {
          "type": "string",
          "description": "Other phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherPhone"
        },
        {
          "type": "string",
          "description": "Other fax number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherFax"
        },
        {
          "type": "string",
          "description": "Callback phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "callbackPhone"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "homeAddress"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "businessAddress"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "otherAddress"
        },
        {
          "type": "string",
          "description": "Contact ringtone. Max number of symbols is 64",
          "name": "ringtoneIndex"
        }
      ]
    },
    {
      "name": "ContactAddressInfo",
      "fields": [
        {
          "type": "string",
          "description": "Street address",
          "example": "20 Davis Dr.",
          "name": "street"
        },
        {
          "type": "string",
          "description": "City name",
          "example": "Belmont",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "State/province name",
          "example": "CA",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Zip/Postal code",
          "example": "94002",
          "name": "zip"
        }
      ]
    },
    {
      "name": "PersonalContactResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a contact",
          "example": "https://platform.ringcentral.com/restapi/v1.0/account/230919004/extension/230919004/address-book/contact/623045004",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "This property has a special meaning only on Address Book Sync\n(e.g. a contact can be `Deleted`). For simple contact list reading it\nhas always the default value - `Alive`\n",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "name": "availability"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of a contact",
          "example": "charlie.williams@example.com",
          "name": "email"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of availability contact",
          "example": 623045004,
          "name": "id"
        },
        {
          "type": "string",
          "description": "Notes for a contact",
          "example": "#1 Customer",
          "name": "notes"
        },
        {
          "type": "string",
          "description": "Company name of a contact",
          "example": "Example, Inc.",
          "name": "company"
        },
        {
          "type": "string",
          "description": "First name of a contact",
          "example": "Charlie",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last name of a contact",
          "example": "Williams",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Job title of a contact",
          "example": "CEO",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "description": "Date of birth of a contact",
          "format": "date-time",
          "name": "birthday"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "The contact home page URL",
          "example": "http://www.example.com",
          "name": "webPage"
        },
        {
          "type": "string",
          "description": "Middle name of a contact",
          "example": "J",
          "name": "middleName"
        },
        {
          "type": "string",
          "description": "Nick name of a contact",
          "example": "The Boss",
          "name": "nickName"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Second email of a contact",
          "example": "charlie-example@gmail.com",
          "name": "email2"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Third email of a contact",
          "example": "theboss-example@hotmail.com",
          "name": "email3"
        },
        {
          "type": "string",
          "description": "Home phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone"
        },
        {
          "type": "string",
          "description": "Second home phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone2"
        },
        {
          "type": "string",
          "description": "Business phone of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "Second business phone of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone2"
        },
        {
          "type": "string",
          "description": "Mobile phone of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "mobilePhone"
        },
        {
          "type": "string",
          "description": "Business fax number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessFax"
        },
        {
          "type": "string",
          "description": "Company number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "companyPhone"
        },
        {
          "type": "string",
          "description": "Phone number of a contact assistant in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "assistantPhone"
        },
        {
          "type": "string",
          "description": "Car phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "carPhone"
        },
        {
          "type": "string",
          "description": "Other phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherPhone"
        },
        {
          "type": "string",
          "description": "Other fax number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherFax"
        },
        {
          "type": "string",
          "description": "Callback phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "callbackPhone"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "businessAddress"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "homeAddress"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "otherAddress"
        },
        {
          "type": "string",
          "description": "Contact ringtone. Max number of symbols is 64",
          "name": "ringtoneIndex"
        }
      ]
    },
    {
      "name": "UserContactsNavigationInfo",
      "description": "Information on navigation",
      "fields": [
        {
          "$ref": "UserContactsNavigationInfoUri",
          "name": "firstPage"
        },
        {
          "$ref": "UserContactsNavigationInfoUri",
          "name": "nextPage"
        },
        {
          "$ref": "UserContactsNavigationInfoUri",
          "name": "previousPage"
        },
        {
          "$ref": "UserContactsNavigationInfoUri",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "UserContactsPagingInfo",
      "description": "Information on paging",
      "fields": [
        {
          "type": "integer",
          "description": "Current page number. 1-indexed, so the first page is 1\nby default. May be omitted if the result is empty (because non-existent page\nwas specified or perPage=0 was requested)\n",
          "format": "int32",
          "name": "page"
        },
        {
          "type": "integer",
          "description": "Current page size, describes how many items each page contains.\nDefault value is 100. Maximum value is 1000. If perPage value in the request\nis greater than 1000, the maximum value (1000) is applied\n",
          "format": "int32",
          "name": "perPage"
        },
        {
          "type": "integer",
          "description": "Zero-based number of the first element on the current page.\nOmitted if a page is omitted or the result is empty\n",
          "format": "int32",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "description": "Zero-based index of the last element on the current page.\nOmitted if a page is omitted or the result is empty\n",
          "format": "int32",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "description": "Total number of pages in a dataset. May be omitted for\nsome resources due to performance reasons\n",
          "format": "int32",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "description": "Total number of elements in a dataset. May be omitted for\nsome resource due to performance reasons\n",
          "format": "int32",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "AssistedUserResource",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        }
      ]
    },
    {
      "name": "AssistedUsersResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "AssistedUserResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "AssistantsResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "AssistantResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "AssistantResource",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        }
      ]
    },
    {
      "name": "SmsRequestCountryInfo",
      "description": "Target number country information. Either `id` or `isoCode` can be specified.",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "isoCode"
        }
      ]
    },
    {
      "name": "GetSMSMessageInfoResponse",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a message",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of message attachments",
          "items": {
            "$ref": "MessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n",
          "name": "availability"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "SMS and Pager only. Identifier of a conversation that the message\nbelongs to\n",
          "name": "conversationId"
        },
        {
          "$ref": "ConversationInfo",
          "name": "conversation"
        },
        {
          "type": "string",
          "description": "Message creation date/time in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n",
          "name": "direction"
        },
        {
          "$ref": "MessageStoreCallerInfoResponseFrom",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Date/time when the message was modified on server in ISO\n8601 format including timezone, for example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "string",
          "description": "Message priority",
          "enum": [
            "Normal",
            "High"
          ],
          "name": "priority"
        },
        {
          "description": "Message read status",
          "type": "string",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "SMS only. The date/time when outbound SMS was delivered to\nrecipient's handset in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z. It is filled only if\nthe carrier sends a delivery receipt to RingCentral\n",
          "format": "date-time",
          "name": "smsDeliveryTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "SMS only. Number of attempts made to send an outbound SMS to\nthe Gateway (if Gateway is temporary unavailable)\n",
          "name": "smsSendingAttemptsCount"
        },
        {
          "type": "string",
          "description": "Message subject. For SMS and Pager messages it replicates message\ntext which is also returned as an attachment\n",
          "name": "subject"
        },
        {
          "type": "array",
          "description": "Recipient information",
          "items": {
            "$ref": "MessageStoreCallerInfoResponseTo"
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Message type",
          "enum": [
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "CreateSMSMessage",
      "fields": [
        {
          "$ref": "MessageStoreCallerInfoRequest",
          "name": "from",
          "required": true
        },
        {
          "type": "array",
          "description": "Message receiver(s) information. The `phoneNumber` value is required",
          "items": {
            "$ref": "MessageStoreCallerInfoRequest"
          },
          "name": "to",
          "required": true
        },
        {
          "type": "string",
          "description": "Text of a message. Max length is 1000 symbols (2-byte UTF-16\nencoded). If a character is encoded in 4 bytes in UTF-16 it is treated\nas 2 characters, thus restricting the maximum message length to 500 symbols\n",
          "name": "text",
          "required": true
        },
        {
          "$ref": "SmsRequestCountryInfo",
          "name": "country",
          "required": false
        }
      ]
    },
    {
      "name": "MessageStoreCallerInfoRequest",
      "description": "Message sender information. The `phoneNumber` value should be one\nthe account phone numbers allowed to send the current type of messages\n",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format",
          "name": "phoneNumber",
          "required": true
        }
      ]
    },
    {
      "name": "AssignedRolesResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "AssignedRoleResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "NotificationSettingsUpdateRequest",
      "fields": [
        {
          "type": "array",
          "description": "List of notification recipient email addresses. Should not be empty\nif 'includeManagers' parameter is set to false\n",
          "items": {
            "type": "string"
          },
          "name": "emailAddresses"
        },
        {
          "type": "array",
          "description": "List of notification recipient email addresses",
          "items": {
            "type": "string"
          },
          "name": "smsEmailAddresses"
        },
        {
          "type": "boolean",
          "description": "Specifies notifications settings mode. If `true` then advanced\nmode is on, it allows using different emails and/or phone numbers for\neach notification type. If `false` then basic mode is on. Advanced mode\nsettings are returned in both modes, if specified once, but if basic mode\nis switched on, they are not applied\n",
          "name": "advancedMode"
        },
        {
          "$ref": "VoicemailsInfo",
          "name": "voicemails"
        },
        {
          "$ref": "InboundFaxesInfo",
          "name": "inboundFaxes"
        },
        {
          "$ref": "OutboundFaxesInfo",
          "name": "outboundFaxes"
        },
        {
          "$ref": "InboundTextsInfo",
          "name": "inboundTexts"
        },
        {
          "$ref": "MissedCallsInfo",
          "name": "missedCalls"
        },
        {
          "type": "boolean",
          "description": "Specifies if managers' emails are included in the list of emails to\nwhich notifications are sent. If not specified, then the value is `true`\n",
          "default": true,
          "name": "includeManagers"
        }
      ]
    },
    {
      "name": "NotificationSettings",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of notifications settings resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of extensions specified as email notification recipients.\nReturned only for call queues where queue managers are assigned as user\nextensions.\n",
          "items": {
            "$ref": "EmailRecipientInfo"
          },
          "name": "emailRecipients"
        },
        {
          "type": "array",
          "description": "List of notification recipient email addresses\n",
          "items": {
            "type": "string"
          },
          "name": "emailAddresses"
        },
        {
          "type": "boolean",
          "description": "Specifies if managers' emails are included in the list of emails to which\nnotifications are sent\n",
          "name": "includeManagers"
        },
        {
          "type": "boolean",
          "description": "Specifies if sms recipients' emails are included in the list of emails to which\nnotifications are sent\n",
          "name": "includeSmsRecipients"
        },
        {
          "type": "array",
          "description": "List of sms recipients specified for call queue. Returned only for call queue extension\n",
          "items": {
            "$ref": "EmailRecipientInfo"
          },
          "name": "smsRecipients"
        },
        {
          "type": "array",
          "description": "List of notification recipient email addresses",
          "items": {
            "type": "string"
          },
          "name": "smsEmailAddresses"
        },
        {
          "type": "boolean",
          "description": "Specifies notifications settings mode. If `true` then advanced\nmode is on, it allows using different emails and/or phone numbers for\neach notification type. If `false` then basic mode is on. Advanced mode\nsettings are returned in both modes, if specified once, but if basic mode\nis switched on, they are not applied\n",
          "name": "advancedMode"
        },
        {
          "$ref": "VoicemailsInfo",
          "name": "voicemails"
        },
        {
          "$ref": "InboundFaxesInfo",
          "name": "inboundFaxes"
        },
        {
          "$ref": "OutboundFaxesInfo",
          "name": "outboundFaxes"
        },
        {
          "$ref": "InboundTextsInfo",
          "name": "inboundTexts"
        },
        {
          "$ref": "MissedCallsInfo",
          "name": "missedCalls"
        }
      ]
    },
    {
      "name": "InboundFaxesInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Email notification flag",
          "name": "notifyByEmail"
        },
        {
          "type": "boolean",
          "description": "SMS notification flag",
          "name": "notifyBySms"
        },
        {
          "type": "array",
          "description": "List of recipient email addresses for inbound fax notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
          "items": {
            "type": "string"
          },
          "name": "advancedEmailAddresses"
        },
        {
          "type": "array",
          "description": "List of recipient phone numbers for inbound fax notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
          "items": {
            "type": "string"
          },
          "name": "advancedSmsEmailAddresses"
        },
        {
          "type": "boolean",
          "description": "Indicates whether fax should be attached to email\n",
          "name": "includeAttachment"
        },
        {
          "type": "boolean",
          "description": "Indicates whether email should be automatically marked as read\n",
          "name": "markAsRead"
        }
      ]
    },
    {
      "name": "InboundTextsInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Email notification flag",
          "name": "notifyByEmail"
        },
        {
          "type": "boolean",
          "description": "SMS notification flag",
          "name": "notifyBySms"
        },
        {
          "type": "array",
          "description": "List of recipient email addresses for inbound text message\nnotifications. Returned if specified, in both modes (advanced/basic).\nApplied in advanced mode only\n",
          "items": {
            "type": "string"
          },
          "name": "advancedEmailAddresses"
        },
        {
          "type": "array",
          "description": "List of recipient phone numbers for inbound text message notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
          "items": {
            "type": "string"
          },
          "name": "advancedSmsEmailAddresses"
        }
      ]
    },
    {
      "name": "OutboundFaxesInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Email notification flag",
          "name": "notifyByEmail"
        },
        {
          "type": "boolean",
          "description": "SMS notification flag",
          "name": "notifyBySms"
        },
        {
          "type": "array",
          "description": "List of recipient email addresses for outbound fax notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
          "items": {
            "type": "string"
          },
          "name": "advancedEmailAddresses"
        },
        {
          "type": "array",
          "description": "List of recipient phone numbers for outbound fax notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
          "items": {
            "type": "string"
          },
          "name": "advancedSmsEmailAddresses"
        }
      ]
    },
    {
      "name": "MissedCallsInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Email notification flag",
          "name": "notifyByEmail"
        },
        {
          "type": "boolean",
          "description": "SMS notification flag",
          "name": "notifyBySms"
        },
        {
          "type": "array",
          "description": "List of recipient email addresses for missed call notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
          "items": {
            "type": "string"
          },
          "name": "advancedEmailAddresses"
        },
        {
          "type": "array",
          "description": "List of recipient phone numbers for missed call notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
          "items": {
            "type": "string"
          },
          "name": "advancedSmsEmailAddresses"
        }
      ]
    },
    {
      "name": "VoicemailsInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Email notification flag",
          "name": "notifyByEmail"
        },
        {
          "type": "boolean",
          "description": "SMS notification flag",
          "name": "notifyBySms"
        },
        {
          "type": "array",
          "description": "List of recipient email addresses for voicemail notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
          "items": {
            "type": "string"
          },
          "name": "advancedEmailAddresses"
        },
        {
          "type": "array",
          "description": "List of recipient phone numbers for voicemail notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
          "items": {
            "type": "string"
          },
          "name": "advancedSmsEmailAddresses"
        },
        {
          "type": "boolean",
          "description": "Indicates whether voicemail should be attached to email\n",
          "name": "includeAttachment"
        },
        {
          "type": "boolean",
          "description": "Specifies whether to add voicemail transcription or not\n",
          "name": "includeTranscription"
        },
        {
          "type": "boolean",
          "description": "Indicates whether a voicemail should be automatically marked\nas read\n",
          "name": "markAsRead"
        }
      ]
    },
    {
      "name": "EmailRecipientInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "User full name",
          "name": "fullName"
        },
        {
          "type": "string",
          "description": "User extension number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Extension status",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "description": "List of user email addresses from extension notification settings.\nBy default, main email address from contact information is returned\n",
          "items": {
            "type": "string"
          },
          "name": "emailAddresses"
        },
        {
          "type": "string",
          "description": "Call queue manager permission",
          "enum": [
            "FullAccess",
            "Messages",
            "MemberManagement",
            "None"
          ],
          "name": "permission"
        }
      ]
    },
    {
      "name": "CreateMMSMessage",
      "fields": [
        {
          "$ref": "MessageStoreCallerInfoRequest",
          "name": "from",
          "required": true
        },
        {
          "type": "array",
          "description": "Message receiver(s) information. The `phoneNumber` value is required",
          "items": {
            "$ref": "MessageStoreCallerInfoRequest"
          },
          "name": "to",
          "required": true
        },
        {
          "type": "string",
          "description": "Text of a message. Max length is 1000 symbols (2-byte UTF-16\nencoded). If a character is encoded in 4 bytes in UTF-16 it is treated\nas 2 characters, thus restricting the maximum message length to 500 symbols\n",
          "name": "text",
          "required": false
        },
        {
          "$ref": "SmsRequestCountryInfo",
          "name": "country",
          "required": false
        },
        {
          "type": "array",
          "description": "Media file(s) to upload",
          "items": {
            "$ref": "Attachment"
          },
          "name": "attachments",
          "required": true
        }
      ]
    },
    {
      "name": "ReasonInfo",
      "description": "Reason for the feature unavailability. Returned only if `available`\nis set to `false`\n",
      "fields": [
        {
          "type": "string",
          "description": "Reason code",
          "enum": [
            "ServicePlanLimitation",
            "AccountLimitation",
            "ExtensionTypeLimitation",
            "ExtensionLimitation",
            "InsufficientPermissions",
            "ConfigurationLimitation",
            "PermissionLimitation"
          ],
          "name": "code"
        },
        {
          "type": "string",
          "description": "Reason description",
          "name": "message"
        },
        {
          "type": "string",
          "name": "permission"
        }
      ]
    },
    {
      "name": "ParamsInfo",
      "fields": [
        {
          "type": "string",
          "description": "Parameter name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Parameter value",
          "name": "value"
        }
      ]
    },
    {
      "name": "FeatureList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "FeatureInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "FeatureInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a feature",
          "name": "id"
        },
        {
          "type": "boolean",
          "description": "Specifies if the feature is available for the current user\naccording to services enabled for the account, type, entitlements and\npermissions of the extension. If the authorized user gets features of\nthe other extension, only features that can be delegated are returned\n(such as configuration by administrators).\n",
          "name": "available"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ParamsInfo"
          },
          "name": "params"
        },
        {
          "$ref": "ReasonInfo",
          "name": "reason"
        }
      ]
    },
    {
      "name": "MessagingNavigationInfo",
      "description": "Information on navigation",
      "fields": [
        {
          "$ref": "MessagingNavigationInfoURI",
          "name": "firstPage"
        },
        {
          "$ref": "MessagingNavigationInfoURI",
          "name": "nextPage"
        },
        {
          "$ref": "MessagingNavigationInfoURI",
          "name": "previousPage"
        },
        {
          "$ref": "MessagingNavigationInfoURI",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "MessagingNavigationInfoURI",
      "description": "Canonical URI for the corresponding page of the list",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        }
      ]
    },
    {
      "name": "AlertInfo",
      "description": "Alert information",
      "fields": [
        {
          "type": "string",
          "description": "Title of a message",
          "name": "title"
        },
        {
          "type": "string",
          "description": "Message Description",
          "name": "body"
        }
      ]
    },
    {
      "name": "InboundMessageEvent",
      "fields": [
        {
          "$ref": "NotificationInfo",
          "name": "aps"
        },
        {
          "type": "string",
          "description": "Internal identifier of a message",
          "name": "messageId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a conversation",
          "name": "conversationId"
        },
        {
          "type": "string",
          "description": "Sender phone number. For GCM transport type '_from' property should be used",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Receiver phone number",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "NotificationRecipientInfo",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 (with '+' sign) format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        },
        {
          "type": "boolean",
          "description": "True specifies that message is sent exactly to this recipient.\nReturned in to field for group MMS. Useful if one extension has several\nphone numbers'\n",
          "name": "target"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined\nfrom phoneNumber. This property is filled only when phoneNumber is not\nempty and server can calculate location information from it (for example,\nthis information is unavailable for US toll-free numbers)\n",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a caller/callee. If the phone\ndoes not belong to the known extension, only the location is returned,\nthe name is not determined then\n",
          "name": "name"
        }
      ]
    },
    {
      "name": "SenderInfo",
      "description": "Extension Type. For GCM transport type '_from' property should be used || Message sender information",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 (with '+' sign) format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined\nfrom phoneNumber. This property is filled only when phoneNumber is not\nempty and server can calculate location information from it (for example,\nthis information is unavailable for US toll-free numbers)\n",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a caller/callee. If the phone\ndoes not belong to the known extension, only the location is returned,\nthe name is not determined then\n",
          "name": "name"
        }
      ]
    },
    {
      "name": "InstantMessageEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Date/time of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "InstantMessageEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "NotificationInfo",
      "description": "Information on a notification",
      "fields": [
        {
          "$ref": "AlertInfo",
          "name": "alert"
        },
        {
          "type": "string",
          "description": "Number of incoming messages",
          "name": "badge"
        },
        {
          "type": "string",
          "description": "Message sound",
          "name": "sound"
        },
        {
          "type": "string",
          "description": "Content availability",
          "name": "content-available"
        },
        {
          "type": "string",
          "description": "Category of a message",
          "name": "category"
        }
      ]
    },
    {
      "name": "GetMessageList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a list of user messages",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of records with message information",
          "items": {
            "$ref": "GetMessageInfoResponse"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "MessagingNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "MessagingPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "InstantMessageEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "array",
          "description": "Message receiver(s) information",
          "items": {
            "$ref": "NotificationRecipientInfo"
          },
          "name": "to"
        },
        {
          "$ref": "SenderInfo",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Type of message. The default value is 'SMS'",
          "name": "type"
        },
        {
          "type": "string",
          "description": "Message creation date/time in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Date/time when the message was modified in ISO 8601 format including\ntimezone, for example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "description": "Message read status",
          "type": "string",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "Message priority",
          "enum": [
            "Normal",
            "High"
          ],
          "name": "priority"
        },
        {
          "type": "array",
          "description": "Message attachment data",
          "items": {
            "$ref": "MessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n",
          "name": "direction"
        },
        {
          "type": "string",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n",
          "name": "availability"
        },
        {
          "type": "string",
          "description": "Message subject. It replicates message text which is also returned\nas an attachment\n",
          "name": "subject"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "string",
          "description": "Deprecated. Identifier of a conversation the message belongs\nto\n",
          "name": "conversationId"
        },
        {
          "$ref": "ConversationInfo",
          "name": "conversation"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "MessagingPagingInfo",
      "description": "Information on paging",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "description": "Current page number. 1-indexed, so the first page is 1\nby default. May be omitted if result is empty (because non-existent page\nwas specified or perPage=0 was requested)\n",
          "name": "page"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Current page size, describes how many items are in each page.\nDefault value is 100. Maximum value is 1000. If perPage value in the request\nis greater than 1000, the maximum value (1000) is applied\n",
          "name": "perPage"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Zero-based number of the first element on the current page.\nOmitted if the page is omitted or result is empty\n",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Zero-based index of the last element on the current page.\nOmitted if the page is omitted or result is empty\n",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Total number of pages in a dataset. May be omitted for\nsome resources due to performance reasons\n",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Total number of elements in a dataset. May be omitted for\nsome resource due to performance reasons\n",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "MessageEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Date/time when the message was last modified in ISO 8601 format\nincluding timezone, for example 2016-03-10T18:07:52.534Z\n",
          "format": "date-time",
          "name": "lastUpdated"
        },
        {
          "type": "array",
          "description": "Message Changes",
          "items": {
            "$ref": "MessageChanges"
          },
          "name": "changes"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "MessageEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Date/time of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "MessageEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "MessageChanges",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager"
          ],
          "description": "Type of the message",
          "name": "type"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Number of new messages. Can be omitted if the value is zero",
          "name": "newCount"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Number of updated messages. Can be omitted if the value is zero",
          "name": "updatedCount"
        },
        {
          "description": "Identifiers of the new messages, applicable for all message types",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "name": "newMessageIds"
        }
      ]
    },
    {
      "name": "GetMessageInfoMultiResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a resource",
          "example": "1724099032020",
          "name": "resourceId",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "HTTP status code of an operation on given resource",
          "example": 200,
          "name": "status",
          "required": true
        },
        {
          "$ref": "GetMessageInfoResponse",
          "name": "body",
          "required": true
        }
      ]
    },
    {
      "name": "UpdateMessageRequest",
      "fields": [
        {
          "description": "Message read status",
          "type": "string",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus",
          "required": true
        }
      ]
    },
    {
      "name": "MultipartResponseEntryBase",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a resource",
          "example": "1724099032020",
          "name": "resourceId",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "HTTP status code of an operation on given resource",
          "example": 200,
          "name": "status",
          "required": true
        }
      ]
    },
    {
      "name": "VoicemailMessageEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Date/time of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        },
        {
          "$ref": "VoicemailMessageEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "PatchMessageRequest",
      "description": "Either `readStatus` or `availability` or both are required",
      "fields": [
        {
          "description": "Message read status",
          "type": "string",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n",
          "name": "availability"
        }
      ]
    },
    {
      "name": "VoicemailMessageEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "array",
          "description": "Message receiver(s) information",
          "items": {
            "$ref": "NotificationRecipientInfo"
          },
          "name": "to"
        },
        {
          "$ref": "SenderInfo",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Type of message",
          "enum": [
            "Voicemail"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Message creation date/time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2019-03-10T18:07:52.534Z*\n",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Date/time when a message was modified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2019-03-10T18:07:52.534Z*\n",
          "name": "lastModifiedTime"
        },
        {
          "description": "Message read status",
          "type": "string",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "Message priority",
          "enum": [
            "Normal",
            "High"
          ],
          "name": "priority"
        },
        {
          "type": "array",
          "description": "Message attachment data",
          "items": {
            "$ref": "MessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n",
          "name": "direction"
        },
        {
          "type": "string",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n",
          "name": "availability"
        },
        {
          "type": "string",
          "description": "Message subject. It replicates message text which is also returned as an attachment",
          "name": "subject"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "string",
          "description": "Status of a voicemail to text transcription. Specifies if a voicemail message transcription is already completed or not\nIf 'VoicemailToText' feature is not activated for account, the 'NotAvailable' value is returned\n",
          "enum": [
            "NotAvailable",
            "InProgress",
            "TimedOut",
            "Completed",
            "CompletedPartially",
            "Failed",
            "Unknown"
          ],
          "name": "vmTranscriptionStatus"
        }
      ]
    },
    {
      "name": "MultipartRequestEntryBase",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a resource (required when alternative syntax with '*' is used)",
          "example": "1724099032020",
          "name": "resourceId"
        }
      ]
    },
    {
      "name": "CustomUserGreetingInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a custom user greeting",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a custom user greeting",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of custom user greeting",
          "enum": [
            "Introductory",
            "Announcement",
            "InterruptPrompt",
            "ConnectingAudio",
            "ConnectingMessage",
            "Voicemail",
            "Unavailable",
            "HoldMusic",
            "PronouncedName",
            "TemplateGreeting"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Content media type",
          "enum": [
            "audio/mpeg",
            "audio/wav"
          ],
          "name": "contentType"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a greeting content (audio file)",
          "name": "contentUri"
        },
        {
          "$ref": "CustomGreetingAnsweringRuleInfo",
          "name": "answeringRule"
        }
      ]
    },
    {
      "name": "UpdateUnifiedPresence",
      "fields": [
        {
          "$ref": "UpdateUnifiedPresenceGlip",
          "name": "glip"
        },
        {
          "$ref": "UpdateUnifiedPresenceTelephony",
          "name": "telephony"
        }
      ]
    },
    {
      "name": "UnifiedPresence",
      "fields": [
        {
          "type": "string",
          "description": "Aggregated presence status of the user",
          "enum": [
            "Available",
            "Offline",
            "DND",
            "Busy"
          ],
          "name": "status"
        },
        {
          "$ref": "UnifiedPresenceGlip",
          "name": "glip"
        },
        {
          "$ref": "UnifiedPresenceTelephony",
          "name": "telephony"
        },
        {
          "$ref": "UnifiedPresenceMeeting",
          "name": "meeting"
        }
      ]
    },
    {
      "name": "UnifiedPresenceListEntry",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the resource",
          "name": "resourceId"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Status code of resource retrieval",
          "name": "status"
        },
        {
          "$ref": "UnifiedPresence",
          "name": "body"
        }
      ]
    },
    {
      "name": "UpdateUnifiedPresenceTelephony",
      "fields": [
        {
          "type": "string",
          "description": "Telephony DND status",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptQueueCalls"
          ],
          "name": "availability"
        }
      ]
    },
    {
      "name": "UnifiedPresenceGlip",
      "description": "Returned if *Glip* feature is switched on",
      "fields": [
        {
          "type": "string",
          "description": "Glip connection status calculated from all user's apps. Returned always for the requester's extension; returned for another users if their glip visibility is set to 'Visible'",
          "enum": [
            "Offline",
            "Online"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Visibility setting allowing other users to see the user's Glip presence status; returned only for requester's extension",
          "enum": [
            "Visible",
            "Invisible"
          ],
          "name": "visibility"
        },
        {
          "type": "string",
          "description": "Shows whether user wants to receive Glip notifications or not.",
          "enum": [
            "Available",
            "DND"
          ],
          "name": "availability"
        }
      ]
    },
    {
      "name": "UnifiedPresenceMeeting",
      "description": "Returned if *Meetings* feature is switched on",
      "fields": [
        {
          "type": "string",
          "description": "Meeting status calculated from all user`s meetings",
          "enum": [
            "NoMeeting",
            "InMeeting"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "UpdateUnifiedPresenceGlip",
      "fields": [
        {
          "type": "string",
          "description": "Visibility setting allowing other users to see Glip presence status",
          "enum": [
            "Visible",
            "Invisible"
          ],
          "name": "visibility"
        },
        {
          "type": "string",
          "description": "Availability setting specifying whether to receive Glip notifications or not",
          "enum": [
            "Available",
            "DND"
          ],
          "name": "availability"
        }
      ]
    },
    {
      "name": "UnifiedPresenceTelephony",
      "description": "Returned if *BLF* feature is switched on",
      "fields": [
        {
          "type": "string",
          "description": "Telephony status calculated from all user's phone numbers. Returned always for the requester's extension; returned for another users if their telephony visibility is set to 'Visible'",
          "enum": [
            "NoCall",
            "Ringing",
            "CallConnected",
            "OnHold",
            "ParkedCall"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Specifies if the user's phone presence status is visible to other users; returned only for requester's extension",
          "enum": [
            "Visible",
            "Invisible"
          ],
          "name": "visibility"
        },
        {
          "type": "string",
          "description": "Telephony DND status. Returned if *DND* feature is switched on",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptQueueCalls"
          ],
          "name": "availability"
        }
      ]
    },
    {
      "name": "BlockedCallerGreetingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Type of greeting",
          "name": "type"
        },
        {
          "$ref": "PresetInfo",
          "name": "preset"
        }
      ]
    },
    {
      "name": "CallerBlockingSettings",
      "description": "Returns the lists of blocked and allowed phone numbers",
      "fields": [
        {
          "type": "string",
          "description": "Call blocking options: either specific or all calls and faxes",
          "enum": [
            "Specific",
            "All"
          ],
          "name": "mode"
        },
        {
          "type": "string",
          "description": "Determines how to handle calls with no caller ID in `Specific` mode",
          "enum": [
            "BlockCallsAndFaxes",
            "BlockFaxes",
            "Allow"
          ],
          "name": "noCallerId"
        },
        {
          "type": "string",
          "description": "Blocking settings for pay phones",
          "enum": [
            "Block",
            "Allow"
          ],
          "name": "payPhones"
        },
        {
          "type": "array",
          "description": "List of greetings played for blocked callers",
          "items": {
            "$ref": "BlockedCallerGreetingInfo"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "CallerBlockingSettingsUpdate",
      "description": "Returns the lists of blocked and allowed phone numbers",
      "fields": [
        {
          "type": "string",
          "description": "Call blocking options: either specific or all calls and faxes",
          "enum": [
            "Specific",
            "All"
          ],
          "name": "mode"
        },
        {
          "type": "string",
          "description": "Determines how to handle calls with no caller ID in 'Specific' mode",
          "enum": [
            "BlockCallsAndFaxes",
            "BlockFaxes",
            "Allow"
          ],
          "name": "noCallerId"
        },
        {
          "type": "string",
          "description": "Blocking settings for pay phones",
          "enum": [
            "Block",
            "Allow"
          ],
          "name": "payPhones"
        },
        {
          "type": "array",
          "description": "List of greetings played for blocked callers",
          "items": {
            "$ref": "BlockedCallerGreetingInfo"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "BlockedAllowedPhoneNumberInfo",
      "description": "Information on a blocked/allowed phone number",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a blocked/allowed phone number",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a blocked/allowed phone number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "A blocked/allowed phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Custom name of a blocked/allowed phone number",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Status of a phone number",
          "default": "Blocked",
          "enum": [
            "Blocked",
            "Allowed"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "BlockedAllowedPhoneNumbersList",
      "description": "List of blocked or allowed phone numbers",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a list of blocked/allowed phone numbers resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "BlockedAllowedPhoneNumberInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "AddBlockedAllowedPhoneNumber",
      "description": "Updates either blocked or allowed phone number list with a new phone number.",
      "fields": [
        {
          "type": "string",
          "description": "A blocked/allowed phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Custom name of a blocked/allowed phone number",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Status of a phone number",
          "default": "Blocked",
          "enum": [
            "Blocked",
            "Allowed"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "SyncInfo",
      "fields": [
        {
          "type": "string",
          "enum": [
            "FSync",
            "ISync"
          ],
          "name": "syncType"
        },
        {
          "type": "string",
          "name": "syncToken"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "syncTime"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "olderRecordsExist"
        }
      ]
    },
    {
      "name": "AddressBookSync",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PersonalContactResource"
          },
          "name": "records"
        },
        {
          "$ref": "SyncInfo",
          "name": "syncInfo"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "nextPageId"
        },
        {
          "type": "string",
          "format": "uri",
          "name": "nextPageUri"
        }
      ]
    },
    {
      "name": "UserPhoneNumberExtensionInfo",
      "description": "Information on the extension, to which the phone number is assigned.\nReturned only for the request of Account phone number list\n",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension short number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "For Partner Applications Internal identifier of an extension\ncreated by partner. The RingCentral supports the mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using `pid=XXX` clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n",
          "name": "partnerId"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type\ncorresponds to 'Call Queue' extensions in modern RingCentral product terminology\n",
          "enum": [
            "User",
            "FaxUser",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "Site"
          ],
          "name": "type"
        },
        {
          "$ref": "ContactCenterProvider",
          "name": "contactCenterProvider"
        },
        {
          "type": "string",
          "description": "Extension name. For user extension types the value is a combination\nof the specified first name and last name\n",
          "name": "name"
        }
      ]
    },
    {
      "name": "UserPhoneNumberInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the user phone number resource",
          "name": "uri"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a phone number",
          "name": "id"
        },
        {
          "$ref": "CountryInfoBasicModel",
          "name": "country"
        },
        {
          "$ref": "ContactCenterProvider",
          "name": "contactCenterProvider"
        },
        {
          "$ref": "UserPhoneNumberExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Custom user-defined name of a phone number, if any",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Location (City, State). Filled for local US numbers",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Payment type. 'External' is returned for forwarded numbers\nwhich are not terminated in the RingCentral phone system\n",
          "enum": [
            "External",
            "TollFree",
            "Local",
            "BusinessMobileNumberProvider",
            "ExternalNumberProvider",
            "ExternalNumberProviderTollFree"
          ],
          "name": "paymentType"
        },
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "boolean",
          "description": "Indicates if a phone number is primary, i.e. displayed as 'main number' and called by default\n",
          "example": false,
          "name": "primary"
        },
        {
          "type": "string",
          "description": "Status of a phone number. If the value is `Normal`, the phone\nnumber is ready to be used. Otherwise, it is an external number not yet\nported to RingCentral\n",
          "enum": [
            "Normal",
            "Pending",
            "PortedIn",
            "Temporary",
            "Unknown"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Type of a phone number",
          "nullable": true,
          "enum": [
            "VoiceFax",
            "VoiceOnly",
            "FaxOnly"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Extension subtype, if applicable. For any unsupported subtypes the 'Unknown' value will be returned\n",
          "enum": [
            "VideoPro",
            "VideoProPlus",
            "DigitalSignage",
            "Unknown",
            "Emergency"
          ],
          "name": "subType"
        },
        {
          "type": "string",
          "description": "Usage type of a phone number. Numbers of 'NumberPool' and 'NumberStorage' type are not returned in \nphone number list requests\n",
          "enum": [
            "MainCompanyNumber",
            "AdditionalCompanyNumber",
            "CompanyNumber",
            "DirectNumber",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "ContactCenterNumber",
            "ConferencingNumber",
            "MeetingsNumber",
            "NumberPool",
            "NumberStorage",
            "BusinessMobileNumber",
            "PartnerBusinessMobileNumber",
            "IntegrationNumber"
          ],
          "name": "usageType"
        },
        {
          "type": "array",
          "description": "List of features of a phone number",
          "items": {
            "type": "string",
            "enum": [
              "CallerId",
              "SmsSender",
              "A2PSmsSender",
              "MmsSender",
              "InternationalSmsSender",
              "Delegated"
            ]
          },
          "name": "features"
        }
      ]
    },
    {
      "name": "GetExtensionPhoneNumbersResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the user phone number list resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of phone numbers",
          "items": {
            "$ref": "UserPhoneNumberInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "SmsConfigurationResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a phone number",
          "name": "phoneNumberId"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (with '+' sign) format",
          "example": "+18661234567",
          "name": "phoneNumber"
        },
        {
          "$ref": "SmsCampaignInfo",
          "name": "smsCampaignInfo"
        },
        {
          "$ref": "SmsBrandInfo",
          "name": "smsBrandInfo"
        }
      ]
    },
    {
      "name": "SmsCampaignInfo",
      "fields": [
        {
          "type": "string",
          "description": "Identifier of the associated TCR campaign",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Status of the associated TCR campaign",
          "enum": [
            "Created",
            "Submitted",
            "Confirmed",
            "SubmitFailed",
            "UpdateRequested",
            "DeleteRequested",
            "CampaignSuspended",
            "CampaignExpired",
            "Draft",
            "PreVetFailed",
            "Unconfirmed"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Use case of the associated TCR campaign",
          "name": "registrationTier"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of sub use cases of the associated TCR campaign",
          "name": "useCases"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ApiError"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "SmsBrandInfo",
      "fields": [
        {
          "type": "string",
          "description": "Identifier of the associated TCR brand",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Status of the associated TCR campaign",
          "enum": [
            "Created",
            "Submitted",
            "Confirmed",
            "SubmitFailed",
            "UpdateRequested",
            "DeleteRequested",
            "CampaignSuspended",
            "CampaignExpired",
            "Draft",
            "PreVetFailed",
            "Unconfirmed"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ApiError"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "CallQueueOverflowSettingsRequestResource",
      "fields": [
        {
          "type": "boolean",
          "description": "Call queue overflow status",
          "name": "enabled"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallQueueIdResource"
          },
          "name": "items"
        }
      ]
    },
    {
      "name": "CallQueueOverflowSettings",
      "fields": [
        {
          "type": "boolean",
          "description": "Call queue overflow status",
          "name": "enabled"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallQueueInfo"
          },
          "name": "items"
        }
      ]
    },
    {
      "name": "CallQueueIdResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call queue",
          "name": "id"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesTaskInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Status of a task",
          "enum": [
            "Accepted",
            "InProgress",
            "Completed",
            "Failed"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Task creation time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Time of the task latest modification",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Type of task",
          "enum": [
            "WirelessPointsBulkCreate",
            "WirelessPointsBulkUpdate",
            "SwitchesBulkCreate",
            "SwitchesBulkUpdate"
          ],
          "name": "type"
        },
        {
          "$ref": "TaskResultInfo",
          "name": "result"
        }
      ]
    },
    {
      "name": "TaskResultRecord",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the created/updated element - wireless point or network switch",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique 48-bit identifier of the wireless access point complying with MAC address conventions. Returned only for 'Wireless Points Bulk Create' tasks",
          "name": "bssid"
        },
        {
          "type": "string",
          "description": "Unique identifier of a network switch. Returned only for 'Switches Bulk Create' tasks",
          "name": "chassisId"
        },
        {
          "type": "string",
          "description": "Switch entity extension for better diversity. Should be used together with chassisId.",
          "name": "port"
        },
        {
          "type": "string",
          "description": "Operation status",
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "TaskResultRecordErrorsInfo"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "TaskResultInfo",
      "description": "Task detailed result. Returned for failed and completed tasks",
      "fields": [
        {
          "type": "array",
          "description": "Detailed task results by elements from initial request",
          "items": {
            "$ref": "TaskResultRecord"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "TaskResultRecordErrorsInfo",
      "fields": [
        {
          "type": "string",
          "name": "errorCode"
        },
        {
          "type": "string",
          "name": "message"
        },
        {
          "type": "string",
          "name": "parameterName"
        },
        {
          "type": "string",
          "name": "description"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesUserList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the users list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "AutomaticLocationUpdatesUserInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesSiteInfo",
      "description": "Site data. If multi-site feature is turned on for the account,\nthen ID of a site must be specified. In order to assign a wireless\npoint to the main site (company) site ID should be set to `main-site`\n",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a site resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of a site",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Site code value. Returned only if specified",
          "name": "code"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesUserInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        },
        {
          "type": "string",
          "description": "User name",
          "name": "fullName"
        },
        {
          "type": "string",
          "name": "extensionNumber"
        },
        {
          "type": "boolean",
          "description": "Specifies whether Automatic Location Updates feature is enabled",
          "name": "featureEnabled"
        },
        {
          "type": "string",
          "description": "User extension type",
          "enum": [
            "User",
            "Limited"
          ],
          "name": "type"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Department name",
          "name": "department"
        }
      ]
    },
    {
      "name": "EmergencyAddressAutoUpdateUsersBulkAssignResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "enabledUserIds"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "disabledUserIds"
        }
      ]
    },
    {
      "name": "EmergencyAddressInfo",
      "fields": [
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "string",
          "description": "State/Province name. Mandatory for the USA, the UK and Canada\n",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "The name of the street (The field is utilized as 'streetName' field for FR addresses)",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Second line address (apartment, suite, unit, building, floor,\netc.)\n",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "Postal (Zip) code",
          "name": "zip"
        },
        {
          "type": "string",
          "description": "Customer name",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "Company name",
          "name": "companyName"
        },
        {
          "type": "string",
          "description": "(Optional) Building name",
          "name": "buildingName"
        },
        {
          "type": "string",
          "description": "Street type",
          "name": "streetType"
        },
        {
          "type": "string",
          "description": "Building/street number",
          "name": "buildingNumber"
        },
        {
          "type": "string",
          "description": "Resulting status of emergency address synchronization. Returned\nfor 'Get Device Info' request if `syncEmergencyAddress` parameter is set\nto `true`\n",
          "enum": [
            "Verified",
            "Updated",
            "Deleted",
            "NotRequired",
            "Unsupported",
            "Failed"
          ],
          "name": "syncStatus"
        }
      ]
    },
    {
      "name": "EmergencyAddressAutoUpdateSiteInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name pf a site",
          "name": "name"
        }
      ]
    },
    {
      "name": "CreateMultipleWirelessPointsRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CreateWirelessPoint"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CreateWirelessPoint",
      "fields": [
        {
          "type": "string",
          "description": "Unique 48-bit identifier of wireless access point that follows MAC address conventions.  Mask: XX:XX:XX:XX:XX:XX, where X can be a symbol in the range of 0-9 or A-F",
          "name": "bssid",
          "required": true
        },
        {
          "type": "string",
          "description": "Wireless access point name",
          "name": "name",
          "required": true
        },
        {
          "$ref": "EmergencyAddressAutoUpdateSiteInfo",
          "name": "site",
          "required": false
        },
        {
          "$ref": "EmergencyAddressInfo",
          "name": "emergencyAddress",
          "required": false
        },
        {
          "$ref": "EmergencyLocationInfo",
          "name": "emergencyLocation",
          "required": false
        }
      ]
    },
    {
      "name": "CreateMultipleWirelessPointsResponse",
      "fields": [
        {
          "$ref": "BulkTaskInfo",
          "name": "task"
        }
      ]
    },
    {
      "name": "EmergencyLocationInfo",
      "description": "Emergency response location information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an emergency response location",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Emergency response location name",
          "name": "name",
          "required": false
        },
        {
          "type": "string",
          "description": "Address format ID",
          "name": "addressFormatId",
          "required": false
        }
      ]
    },
    {
      "name": "BulkTaskInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task for multiple switches creation",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Status of a task",
          "enum": [
            "Accepted",
            "Failed"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Task creation time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Time of the task latest modification",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "ERLLocationInfo",
      "description": "Emergency response location information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an emergency response location",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Emergency response location name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Address format ID",
          "name": "addressFormatId"
        }
      ]
    },
    {
      "name": "PublicIpRangeInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "startIp"
        },
        {
          "type": "string",
          "name": "endIp"
        },
        {
          "type": "boolean",
          "name": "matched"
        }
      ]
    },
    {
      "name": "PrivateIpRangeInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "startIp"
        },
        {
          "type": "string",
          "name": "endIp"
        },
        {
          "type": "string",
          "description": "Network name",
          "name": "name"
        },
        {
          "$ref": "CommonEmergencyLocationAddressInfo",
          "name": "emergencyAddress"
        },
        {
          "type": "string",
          "description": "Emergency response location (address) internal identifier.\nOnly one of a pair `emergencyAddress` or `emergencyLocationId` should\nbe specified, otherwise an error is returned\n",
          "name": "emergencyLocationId"
        },
        {
          "type": "boolean",
          "name": "matched"
        },
        {
          "$ref": "EmergencyLocationInfo",
          "name": "emergencyLocation"
        }
      ]
    },
    {
      "name": "NetworkInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a network",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a network resource",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PublicIpRangeInfo"
          },
          "name": "publicIpRanges"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PrivateIpRangeInfo"
          },
          "name": "privateIpRanges"
        }
      ]
    },
    {
      "name": "CreateNetworkRequest",
      "fields": [
        {
          "type": "string",
          "name": "name",
          "required": true
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "PublicIpRangeInfo"
          },
          "name": "publicIpRanges",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "PrivateIpRangeInfoRequest"
          },
          "name": "privateIpRanges",
          "required": true
        }
      ]
    },
    {
      "name": "NetworksList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a networks resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "NetworkInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "PrivateIpRangeInfoRequest",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "startIp"
        },
        {
          "type": "string",
          "name": "endIp"
        },
        {
          "type": "string",
          "description": "Network name",
          "name": "name"
        },
        {
          "$ref": "LocationUpdatesEmergencyAddressInfoRequest",
          "name": "emergencyAddress"
        },
        {
          "type": "string",
          "description": "Emergency response location (address) internal identifier.\nOnly one of a pair `emergencyAddress` or `emergencyLocationId` should\nbe specified, otherwise the error is returned\n",
          "name": "emergencyLocationId"
        },
        {
          "$ref": "ERLLocationInfo",
          "name": "emergencyLocation"
        }
      ]
    },
    {
      "name": "LocationUpdatesEmergencyAddressInfoRequest",
      "description": "Emergency address assigned to the switch. Only one of a pair `emergencyAddress`\nor `emergencyLocationId` should be specified, otherwise the error is returned\n",
      "fields": [
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "string",
          "description": "Customer name",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/Province name. Mandatory for the USA, the UK and Canada",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "First line address",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Second line address (apartment, suite, unit, building, floor,\netc.)\n",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "Postal (Zip) code",
          "name": "zip"
        }
      ]
    },
    {
      "name": "UpdateNetworkRequest",
      "fields": [
        {
          "type": "string",
          "example": "2874044",
          "description": "Internal identifier of a network",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "name": "name",
          "required": true
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "PublicIpRangeInfo"
          },
          "name": "publicIpRanges",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "PrivateIpRangeInfoRequest"
          },
          "name": "privateIpRanges",
          "required": true
        }
      ]
    },
    {
      "name": "ValidateMultipleSwitchesRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "SwitchInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ValidateMultipleSwitchesResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "SwitchValidated"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ValidationError",
      "fields": [
        {
          "type": "string",
          "description": "Error code",
          "name": "errorCode"
        },
        {
          "type": "string",
          "description": "Error message",
          "name": "message"
        },
        {
          "type": "string",
          "description": "Name of invalid parameter",
          "name": "parameterName"
        }
      ]
    },
    {
      "name": "SwitchValidated",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a switch",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique identifier of a network switch",
          "name": "chassisId"
        },
        {
          "type": "string",
          "description": "Switch entity extension for better diversity. Should be used together with chassisId.",
          "name": "port"
        },
        {
          "type": "string",
          "description": "Validation result status",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ValidationError"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "SwitchSiteInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site. The company identifier value\nis 'main-site'\n",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a site",
          "name": "name"
        }
      ]
    },
    {
      "name": "SwitchInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the network switch resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a network switch",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique identifier of a network switch",
          "name": "chassisId"
        },
        {
          "type": "string",
          "description": "Switch entity extension for better diversity. Should be used together with chassisId.",
          "name": "port"
        },
        {
          "type": "string",
          "description": "Name of a network switch",
          "name": "name"
        },
        {
          "$ref": "SwitchSiteInfo",
          "name": "site"
        },
        {
          "$ref": "EmergencyAddressInfo",
          "name": "emergencyAddress"
        },
        {
          "$ref": "EmergencyLocationInfo",
          "name": "emergencyLocation"
        }
      ]
    },
    {
      "name": "CreateSwitchInfo",
      "fields": [
        {
          "type": "string",
          "description": "Unique identifier of a network switch. The supported formats are: XX:XX:XX:XX:XX:XX (symbols 0-9 and A-F) for MAC address and X.X.X.X for IP address (symbols 0-255)",
          "name": "chassisId",
          "required": true
        },
        {
          "type": "string",
          "description": "Switch entity extension for better diversity. Should be used together with chassisId.",
          "name": "port",
          "required": false
        },
        {
          "type": "string",
          "description": "Name of a network switch",
          "name": "name",
          "required": false
        },
        {
          "$ref": "SwitchSiteInfo",
          "name": "site",
          "required": false
        },
        {
          "$ref": "EmergencyAddressInfo",
          "name": "emergencyAddress",
          "required": false
        },
        {
          "$ref": "EmergencyLocationInfo",
          "name": "emergencyLocation",
          "required": false
        }
      ]
    },
    {
      "name": "SwitchesList",
      "fields": [
        {
          "type": "array",
          "description": "Switches map",
          "items": {
            "$ref": "SwitchInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "UpdateSwitchInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a switch",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique identifier of a network switch. The supported formats\nare: XX:XX:XX:XX:XX:XX (symbols 0-9 and A-F) for MAC address and X.X.X.X\nfor IP address (symbols 0-255)\n",
          "name": "chassisId"
        },
        {
          "type": "string",
          "description": "Switch entity extension for better diversity. Should be used together with chassisId.",
          "name": "port"
        },
        {
          "type": "string",
          "description": "Name of a network switch",
          "name": "name"
        },
        {
          "$ref": "SwitchSiteInfo",
          "name": "site"
        },
        {
          "$ref": "EmergencyAddressInfo",
          "name": "emergencyAddress"
        }
      ]
    },
    {
      "name": "WirelessPointInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the wireless point resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "string",
          "description": "Internal identifier of a wireless point",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Unique 48-bit identifier of the wireless access point that follows MAC address conventions",
          "name": "bssid",
          "required": true
        },
        {
          "type": "string",
          "description": "Wireless access point name",
          "name": "name",
          "required": true
        },
        {
          "$ref": "EmergencyAddressAutoUpdateSiteInfo",
          "name": "site",
          "required": false
        },
        {
          "$ref": "EmergencyAddressInfo",
          "name": "emergencyAddress",
          "required": true
        },
        {
          "$ref": "ERLLocationInfo",
          "name": "emergencyLocation",
          "required": false
        },
        {
          "type": "string",
          "description": "Deprecated. Emergency response location (address) internal identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
          "name": "emergencyLocationId",
          "required": false
        }
      ]
    },
    {
      "name": "ValidateMultipleWirelessPointsRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "WirelessPointInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "WirelessPointValidated",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a wireless point",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique 48-bit identifier of the wireless access point that\nfollows MAC address conventions\n",
          "name": "bssid"
        },
        {
          "type": "string",
          "description": "Validation result status",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ValidationError"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "ValidateMultipleWirelessPointsResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "WirelessPointValidated"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "WirelessPointsList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a wireless points resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of wireless points with assigned emergency addresses",
          "items": {
            "$ref": "WirelessPointInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "UpdateWirelessPoint",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a wireless point",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique 48-bit identifier of wireless access point that follows\nMAC address conventions. Mask: XX:XX:XX:XX:XX:XX, where X can be a symbol\nin the range of 0-9 or A-F\n",
          "name": "bssid"
        },
        {
          "type": "string",
          "description": "Name of a wireless access point",
          "name": "name"
        },
        {
          "$ref": "EmergencyAddressAutoUpdateSiteInfo",
          "name": "site"
        },
        {
          "$ref": "EmergencyAddressInfo",
          "name": "emergencyAddress"
        }
      ]
    },
    {
      "name": "ListDevicesAutomaticLocationUpdates",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a devices resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of the user(s) devices with the current status of Emergency\nAddress Auto Update Feature\n",
          "items": {
            "$ref": "AutomaticLocationUpdatesDeviceInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesDeviceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Device type",
          "default": "HardPhone",
          "enum": [
            "HardPhone",
            "SoftPhone",
            "OtherPhone"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Serial number for HardPhone (is returned only when the phone is shipped and provisioned)",
          "name": "serial"
        },
        {
          "type": "boolean",
          "description": "Specifies if Automatic Location Updates feature is enabled",
          "name": "featureEnabled"
        },
        {
          "type": "string",
          "description": "Device name",
          "name": "name"
        },
        {
          "$ref": "AutomaticLocationUpdatesModelInfo",
          "name": "model"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "type": "array",
          "description": "Phone lines information",
          "items": {
            "$ref": "AutomaticLocationUpdatesPhoneLine"
          },
          "name": "phoneLines"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesPhoneLine",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Unknown",
            "Standalone",
            "StandaloneFree",
            "BlaPrimary",
            "BlaSecondary",
            "BLF"
          ],
          "name": "lineType"
        },
        {
          "$ref": "AutomaticLocationUpdatesPhoneNumberInfo",
          "name": "phoneInfo"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesModelInfo",
      "description": "HardPhone model information",
      "fields": [
        {
          "type": "string",
          "description": "Device model identifier",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Device name",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Device feature or multiple features supported",
          "items": {
            "type": "string",
            "enum": [
              "BLA",
              "Intercom",
              "Paging",
              "HELD"
            ]
          },
          "name": "features"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesPhoneNumberInfo",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a phone number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "AssignMultipleDevicesAutomaticLocationUpdates",
      "fields": [
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "List of common devices for feature activation"
          },
          "name": "enabledDeviceIds"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "List of common devices for feature disabling"
          },
          "name": "disabledDeviceIds"
        }
      ]
    },
    {
      "name": "CreateMultipleSwitchesRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CreateSwitchInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CreateMultipleSwitchesResponse",
      "description": "Information on a task for multiple switches creation",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "BulkTaskInfo"
          },
          "name": "task"
        }
      ]
    },
    {
      "name": "UpdateMultipleWirelessPointsResponse",
      "fields": [
        {
          "$ref": "BulkTaskInfo",
          "name": "task"
        }
      ]
    },
    {
      "name": "UpdateMultipleWirelessPointsRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "UpdateWirelessPoint"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "UpdateMultipleSwitchesRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "UpdateSwitchInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "UpdateMultipleSwitchesResponse",
      "fields": [
        {
          "$ref": "BulkTaskInfo",
          "name": "task"
        }
      ]
    },
    {
      "name": "CompanyPhoneNumberInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a company phone number resource",
          "name": "uri"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a phone number",
          "name": "id"
        },
        {
          "$ref": "ExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Custom user-defined name of a phone number, if any",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Location (City, State). Filled for local US numbers",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Payment type. 'External' is returned for forwarded numbers\nwhich are not terminated in the RingCentral phone system\n",
          "enum": [
            "External",
            "TollFree",
            "Local",
            "BusinessMobileNumberProvider",
            "ExternalNumberProvider",
            "ExternalNumberProviderTollFree"
          ],
          "name": "paymentType"
        },
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Status of a phone number. If the value is `Normal`, the phone\nnumber is ready to be used. Otherwise, it is an external number not yet\nported to RingCentral\n",
          "enum": [
            "Normal",
            "Pending",
            "PortedIn",
            "Temporary",
            "Unknown"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Type of a phone number",
          "nullable": true,
          "enum": [
            "VoiceFax",
            "VoiceOnly",
            "FaxOnly"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Usage type of a phone number. Numbers of 'NumberPool' and 'NumberStorage' type are not returned in \nphone number list requests\n",
          "enum": [
            "MainCompanyNumber",
            "AdditionalCompanyNumber",
            "CompanyNumber",
            "DirectNumber",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "ContactCenterNumber",
            "ConferencingNumber",
            "MeetingsNumber",
            "NumberPool",
            "NumberStorage",
            "BusinessMobileNumber",
            "PartnerBusinessMobileNumber",
            "IntegrationNumber"
          ],
          "name": "usageType"
        },
        {
          "$ref": "TemporaryNumberInfo",
          "name": "temporaryNumber"
        },
        {
          "$ref": "ContactCenterProvider",
          "name": "contactCenterProvider"
        },
        {
          "type": "string",
          "description": "Vanity pattern for this number. Returned only when vanity search option is requested. Vanity pattern corresponds to request parameters `nxx` plus `line` or `numberPattern`",
          "name": "vanityPattern"
        },
        {
          "type": "boolean",
          "description": "Specifies if a phone number is primary, i.e. displayed as 'main number' and called by default",
          "name": "primary"
        },
        {
          "type": "string",
          "description": "Phone number activation status. Determine whether phone number migration is completed on the partner side.",
          "enum": [
            "Active",
            "Inactive"
          ],
          "name": "activationStatus"
        }
      ]
    },
    {
      "name": "TemporaryNumberInfo",
      "description": "Temporary phone number, if any. Returned for phone numbers in `Pending` porting status only\n",
      "fields": [
        {
          "type": "string",
          "description": "Temporary phone number identifier",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Temporary phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(with '+' sign) format\n",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "AccountPhoneNumbers",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a list of account phone numbers",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of account phone numbers",
          "items": {
            "$ref": "CompanyPhoneNumberInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "NotificationDeliveryModeRequest",
      "description": "Notification delivery transport information",
      "fields": [
        {
          "type": "string",
          "description": "The transport type for this subscription, or the channel by which an app should be notified of an event",
          "enum": [
            "WebHook",
            "RC/APNS",
            "RC/GCM",
            "PubNub"
          ],
          "name": "transportType",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "The URL to which notifications should be delivered. This is only applicable for the `WebHook` transport type, for which it is a required field.\n",
          "example": "https://acme.com/myservice/webhook",
          "name": "address",
          "required": true
        },
        {
          "type": "string",
          "description": "An optional validation token used to verify the authenticity of the incoming webhook. Applicable only for the `WebHook` transport type.",
          "writeOnly": true,
          "name": "verificationToken",
          "required": false
        },
        {
          "type": "string",
          "description": "Certificate name for mobile notification transports",
          "name": "certificateName",
          "required": true
        },
        {
          "type": "string",
          "description": "Device instance ID for mobile notification transports",
          "example": "38b062ae-85f8-4dcc-8734-04d3f7393d42",
          "name": "registrationId",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Optional. Specifies if notification messages will be encrypted\nor not. Please note that for some event filters (e.g. presence) encryption is mandatory and\n`false` value provided by caller will be ignored.\n",
          "default": false,
          "name": "encryption",
          "required": false
        }
      ]
    },
    {
      "name": "CreateSubscriptionRequest",
      "fields": [
        {
          "type": "array",
          "description": "The list of event filters corresponding to events the user is subscribed to",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1
          },
          "name": "eventFilters",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": 1200,
          "description": "Subscription lifetime in seconds. The maximum subscription lifetime depends upon the specified `transportType`:\n\n| Transport type      | Maximum permitted lifetime     |\n| ------------------- | ------------------------------ |\n| `WebHook`           | 315360000 seconds (10 years)   |\n| `RC/APNS`, `RC/GSM` | 7776000 seconds (90 days)      |\n| `PubNub`            | 900 seconds (15 minutes)       |\n| `WebSocket`         | n/a (the parameter is ignored) |\n",
          "name": "expiresIn",
          "required": false
        },
        {
          "$ref": "NotificationDeliveryModeRequest",
          "name": "deliveryMode",
          "required": true
        }
      ]
    },
    {
      "name": "GetCountryInfoNumberParser",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a country resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Country calling code defined by [ITU-T](http://en.wikipedia.org/wiki/ITU-T)\nrecommendations, [E.123](http://en.wikipedia.org/wiki/E.123) and\n[E.164](http://en.wikipedia.org/wiki/E.164).\nSee also [Calling Codes](http://en.wikipedia.org/wiki/List_of_country_calling_codes)\n",
          "name": "callingCode"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "The official name of the country.",
          "example": "United States",
          "name": "name"
        }
      ]
    },
    {
      "name": "ParsePhoneNumberResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a resource",
          "name": "uri",
          "required": false
        },
        {
          "$ref": "GetCountryInfoNumberParser",
          "name": "homeCountry",
          "required": true
        },
        {
          "type": "array",
          "description": "Parsed phone numbers information",
          "items": {
            "$ref": "PhoneNumberInfoNumberParser"
          },
          "name": "phoneNumbers",
          "required": true
        }
      ]
    },
    {
      "name": "PhoneNumberInfoNumberParser",
      "fields": [
        {
          "type": "string",
          "description": "Original phone number string as it was passed in the request",
          "example": "(650) 722-1621",
          "name": "originalString"
        },
        {
          "$ref": "GetCountryInfoNumberParser",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Area code of location. The portion of the [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\nnumber that identifies a specific geographic region/numbering area of\nthe national numbering plan (NANP); that can be summarized as `NPA-NXX-xxxx`\nand covers Canada, the United States, parts of the Caribbean Sea, and\nsome Atlantic and Pacific islands.\nSee [North American Numbering Plan](https://en.wikipedia.org/wiki/North_American_Numbering_Plan)\nfor details\n",
          "example": "650",
          "name": "areaCode"
        },
        {
          "type": "string",
          "description": "Dialing format of a phone number",
          "name": "dialable"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format",
          "name": "e164"
        },
        {
          "type": "string",
          "description": "The formatted phone number string in international format",
          "name": "formattedInternational"
        },
        {
          "type": "string",
          "description": "The formatted phone number string in domestic format",
          "name": "formattedNational"
        },
        {
          "type": "boolean",
          "description": "Indicates if the number is in a special format (for example N11 code)'",
          "name": "special"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format without plus sign ('+')",
          "name": "normalized"
        },
        {
          "type": "boolean",
          "description": "Indicates if the number is toll free",
          "name": "tollFree"
        },
        {
          "type": "string",
          "description": "Sub-Address. The portion of the number that identifies a subscriber into the subscriber internal (non-public) network.",
          "name": "subAddress"
        },
        {
          "type": "string",
          "description": "Subscriber number. The portion of the [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) number that identifies a subscriber in a network or numbering area.",
          "name": "subscriberNumber"
        },
        {
          "type": "string",
          "description": "DTMF (Dual Tone Multi-Frequency) postfix",
          "name": "dtmfPostfix"
        }
      ]
    },
    {
      "name": "ParsePhoneNumberRequest",
      "fields": [
        {
          "type": "array",
          "description": "The list of phone numbers passed as an array of strings (not more than 64 items). The maximum size of each string is 64 characters",
          "maxItems": 64,
          "items": {
            "type": "string",
            "maxLength": 64,
            "example": "(650) 722-1621"
          },
          "name": "originalStrings"
        }
      ]
    },
    {
      "name": "ContractedCountryListResponse",
      "fields": [
        {
          "type": "array",
          "description": "List of countries with the country data",
          "items": {
            "$ref": "ContractedCountryListResponseRecords"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "CountryListDictionaryModel",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the list of countries supported",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of countries with the country data",
          "items": {
            "$ref": "CountryInfoDictionaryModel"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "CountryInfoDictionaryModel",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a country resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "The official name of a country",
          "name": "name"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Country calling code defined by [ITU-T](http://en.wikipedia.org/wiki/ITU-T)\nrecommendations, [E.123](http://en.wikipedia.org/wiki/E.123) and\n[E.164](http://en.wikipedia.org/wiki/E.164).\nSee also [Calling Codes](http://en.wikipedia.org/wiki/List_of_country_calling_codes)\n",
          "name": "callingCode"
        },
        {
          "type": "boolean",
          "description": "Emergency calling feature availability/emergency address requirement indicator\n",
          "name": "emergencyCalling"
        },
        {
          "type": "boolean",
          "description": "Indicates that phone numbers are available for this country",
          "name": "numberSelling"
        },
        {
          "type": "boolean",
          "description": "Indicates that login with the phone number of this country is allowed",
          "name": "loginAllowed"
        },
        {
          "type": "boolean",
          "description": "Indicates that signup/billing is allowed for this country",
          "name": "signupAllowed"
        },
        {
          "type": "boolean",
          "description": "Indicates that free phone line for softphone is available for this country",
          "name": "freeSoftphoneLine"
        },
        {
          "type": "boolean",
          "description": "Indicates that the local dialing is supported in this country and default area code can be set",
          "name": "localDialing"
        }
      ]
    },
    {
      "name": "GetStateInfoResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a state",
          "name": "uri"
        },
        {
          "$ref": "CountryInfoMinimalModel",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Short code for a state (2-letter usually)",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Official name of a state",
          "name": "name"
        }
      ]
    },
    {
      "name": "GetStateListResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a states list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of states",
          "items": {
            "$ref": "GetStateInfoResponse"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "GetLocationListResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the location list resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of locations",
          "items": {
            "$ref": "LocationInfo"
          },
          "name": "records",
          "required": false
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "LocationStateInfo",
      "description": "Information on a state this location belongs to",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a state resource",
          "name": "uri"
        }
      ]
    },
    {
      "name": "LocationInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a location",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Area code of the location",
          "name": "areaCode"
        },
        {
          "type": "string",
          "description": "Official name of the city, belonging to the certain state\n",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Area code of the location (3-digit usually), according to the\nNANP number format, that can be summarized as NPA-NXX-xxxx and covers\nCanada, the United States, parts of the Caribbean Sea, and some Atlantic\nand Pacific islands. See for details North American Numbering Plan\n",
          "name": "npa"
        },
        {
          "type": "string",
          "description": "Central office code of the location, according to the NANP\nnumber format, that can be summarized as NPA-NXX-xxxx and covers Canada,\nthe United States, parts of the Caribbean Sea, and some Atlantic and Pacific\nislands. See for details North American Numbering Plan\n",
          "name": "nxx"
        },
        {
          "$ref": "LocationStateInfo",
          "name": "state"
        }
      ]
    },
    {
      "name": "PermissionCollectionResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PermissionResource"
          },
          "name": "records"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "PermissionCategoryIdResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        }
      ]
    },
    {
      "name": "PermissionResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "displayName"
        },
        {
          "type": "string",
          "name": "description"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "assignable"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "readOnly"
        },
        {
          "type": "string",
          "description": "Site compatibility flag set for permission",
          "enum": [
            "Incompatible",
            "Compatible",
            "Independent"
          ],
          "name": "siteCompatible"
        },
        {
          "$ref": "PermissionCategoryIdResource",
          "name": "category"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PermissionIdResource"
          },
          "name": "includedPermissions"
        }
      ]
    },
    {
      "name": "LanguageList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of the language list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "Language data",
          "items": {
            "$ref": "LanguageInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "LanguageInfo",
      "description": "User interface language data",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a language",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a language",
          "name": "uri"
        },
        {
          "type": "boolean",
          "description": "Indicates whether a language is available as\ngreeting language\n",
          "name": "greeting"
        },
        {
          "type": "boolean",
          "description": "Indicates whether a language is available as\nformatting locale\n",
          "name": "formattingLocale"
        },
        {
          "type": "string",
          "description": "Localization code of a language",
          "name": "localeCode"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Official name of a language",
          "name": "name"
        },
        {
          "type": "boolean",
          "description": "Indicates whether a language is available as UI language\n",
          "name": "ui"
        },
        {
          "type": "string",
          "description": "Time format",
          "name": "timeFormat"
        },
        {
          "type": "string",
          "description": "Date format",
          "name": "dateFormat"
        }
      ]
    },
    {
      "name": "PermissionCategoryResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "displayName"
        },
        {
          "type": "string",
          "name": "description"
        }
      ]
    },
    {
      "name": "PermissionCategoryCollectionResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PermissionCategoryResource"
          },
          "name": "records"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "DictionaryGreetingList",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of greetings list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of greetings",
          "items": {
            "$ref": "DictionaryGreetingInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "DictionaryGreetingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a greeting",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a greeting",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of a greeting",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Usage type of greeting, specifying if the greeting is applied for user extension or department (call queue) extension.",
          "enum": [
            "UserExtensionAnsweringRule",
            "ExtensionAnsweringRule",
            "DepartmentExtensionAnsweringRule",
            "BlockedCalls",
            "CallRecording",
            "CompanyAnsweringRule",
            "CompanyAfterHoursAnsweringRule",
            "LimitedExtensionAnsweringRule",
            "VoicemailExtensionAnsweringRule",
            "AnnouncementExtensionAnsweringRule",
            "SharedLinesGroupAnsweringRule"
          ],
          "name": "usageType"
        },
        {
          "type": "string",
          "description": "Text of a greeting, if any",
          "name": "text"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a greeting content (audio file), if any",
          "name": "contentUri"
        },
        {
          "type": "string",
          "description": "Type of greeting, specifying the case when the greeting is played.",
          "enum": [
            "Introductory",
            "Announcement",
            "AutomaticRecording",
            "BlockedCallersAll",
            "BlockedCallersSpecific",
            "BlockedNoCallerId",
            "BlockedPayPhones",
            "ConnectingMessage",
            "ConnectingAudio",
            "StartRecording",
            "StopRecording",
            "Voicemail",
            "Unavailable",
            "InterruptPrompt",
            "HoldMusic",
            "Company"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Category of a greeting, specifying data form. The category value 'None' specifies that greetings of a certain type ('Introductory', 'ConnectingAudio', etc.) are switched off for an extension = ['Music', 'Message', 'RingTones', 'None']",
          "enum": [
            "Music",
            "Message",
            "RingTones",
            "None"
          ],
          "name": "category"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "GetTimezoneInfoResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a timezone",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a timezone",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Short name of a timezone",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Description of a timezone",
          "name": "description"
        },
        {
          "type": "string",
          "name": "bias"
        }
      ]
    },
    {
      "name": "GetTimezoneListResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to the timezone list resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of timezones",
          "items": {
            "$ref": "GetTimezoneInfoResponse"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "FaxCoverPageInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a fax cover page. The supported value\nrange is 0-13 (for language setting en-US) and 0, 15-28\n(for all other languages)\n",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a fax cover page pattern",
          "name": "name"
        }
      ]
    },
    {
      "name": "ListFaxCoverPagesResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "FaxCoverPageInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PageNavigationModel",
          "name": "navigation"
        },
        {
          "$ref": "EnumeratedPagingModel",
          "name": "paging"
        }
      ]
    },
    {
      "name": "SipRegistrationDeviceInfo",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of the resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Device type",
          "enum": [
            "HardPhone",
            "SoftPhone",
            "OtherPhone",
            "Paging",
            "WebPhone",
            "Room"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Device identification number (SKU, Stock Keeping Unit) in the format\nTP-ID [-AT-AC], where TP is device type (HP for RC desk phones, DV for all\nother devices including soft phones); ID - device model ID; AT - add-on type\nID; AC - add-on count (if any). For example 'HP-56-2-2'\n",
          "name": "sku"
        },
        {
          "type": "string",
          "enum": [
            "Online",
            "Offline"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Device name. Mandatory if ordering  SoftPhone or OtherPhone.\nOptional for HardPhone. If not specified for HardPhone, then device  model  name\nis used as device  name\n",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Serial number for HardPhone (is returned only when the phone\nis shipped and provisioned); endpoint_id for Softphone and mobile applications\n",
          "name": "serial"
        },
        {
          "type": "string",
          "description": "Computer name (for devices of `SoftPhone` type only)",
          "name": "computerName"
        },
        {
          "$ref": "DeviceModelInfo",
          "name": "model"
        },
        {
          "$ref": "DeviceExtensionInfo",
          "name": "extension"
        },
        {
          "$ref": "DeviceEmergencyServiceAddressResourceDefault",
          "name": "emergencyServiceAddress"
        },
        {
          "$ref": "SipRegistrationDeviceEmergencyInfo",
          "name": "emergency"
        },
        {
          "$ref": "ShippingInfo",
          "name": "shipping"
        },
        {
          "type": "array",
          "description": "Phone lines information",
          "items": {
            "$ref": "DevicePhoneLinesInfo"
          },
          "name": "phoneLines"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Box billing identifier of a device. Applicable only for devices of `HardPhone` type.\n",
          "name": "boxBillingId"
        },
        {
          "type": "boolean",
          "description": "Supported only for devices assigned to Limited extensions. If true, enables users to log in to this phone as a common phone.",
          "name": "useAsCommonPhone"
        },
        {
          "type": "string",
          "description": "Pooling type of device:\n- `Host` - device with a standalone paid phone line which can be linked to soft phone client instance;\n- `Guest` - device with a linked phone line;\n- `None` - device without a phone line or with a specific line (free, BLA, etc.)\n",
          "enum": [
            "Host",
            "Guest",
            "None"
          ],
          "name": "linePooling"
        },
        {
          "type": "boolean",
          "description": "Network location status. `true` if the device is located in\nthe configured corporate network (On-Net); `false` for Off-Net location.\nParameter is not returned if `EmergencyAddressAutoUpdate` feature is not\nenabled for the account/user, or if device network location is not determined\n",
          "name": "inCompanyNet"
        },
        {
          "$ref": "DeviceSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of receiving last location report in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z\n",
          "name": "lastLocationReportTime"
        }
      ]
    },
    {
      "name": "DevicePhoneNumberInfo",
      "description": "Phone number information",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of a phone number",
          "name": "id"
        },
        {
          "$ref": "DevicePhoneNumberCountryInfo",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Payment type. 'External' is returned for forwarded numbers which are not terminated in the RingCentral phone system = ['External', 'TollFree', 'Local']",
          "enum": [
            "External",
            "TollFree",
            "Local"
          ],
          "name": "paymentType"
        },
        {
          "maxLength": 128,
          "minLength": 0,
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "enum": [
            "CompanyNumber",
            "MainCompanyNumber",
            "AdditionalCompanyNumber",
            "DirectNumber",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "ContactCenterNumber"
          ],
          "name": "usageType"
        },
        {
          "type": "string",
          "description": "Type of phone number",
          "enum": [
            "VoiceFax",
            "FaxOnly",
            "VoiceOnly"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "DeviceEmergencyServiceAddressResourceAu",
      "description": "Address for emergency cases. The same emergency address is assigned to all the numbers of one device",
      "fields": [
        {
          "type": "string",
          "name": "street"
        },
        {
          "type": "string",
          "name": "street2"
        },
        {
          "type": "string",
          "name": "city"
        },
        {
          "type": "string",
          "name": "zip"
        },
        {
          "type": "string",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "boolean",
          "description": "Specifies if emergency address is out of country",
          "name": "outOfCountry"
        },
        {
          "type": "string",
          "description": "(Optional) Building name",
          "name": "buildingName"
        },
        {
          "type": "string",
          "description": "Street type",
          "name": "streetType"
        },
        {
          "type": "string",
          "description": "Building/street number",
          "name": "buildingNumber"
        }
      ]
    },
    {
      "name": "SipInfoResponse",
      "fields": [
        {
          "type": "string",
          "description": "User credentials",
          "name": "username"
        },
        {
          "type": "string",
          "format": "password",
          "description": "User password. Not returned if SipDigest is not enabled",
          "name": "password"
        },
        {
          "type": "array",
          "description": "Supported authorization types and their priority for clients",
          "items": {
            "type": "string",
            "enum": [
              "SipDigest",
              "BearerToken"
            ]
          },
          "name": "authorizationTypes"
        },
        {
          "type": "string",
          "description": "Identifier for SIP authorization",
          "name": "authorizationId"
        },
        {
          "type": "string",
          "description": "SIP domain",
          "name": "domain"
        },
        {
          "type": "string",
          "description": "SIP outbound proxy server address (in the format <host:port>)",
          "name": "outboundProxy"
        },
        {
          "type": "string",
          "description": "SIP outbound IPv6 proxy server address (in the format <host:port>)",
          "name": "outboundProxyIPv6"
        },
        {
          "type": "string",
          "description": "SIP outbound proxy server backup address (in the format <host:port>)",
          "name": "outboundProxyBackup"
        },
        {
          "type": "string",
          "description": "SIP outbound IPv6 proxy server backup address (in the format <host:port>)",
          "name": "outboundProxyIPv6Backup"
        },
        {
          "type": "string",
          "description": "Preferred transport. SIP info will be returned for this transport if supported",
          "enum": [
            "UDP",
            "TCP",
            "TLS",
            "WSS"
          ],
          "name": "transport"
        },
        {
          "type": "string",
          "description": "For TLS transport only, Base64 encoded certificate",
          "name": "certificate"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The interval in seconds after which the app must try to switch\nback to primary proxy if it was previously switched to backup. If this\nparameter is not returned, the app must stay on backup proxy and try to\nswitch to primary proxy after the next SIP-provision call.\n",
          "name": "switchBackInterval"
        },
        {
          "type": "array",
          "description": "List of stun servers in the format <host:port>",
          "items": {
            "type": "string"
          },
          "name": "stunServers"
        }
      ]
    },
    {
      "name": "DevicePhoneNumberCountryInfo",
      "description": "Brief information on a phone number country",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a home country",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI of a home country",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Official name of a home country",
          "name": "name"
        }
      ]
    },
    {
      "name": "DevicePhoneLinesEmergencyAddressInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates that emergency address is required",
          "name": "required"
        },
        {
          "type": "boolean",
          "description": "Indicates that only local emergency address can be specified",
          "name": "localOnly"
        }
      ]
    },
    {
      "name": "SipRegistrationDeviceEmergencyInfo",
      "description": "Emergency response location settings of a device",
      "fields": [
        {
          "description": "Address for emergency cases. The same emergency address is assigned to all the numbers of one device",
          "name": "address",
          "$ref": "SipRegistrationDeviceEmergencyInfoAddress"
        },
        {
          "$ref": "SipRegistrationDeviceLocationInfo",
          "name": "location"
        },
        {
          "type": "boolean",
          "description": "Specifies if emergency address is out of country",
          "name": "outOfCountry"
        },
        {
          "type": "string",
          "description": "Emergency address status",
          "enum": [
            "Valid",
            "Invalid",
            "Processing"
          ],
          "name": "addressStatus"
        },
        {
          "type": "string",
          "description": "Specifies whether to return only private or only public (company) ERLs (Emergency Response Locations)\n",
          "enum": [
            "Private",
            "Public"
          ],
          "name": "visibility"
        },
        {
          "type": "string",
          "description": "Resulting status of emergency address synchronization. Returned\nif `syncEmergencyAddress` parameter is set to `true`\n",
          "enum": [
            "Verified",
            "Updated",
            "Deleted",
            "NotRequired",
            "Unsupported",
            "Failed"
          ],
          "name": "syncStatus"
        },
        {
          "type": "string",
          "description": "Ability to register new emergency address for a phone line\nusing devices sharing this line or only main device (line owner)\n",
          "enum": [
            "MainDevice",
            "AnyDevice"
          ],
          "name": "addressEditableStatus"
        },
        {
          "type": "boolean",
          "description": "Indicates if emergency address is required for the country of a phone line",
          "name": "addressRequired"
        },
        {
          "type": "boolean",
          "description": "Indicates if out of country emergency address is not allowed for the country of a phone line",
          "name": "addressLocationOnly"
        }
      ]
    },
    {
      "name": "CreateSipRegistrationResponse",
      "fields": [
        {
          "$ref": "SipRegistrationDeviceInfo",
          "name": "device",
          "required": true
        },
        {
          "type": "array",
          "description": "SIP settings for device",
          "items": {
            "$ref": "SipInfoResponse"
          },
          "name": "sipInfo",
          "required": true
        },
        {
          "type": "array",
          "description": "SIP PSTN settings for device",
          "items": {
            "$ref": "SipInfoResponse"
          },
          "name": "sipInfoPstn",
          "required": false
        },
        {
          "$ref": "SipFlagsResponse",
          "name": "sipFlags",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "sipErrorCodes",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Suggested interval in seconds to periodically call SIP-provision API and update the local cache\n",
          "name": "pollingInterval",
          "required": false
        }
      ]
    },
    {
      "name": "SIPInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Supported transport. SIP info will be returned for this transport if supported",
          "enum": [
            "UDP",
            "TCP",
            "TLS",
            "WSS"
          ],
          "name": "transport"
        }
      ]
    },
    {
      "name": "SipFlagsResponse",
      "description": "SIP flags information",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates that VoIP calling feature is enabled",
          "name": "voipFeatureEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates that the request is sent from IP address of a country where VoIP calling is disallowed\n",
          "name": "voipCountryBlocked"
        },
        {
          "type": "boolean",
          "description": "Indicates that outbound calls are enabled",
          "name": "outboundCallsEnabled"
        },
        {
          "type": "boolean",
          "name": "dscpEnabled"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "dscpSignaling"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "dscpVoice"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "dscpVideo"
        }
      ]
    },
    {
      "name": "SipRegistrationDeviceLocationInfo",
      "description": "Company emergency response location details",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an emergency response location",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Emergency response location name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Address format ID",
          "name": "addressFormatId"
        }
      ]
    },
    {
      "name": "DeviceEmergencyServiceAddressResourceDefault",
      "description": "Address for emergency cases. The same emergency address is assigned to all the numbers of one device",
      "fields": [
        {
          "type": "string",
          "name": "street"
        },
        {
          "type": "string",
          "name": "street2"
        },
        {
          "type": "string",
          "name": "city"
        },
        {
          "type": "string",
          "name": "zip"
        },
        {
          "type": "string",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "boolean",
          "description": "Specifies if emergency address is out of country",
          "name": "outOfCountry"
        }
      ]
    },
    {
      "name": "DevicePhoneLinesInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a phone line",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of phone line",
          "enum": [
            "Standalone",
            "StandaloneFree",
            "BlaPrimary",
            "BlaSecondary"
          ],
          "name": "lineType"
        },
        {
          "$ref": "DevicePhoneLinesEmergencyAddressInfo",
          "name": "emergencyAddress"
        },
        {
          "$ref": "DevicePhoneNumberInfo",
          "name": "phoneInfo"
        }
      ]
    },
    {
      "name": "DeviceAddonInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "count"
        }
      ]
    },
    {
      "name": "DeviceEmergencyServiceAddressResourceFr",
      "description": "Address for emergency cases. The same emergency address is assigned to all the numbers of one device",
      "fields": [
        {
          "type": "string",
          "name": "street"
        },
        {
          "type": "string",
          "name": "street2"
        },
        {
          "type": "string",
          "name": "city"
        },
        {
          "type": "string",
          "name": "zip"
        },
        {
          "type": "string",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "boolean",
          "description": "Specifies if emergency address is out of country",
          "name": "outOfCountry"
        },
        {
          "type": "string",
          "description": "(Optional) Building name",
          "name": "buildingName"
        },
        {
          "type": "string",
          "description": "Building/street number",
          "name": "buildingNumber"
        }
      ]
    },
    {
      "name": "DeviceExtensionInfo",
      "fields": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URL of an extension resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Short extension number",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "DeviceModelInfo",
      "description": "HardPhone model information",
      "fields": [
        {
          "type": "string",
          "description": "Addon identifier. For HardPhones of certain types, which are compatible with this add-on identifier",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Device name",
          "name": "name",
          "required": false
        },
        {
          "type": "array",
          "description": "Add-ons description",
          "items": {
            "$ref": "DeviceAddonInfo"
          },
          "name": "addons",
          "required": true
        },
        {
          "type": "array",
          "description": "Device feature or multiple features supported",
          "items": {
            "type": "string",
            "enum": [
              "BLA",
              "Intercom",
              "Paging",
              "HELD"
            ]
          },
          "name": "features",
          "required": false
        }
      ]
    },
    {
      "name": "CreateSipRegistrationRequest",
      "fields": [
        {
          "$ref": "DeviceInfoRequest",
          "name": "device"
        },
        {
          "type": "array",
          "description": "SIP settings for device",
          "items": {
            "$ref": "SIPInfoRequest"
          },
          "name": "sipInfo"
        },
        {
          "type": "string",
          "description": "Supported for Softphone clients only. If 'SoftphoneLineReassignment' feature is enabled\nthe reassignment process can be initialized, however if there is no DL for the given user's device\nthen SPR-131 error code will be returned.\n",
          "default": "None",
          "enum": [
            "None",
            "Initialize",
            "Reassign"
          ],
          "name": "softPhoneLineReassignment"
        }
      ]
    },
    {
      "name": "DeviceInfoRequest",
      "description": "Device information",
      "fields": [
        {
          "type": "string",
          "description": "Device unique identifier, retrieved at previous session (if any)",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Supported for iOS devices only. Certificate name (used by iOS\napplications for APNS subscription)\n",
          "name": "appExternalId"
        },
        {
          "type": "string",
          "description": "Computer name (for devices of `SoftPhone` type only)",
          "name": "computerName"
        },
        {
          "type": "string",
          "description": "Endpoint/device instance identifier for Softphone and mobile applications\n",
          "name": "serial"
        }
      ]
    },
    {
      "name": "UtteranceInsightsObject",
      "fields": [
        {
          "type": "number",
          "format": "float",
          "example": 0.3,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 5.1,
          "name": "end",
          "required": true
        },
        {
          "type": "string",
          "example": "Hello! This is John.",
          "name": "text",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 0.97,
          "name": "confidence",
          "required": false
        },
        {
          "type": "string",
          "example": "JohnDoe",
          "name": "speakerId",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "WordTimingsUnit"
          },
          "name": "wordTimings",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "UtteranceInsightsUnit"
          },
          "name": "insights",
          "required": false
        }
      ]
    },
    {
      "name": "SpeakerIdentifyApiResponse",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Success",
            "Fail"
          ],
          "name": "status"
        },
        {
          "name": "response",
          "$ref": "SpeakerIdentifyApiResponseResponse"
        }
      ]
    },
    {
      "name": "WordSegment",
      "fields": [
        {
          "type": "string",
          "example": "JohnDoe",
          "name": "speakerId",
          "required": false
        },
        {
          "type": "number",
          "format": "float",
          "example": 0.3,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 5.1,
          "name": "end",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 0.97,
          "name": "confidence",
          "required": false
        },
        {
          "type": "string",
          "example": "hello",
          "name": "word",
          "required": true
        }
      ]
    },
    {
      "name": "UtteranceObject",
      "fields": [
        {
          "type": "number",
          "format": "float",
          "example": 0.3,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 5.1,
          "name": "end",
          "required": true
        },
        {
          "type": "string",
          "example": "Hello! This is John.",
          "name": "text",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 0.97,
          "name": "confidence",
          "required": false
        },
        {
          "type": "string",
          "example": "JohnDoe",
          "name": "speakerId",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "WordTimingsUnit"
          },
          "name": "wordTimings",
          "required": false
        }
      ]
    },
    {
      "name": "DiarizeApiResponse",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Success",
            "Fail"
          ],
          "name": "status"
        },
        {
          "name": "response",
          "$ref": "DiarizeApiResponseResponse"
        }
      ]
    },
    {
      "name": "SummaryOutput",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "SummaryOutputUnit"
          },
          "name": "summaries"
        }
      ]
    },
    {
      "name": "WordTimingsUnit",
      "fields": [
        {
          "type": "number",
          "format": "float",
          "example": 0.3,
          "name": "start"
        },
        {
          "type": "number",
          "format": "float",
          "example": 5.1,
          "name": "end"
        },
        {
          "type": "string",
          "example": "Hello",
          "name": "word"
        }
      ]
    },
    {
      "name": "CaiErrorResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CaiErrorCodeResponse"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "PunctuateApiOutput",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Success",
            "Fail"
          ],
          "name": "status"
        },
        {
          "$ref": "PunctuateApiResponse",
          "name": "response"
        }
      ]
    },
    {
      "name": "EmotionApiResponse",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Success",
            "Fail"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "EmotionSegment"
          },
          "name": "response"
        }
      ]
    },
    {
      "name": "JobStatusResponse",
      "fields": [
        {
          "type": "string",
          "name": "jobId"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "completionTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "expirationTime"
        },
        {
          "type": "string",
          "enum": [
            "Success",
            "Fail"
          ],
          "name": "status"
        },
        {
          "$ref": "JobStatusResponseResponse",
          "name": "response",
          "items": {
            "$ref": "EmotionSegment"
          },
          "type": "array"
        }
      ]
    },
    {
      "name": "InteractionObject",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "UtteranceInsightsObject"
          },
          "name": "utteranceInsights"
        },
        {
          "$ref": "SpeakerInsightsObject",
          "name": "speakerInsights"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ConversationalInsightsUnit"
          },
          "name": "conversationalInsights"
        }
      ]
    },
    {
      "name": "SummaryApiResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "SummaryOutputUnit"
          },
          "name": "summaries"
        }
      ]
    },
    {
      "name": "PunctuateApiResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "texts",
          "required": true
        }
      ]
    },
    {
      "name": "CaiErrorCodeResponse",
      "fields": [
        {
          "type": "string",
          "enum": [
            "CAI-101",
            "CAI-102",
            "CAI-103",
            "CAI-104",
            "CAI-105",
            "CAI-106",
            "CAI-107",
            "CAI-108",
            "CAI-109",
            "CAI-110"
          ],
          "name": "errorCode",
          "required": true
        },
        {
          "type": "string",
          "description": "Helpful description of the errorCode",
          "name": "message",
          "required": true
        },
        {
          "type": "string",
          "description": "Name of parameter if specified in the message",
          "name": "parameterName",
          "required": false
        }
      ]
    },
    {
      "name": "PunctuateOutput",
      "fields": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "texts",
          "required": true
        }
      ]
    },
    {
      "name": "AsrApiResponse",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Success",
            "Fail"
          ],
          "name": "status"
        },
        {
          "name": "response",
          "$ref": "AsrApiResponseResponse"
        }
      ]
    },
    {
      "name": "InteractionApiResponse",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Success",
            "Fail"
          ],
          "name": "status"
        },
        {
          "name": "response",
          "$ref": "InteractionApiResponseResponse"
        }
      ]
    },
    {
      "name": "EmotionSegment",
      "fields": [
        {
          "type": "number",
          "format": "float",
          "example": 0.3,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 5.1,
          "name": "end",
          "required": true
        },
        {
          "type": "string",
          "example": "Neutral",
          "enum": [
            "Anger",
            "Excitement",
            "Frustration",
            "Joy",
            "Sadness",
            "Neutral"
          ],
          "name": "emotion",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 0.97,
          "name": "confidence",
          "required": false
        }
      ]
    },
    {
      "name": "DiarizeSegment",
      "fields": [
        {
          "type": "string",
          "example": "JohnDoe",
          "name": "speakerId",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 0.3,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 5.1,
          "name": "end",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 0.97,
          "name": "confidence",
          "required": false
        }
      ]
    },
    {
      "name": "UtteranceInsightsUnit",
      "fields": [
        {
          "type": "string",
          "example": "Emotion",
          "enum": [
            "Emotion"
          ],
          "name": "name",
          "required": true
        },
        {
          "type": "string",
          "example": "Neutral",
          "name": "value",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 0.97,
          "name": "confidence",
          "required": false
        }
      ]
    },
    {
      "name": "SummaryTimingsUnit",
      "fields": [
        {
          "type": "number",
          "format": "float",
          "example": 0.97,
          "name": "confidence",
          "required": false
        },
        {
          "type": "string",
          "example": "This meeting is focussed on rise of on demand marketplaces, online marketplaces and regulated services",
          "name": "value",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 0.3,
          "name": "start",
          "required": false
        },
        {
          "type": "number",
          "format": "float",
          "example": 3600.1,
          "name": "end",
          "required": false
        }
      ]
    },
    {
      "name": "TranscribedObject",
      "fields": [
        {
          "type": "integer",
          "description": "The number of speakers detected. Field is set only when enableSpeakerDiarization is true.",
          "format": "int32",
          "example": 2,
          "name": "speakerCount",
          "required": false
        },
        {
          "type": "array",
          "description": "Speaker wise utterances. Field is set only when enableSpeakerDiarization is true.",
          "items": {
            "$ref": "UtteranceObject"
          },
          "name": "utterances",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "WordSegment"
          },
          "name": "words",
          "required": true
        },
        {
          "type": "number",
          "description": "Overall transcription confidence.",
          "format": "float",
          "name": "confidence",
          "required": false
        },
        {
          "type": "string",
          "description": "The entire transcript with/without punctuations according to the input.",
          "name": "transcript",
          "required": true
        }
      ]
    },
    {
      "name": "DiarizedObject",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "name": "speakerCount",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "DiarizeSegment"
          },
          "name": "utterances",
          "required": true
        }
      ]
    },
    {
      "name": "SpeakerIdentificationObject",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "DiarizeSegment"
          },
          "name": "utterances",
          "required": true
        }
      ]
    },
    {
      "name": "ConversationalInsightsUnitValues",
      "fields": [
        {
          "type": "number",
          "format": "float",
          "example": 0.97,
          "name": "confidence",
          "required": false
        },
        {
          "type": "string",
          "example": "RingCentral",
          "name": "value",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 4.7,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 5.1,
          "name": "end",
          "required": true
        },
        {
          "type": "string",
          "example": "0",
          "description": "Paragraph index of the long summary.",
          "name": "groupId",
          "required": false
        },
        {
          "type": "string",
          "example": "JohnDoe",
          "name": "speakerId",
          "required": false
        },
        {
          "type": "string",
          "example": "Speaker",
          "name": "assignee",
          "required": false
        },
        {
          "type": "string",
          "example": "NextStep",
          "name": "category",
          "required": false
        },
        {
          "type": "string",
          "example": "All right, now let us go down to a CD settings.",
          "name": "text",
          "required": false
        },
        {
          "type": "string",
          "example": "So so you want me to add it to the B D as well?",
          "name": "question",
          "required": false
        },
        {
          "type": "string",
          "example": "Or or you can add another tab and have it resigned.",
          "name": "answer",
          "required": false
        }
      ]
    },
    {
      "name": "ConversationalInsightsUnit",
      "fields": [
        {
          "type": "string",
          "example": "KeyPhrases",
          "enum": [
            "ExtractiveSummary",
            "AbstractiveSummaryLong",
            "AbstractiveSummaryShort",
            "KeyPhrases",
            "QuestionsAsked",
            "OverallSentiment",
            "Topics"
          ],
          "name": "name",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "ConversationalInsightsUnitValues"
          },
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "SpeakerInsightsValuesItems",
      "fields": [
        {
          "type": "string",
          "example": "JohnDoe",
          "name": "speakerId",
          "required": true
        },
        {
          "type": "string",
          "description": "The value corresponding to the insight for the speaker",
          "example": "20:80",
          "name": "value",
          "required": true
        }
      ]
    },
    {
      "name": "SummaryApiOutput",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Success",
            "Fail"
          ],
          "name": "status"
        },
        {
          "$ref": "SummaryApiResponse",
          "name": "response"
        }
      ]
    },
    {
      "name": "SpeakerInsightsObject",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "name": "speakerCount"
        },
        {
          "type": "array",
          "items": {
            "$ref": "SpeakerInsightsUnit"
          },
          "name": "insights"
        }
      ]
    },
    {
      "name": "SummaryOutputUnit",
      "fields": [
        {
          "type": "string",
          "example": "AbstractiveShort",
          "enum": [
            "Extractive",
            "AbstractiveLong",
            "AbstractiveShort",
            "All"
          ],
          "name": "name"
        },
        {
          "type": "array",
          "description": "Summary output units sorted by their occurrence in the conversation",
          "items": {
            "$ref": "SummaryTimingsUnit"
          },
          "name": "values"
        }
      ]
    },
    {
      "name": "SpeakerInsightsUnit",
      "fields": [
        {
          "type": "string",
          "example": "TalkToListenRatio",
          "enum": [
            "Energy",
            "Pace",
            "TalkToListenRatio",
            "QuestionsAsked"
          ],
          "name": "name",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "SpeakerInsightsValuesItems"
          },
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "SummaryUnit",
      "fields": [
        {
          "type": "string",
          "example": "JohnDoe",
          "name": "speakerId",
          "required": true
        },
        {
          "type": "string",
          "example": "Hello! This is John.",
          "name": "text",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 0.3,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "example": 5.1,
          "name": "end",
          "required": true
        }
      ]
    },
    {
      "name": "CaiAsyncApiResponse",
      "fields": [
        {
          "type": "string",
          "name": "jobId"
        }
      ]
    },
    {
      "name": "SummaryInput",
      "fields": [
        {
          "type": "string",
          "description": "Type of summary to be computed",
          "example": "AbstractiveShort",
          "enum": [
            "Extractive",
            "AbstractiveShort",
            "AbstractiveLong",
            "AbstractiveAll",
            "All"
          ],
          "name": "summaryType",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "SummaryUnit"
          },
          "name": "utterances",
          "required": true
        }
      ]
    },
    {
      "name": "PunctuateInput",
      "fields": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "texts",
          "required": true
        }
      ]
    },
    {
      "name": "EnrollmentStatus",
      "fields": [
        {
          "type": "string",
          "description": "Quality of the enrollment.",
          "example": "Average",
          "enum": [
            "Poor",
            "Average",
            "Good",
            "High"
          ],
          "name": "enrollmentQuality",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Status of the enrollment.",
          "example": true,
          "name": "enrollmentComplete",
          "required": true
        },
        {
          "type": "string",
          "example": "JohnDoe",
          "name": "speakerId",
          "required": true
        },
        {
          "type": "number",
          "description": "Total speech duration of the enrollment in seconds.",
          "format": "float",
          "example": 20.1,
          "name": "totalEnrollDuration",
          "required": false
        },
        {
          "type": "number",
          "description": "Total duration of the enrollment in seconds.",
          "format": "float",
          "example": 30.5,
          "name": "totalSpeechDuration",
          "required": true
        }
      ]
    },
    {
      "name": "EnrollmentInput",
      "fields": [
        {
          "type": "string",
          "description": "The encoding of the original audio",
          "example": "Wav",
          "enum": [
            "Mpeg",
            "Mp4",
            "Wav",
            "Webm",
            "Webp",
            "Aac",
            "Avi",
            "Ogg"
          ],
          "name": "encoding",
          "required": true
        },
        {
          "type": "string",
          "description": "Language spoken in the audio file.",
          "example": "en-US",
          "name": "languageCode",
          "required": false
        },
        {
          "type": "string",
          "description": "Base64-encoded audio file data.",
          "example": "base64EncodedAudioInput",
          "name": "content",
          "required": true
        },
        {
          "type": "string",
          "description": "The enrollment ID to be registered. Acceptable format [a-zA-Z0-9_]+",
          "example": "JohnDoe",
          "name": "speakerId",
          "required": true
        }
      ]
    },
    {
      "name": "EnrollmentPatchInput",
      "fields": [
        {
          "type": "string",
          "description": "The encoding of the original audio",
          "example": "Wav",
          "enum": [
            "Mpeg",
            "Mp4",
            "Wav",
            "Webm",
            "Webp",
            "Aac",
            "Avi",
            "Ogg"
          ],
          "name": "encoding",
          "required": true
        },
        {
          "type": "string",
          "description": "Language spoken in the audio file.",
          "example": "en-US",
          "name": "languageCode",
          "required": false
        },
        {
          "type": "string",
          "description": "Base64-encoded audio file data.",
          "example": "base64EncodedAudioInput",
          "name": "content",
          "required": true
        }
      ]
    },
    {
      "name": "PagingSchema",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "name": "page",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "name": "totalPages",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "example": 5,
          "name": "perPage",
          "required": true
        }
      ]
    },
    {
      "name": "ListEnrolledSpeakers",
      "fields": [
        {
          "$ref": "PagingSchema",
          "name": "paging",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "EnrollmentStatus"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "AudioInput",
      "fields": [
        {
          "type": "string",
          "description": "Publicly facing uri",
          "format": "uri",
          "name": "contentUri",
          "required": false
        },
        {
          "type": "string",
          "description": "The encoding of the original audio",
          "example": "Wav",
          "enum": [
            "Mpeg",
            "Mp4",
            "Wav",
            "Webm",
            "Webp",
            "Aac",
            "Avi",
            "Ogg"
          ],
          "name": "encoding",
          "required": true
        },
        {
          "type": "string",
          "description": "Language spoken in the audio file.",
          "example": "en-US",
          "name": "languageCode",
          "required": true
        },
        {
          "type": "string",
          "description": "Source of the audio file eg: Phone, RingCentral, GoogleMeet, Zoom etc",
          "example": "RingCentral",
          "name": "source",
          "required": false
        },
        {
          "type": "string",
          "description": "Type of the audio",
          "example": "CallCenter",
          "enum": [
            "CallCenter",
            "Meeting",
            "EarningsCalls",
            "Interview",
            "PressConference",
            "Voicemail"
          ],
          "name": "audioType",
          "required": false
        }
      ]
    },
    {
      "name": "SpeechContextPhrasesInput",
      "fields": [
        {
          "type": "array",
          "description": "Words or Phrases to boost",
          "example": [
            "Mohit",
            "Sushant",
            "RingCentral"
          ],
          "items": {
            "type": "string"
          },
          "name": "phrases",
          "required": true
        }
      ]
    },
    {
      "name": "DiarizeInput",
      "fields": [
        {
          "type": "string",
          "description": "Publicly facing uri",
          "format": "uri",
          "name": "contentUri",
          "required": false
        },
        {
          "type": "string",
          "description": "The encoding of the original audio",
          "example": "Wav",
          "enum": [
            "Mpeg",
            "Mp4",
            "Wav",
            "Webm",
            "Webp",
            "Aac",
            "Avi",
            "Ogg"
          ],
          "name": "encoding",
          "required": true
        },
        {
          "type": "string",
          "description": "Language spoken in the audio file.",
          "example": "en-US",
          "name": "languageCode",
          "required": true
        },
        {
          "type": "string",
          "description": "Source of the audio file eg: Phone, RingCentral, GoogleMeet, Zoom etc",
          "example": "RingCentral",
          "name": "source",
          "required": false
        },
        {
          "type": "string",
          "description": "Type of the audio",
          "example": "CallCenter",
          "enum": [
            "CallCenter",
            "Meeting",
            "EarningsCalls",
            "Interview",
            "PressConference",
            "Voicemail"
          ],
          "name": "audioType",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Set to True if the input audio is multi-channel and each channel has a separate speaker.",
          "example": false,
          "name": "separateSpeakerPerChannel",
          "required": false
        },
        {
          "type": "integer",
          "description": "Number of speakers in the file, omit parameter if unknown",
          "format": "int32",
          "example": 2,
          "name": "speakerCount",
          "required": false
        },
        {
          "type": "array",
          "description": "Optional set of speakers to be identified from the call.",
          "example": [
            "speakerId1",
            "speakerId2"
          ],
          "items": {
            "type": "string"
          },
          "name": "speakerIds",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Apply voice activity detection.",
          "name": "enableVoiceActivityDetection",
          "required": false
        }
      ]
    },
    {
      "name": "AsrInput",
      "fields": [
        {
          "type": "string",
          "description": "Publicly facing uri",
          "format": "uri",
          "name": "contentUri",
          "required": false
        },
        {
          "type": "string",
          "description": "The encoding of the original audio",
          "example": "Wav",
          "enum": [
            "Mpeg",
            "Mp4",
            "Wav",
            "Webm",
            "Webp",
            "Aac",
            "Avi",
            "Ogg"
          ],
          "name": "encoding",
          "required": true
        },
        {
          "type": "string",
          "description": "Language spoken in the audio file.",
          "example": "en-US",
          "name": "languageCode",
          "required": true
        },
        {
          "type": "string",
          "description": "Source of the audio file eg: Phone, RingCentral, GoogleMeet, Zoom etc",
          "example": "RingCentral",
          "name": "source",
          "required": false
        },
        {
          "type": "string",
          "description": "Type of the audio",
          "example": "CallCenter",
          "enum": [
            "CallCenter",
            "Meeting",
            "EarningsCalls",
            "Interview",
            "PressConference",
            "Voicemail"
          ],
          "name": "audioType",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Indicates that the input audio is multi-channel and each channel has a separate speaker.",
          "example": false,
          "default": false,
          "name": "separateSpeakerPerChannel",
          "required": false
        },
        {
          "type": "integer",
          "description": "Number of speakers in the file, omit parameter if unknown",
          "format": "int32",
          "example": 2,
          "name": "speakerCount",
          "required": false
        },
        {
          "type": "array",
          "description": "Optional set of speakers to be identified from the call.",
          "example": [
            "speakerId1",
            "speakerId2"
          ],
          "items": {
            "type": "string"
          },
          "name": "speakerIds",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Apply voice activity detection.",
          "name": "enableVoiceActivityDetection",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Enables Smart Punctuation API.",
          "name": "enablePunctuation",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Tags each word corresponding to the speaker.",
          "default": false,
          "name": "enableSpeakerDiarization",
          "required": false
        },
        {
          "type": "array",
          "description": "Indicates the words/phrases that will be used for boosting the transcript. This can help to boost accuracy for cases like Person Names, Company names etc.",
          "items": {
            "$ref": "SpeechContextPhrasesInput"
          },
          "name": "speechContexts",
          "required": false
        }
      ]
    },
    {
      "name": "ContentInput",
      "fields": [
        {
          "type": "string",
          "description": "Publicly facing uri",
          "format": "uri",
          "name": "contentUri"
        }
      ]
    },
    {
      "name": "IdentifyInput",
      "fields": [
        {
          "type": "string",
          "description": "Publicly facing uri",
          "format": "uri",
          "name": "contentUri",
          "required": false
        },
        {
          "type": "string",
          "description": "The encoding of the original audio",
          "example": "Wav",
          "enum": [
            "Mpeg",
            "Mp4",
            "Wav",
            "Webm",
            "Webp",
            "Aac",
            "Avi",
            "Ogg"
          ],
          "name": "encoding",
          "required": true
        },
        {
          "type": "string",
          "description": "Language spoken in the audio file.",
          "example": "en-US",
          "name": "languageCode",
          "required": true
        },
        {
          "type": "string",
          "description": "Source of the audio file eg: Phone, RingCentral, GoogleMeet, Zoom etc",
          "example": "RingCentral",
          "name": "source",
          "required": false
        },
        {
          "type": "string",
          "description": "Type of the audio",
          "example": "CallCenter",
          "enum": [
            "CallCenter",
            "Meeting",
            "EarningsCalls",
            "Interview",
            "PressConference",
            "Voicemail"
          ],
          "name": "audioType",
          "required": false
        },
        {
          "type": "array",
          "description": "Set of enrolled speakers to be identified from the media.",
          "example": [
            "speakerId1",
            "speakerId2"
          ],
          "items": {
            "type": "string"
          },
          "name": "speakerIds",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Apply voice activity detection.",
          "name": "enableVoiceActivityDetection",
          "required": false
        }
      ]
    },
    {
      "name": "RecordingInsights",
      "fields": [
        {
          "type": "string",
          "example": "Call from 1234567890 to 0987654321",
          "description": "Title of the call",
          "name": "title",
          "required": true
        },
        {
          "type": "string",
          "example": "https://ringsense.ringcentral.com/calls/2e67979e-ff82-4171-ae30-20c0c1f19b27",
          "description": "URI of the call recording",
          "name": "rsRecordUri",
          "required": false
        },
        {
          "type": "string",
          "description": "Source rc application of the recording",
          "example": "pbx",
          "enum": [
            "pbx"
          ],
          "name": "domain",
          "required": true
        },
        {
          "type": "string",
          "description": "Recording ID of the domain",
          "example": "4b57_384543",
          "name": "sourceRecordId",
          "required": true
        },
        {
          "type": "string",
          "description": "Session ID of the domain",
          "example": "cbac2b78-6f74-4257-8167-dff864de2263!us-10-dca09@us-10",
          "name": "sourceSessionId",
          "required": true
        },
        {
          "type": "string",
          "description": "Optional call direction in case of phone call recording",
          "example": "Inbound",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "callDirection",
          "required": false
        },
        {
          "type": "string",
          "description": "Extension id of the call recording owner",
          "example": "123456789",
          "name": "ownerExtensionId",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Duration of the call recording (in ms)",
          "example": 112000,
          "name": "recordingDurationMs",
          "required": true
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the call recording",
          "name": "recordingStartTime",
          "required": true
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Creation time of the call insights",
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Last modified time of the call insights",
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "type": "array",
          "description": "List of the participants in the call",
          "items": {
            "type": "object",
            "required": [
              "speakerId"
            ],
            "properties": {
              "speakerId": {
                "type": "string",
                "example": "p-32423",
                "description": "Participant ID as in the source recording"
              },
              "name": {
                "type": "string",
                "example": "John Doe",
                "description": "Name of the participant"
              },
              "accountId": {
                "type": "string",
                "example": "123456789",
                "description": "RingCentral account ID of the participant"
              },
              "extensionId": {
                "type": "string",
                "example": "123456789",
                "description": "RingCentral extension ID of the participant"
              },
              "phoneNumber": {
                "type": "string",
                "example": "+1234567890",
                "description": "Optional phone number of the participant in case of phone call recording"
              }
            }
          },
          "name": "speakerInfo",
          "required": true
        },
        {
          "$ref": "AIInsights",
          "name": "insights",
          "required": true
        }
      ]
    },
    {
      "name": "AIInsights",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "TranscriptInsightUnit"
          },
          "name": "Transcript"
        },
        {
          "type": "array",
          "items": {
            "$ref": "SummaryInsightUnit"
          },
          "name": "Summary"
        },
        {
          "type": "array",
          "items": {
            "$ref": "HighlightsInsightUnit"
          },
          "name": "Highlights"
        },
        {
          "type": "array",
          "items": {
            "$ref": "NextStepsInsightUnit"
          },
          "name": "NextSteps"
        },
        {
          "type": "array",
          "items": {
            "$ref": "BulletedSummaryInsightUnit"
          },
          "name": "BulletedSummary"
        },
        {
          "type": "array",
          "items": {
            "$ref": "AIScoreInsightUnit"
          },
          "name": "AIScore"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallNotesInsightUnit"
          },
          "name": "CallNotes"
        }
      ]
    },
    {
      "name": "AIScoreInsightUnit",
      "fields": [
        {
          "type": "string",
          "description": "Value of the score",
          "example": "7",
          "name": "value",
          "required": true
        }
      ]
    },
    {
      "name": "SummaryInsightUnit",
      "fields": [
        {
          "type": "string",
          "description": "Value of the summary",
          "example": "conversational insights text",
          "name": "value",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "description": "Start time of the insight (in sec)",
          "example": 1.2,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "description": "End time of the insight (in sec)",
          "example": 4.2,
          "name": "end",
          "required": true
        }
      ]
    },
    {
      "name": "BulletedSummaryInsightUnit",
      "fields": [
        {
          "type": "string",
          "description": "Value of the summary",
          "example": "conversational insights text",
          "name": "value",
          "required": true
        }
      ]
    },
    {
      "name": "HighlightsInsightUnit",
      "fields": [
        {
          "type": "string",
          "description": "Participant ID",
          "example": "p-32423",
          "name": "speakerId",
          "required": true
        },
        {
          "type": "string",
          "description": "Value of the insight",
          "example": "conversational insights text",
          "name": "value",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "description": "Start time of the insight (in sec)",
          "example": 1.2,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "description": "End time of the insight (in sec)",
          "example": 4.2,
          "name": "end",
          "required": true
        }
      ]
    },
    {
      "name": "RSConversationalInsightsUnit",
      "fields": [
        {
          "type": "string",
          "description": "Participant ID",
          "example": "p-32423",
          "name": "speakerId",
          "required": true
        },
        {
          "type": "string",
          "description": "Value of the insight",
          "example": "conversational insights text",
          "name": "value",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "description": "Start time of the insight (in sec)",
          "example": 1.2,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "description": "End time of the insight (in sec)",
          "example": 4.2,
          "name": "end",
          "required": true
        }
      ]
    },
    {
      "name": "TranscriptInsightUnit",
      "description": "One utterance of a call. Each utterance is a speakerId, text, start and end time",
      "fields": [
        {
          "type": "string",
          "description": "Participant ID",
          "example": "p-32423",
          "name": "speakerId",
          "required": true
        },
        {
          "type": "string",
          "description": "Text of the utterance",
          "example": "Hello user!",
          "name": "text",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "description": "Start time of the utterance (in sec)",
          "example": 1.2,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "description": "End time of the utterance (in sec)",
          "example": 4.2,
          "name": "end",
          "required": true
        }
      ]
    },
    {
      "name": "NextStepsInsightUnit",
      "fields": [
        {
          "type": "string",
          "description": "Participant ID",
          "example": "p-32423",
          "name": "speakerId",
          "required": true
        },
        {
          "type": "string",
          "description": "Value of the insight",
          "example": "conversational insights text",
          "name": "value",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "description": "Start time of the insight (in sec)",
          "example": 1.2,
          "name": "start",
          "required": true
        },
        {
          "type": "number",
          "format": "float",
          "description": "End time of the insight (in sec)",
          "example": 4.2,
          "name": "end",
          "required": true
        }
      ]
    },
    {
      "name": "CallNotesInsightUnit",
      "fields": [
        {
          "type": "string",
          "description": "Value of the call notes",
          "example": "call notes text",
          "name": "value",
          "required": true
        }
      ]
    },
    {
      "name": "RSPagingModel",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "description": "Current page size, describes how many items are in each page.\nMatches \"perPage\" parameter from the request.\n",
          "example": 50,
          "name": "perPage",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "description": "The current page number. 1-indexed, so the first page is 1\nby default. May be omitted if result is empty (because non-existent page\nwas specified or perPage=0 was requested)\n",
          "example": 5,
          "name": "page",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The zero-based number of the first element on the current page.\nOmitted if the page is omitted or result is empty\n",
          "example": 0,
          "name": "pageStart",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The zero-based index of the last element on the current page.\nOmitted if the page is omitted or result is empty\n",
          "example": 5,
          "name": "pageEnd",
          "required": true
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The total number of pages in a dataset. May be omitted for\nsome resources due to performance reasons\n",
          "example": 25,
          "name": "totalPages",
          "required": false
        },
        {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The total number of elements in a dataset. May be omitted for\nsome resource due to performance reasons\n",
          "example": 25,
          "name": "totalElements",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "sortableFields",
          "required": true
        }
      ]
    },
    {
      "name": "InteractionInput",
      "fields": [
        {
          "type": "string",
          "description": "Publicly facing uri",
          "format": "uri",
          "name": "contentUri",
          "required": false
        },
        {
          "type": "string",
          "description": "The encoding of the original audio",
          "example": "Wav",
          "enum": [
            "Mpeg",
            "Mp4",
            "Wav",
            "Webm",
            "Webp",
            "Aac",
            "Avi",
            "Ogg"
          ],
          "name": "encoding",
          "required": true
        },
        {
          "type": "string",
          "description": "Language spoken in the audio file.",
          "example": "en-US",
          "name": "languageCode",
          "required": true
        },
        {
          "type": "string",
          "description": "Source of the audio file eg: Phone, RingCentral, GoogleMeet, Zoom etc",
          "example": "RingCentral",
          "name": "source",
          "required": false
        },
        {
          "type": "string",
          "description": "Type of the audio",
          "example": "CallCenter",
          "enum": [
            "CallCenter",
            "Meeting",
            "EarningsCalls",
            "Interview",
            "PressConference",
            "Voicemail"
          ],
          "name": "audioType",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Set to True if the input audio is multi-channel and each channel has a separate speaker.",
          "example": false,
          "name": "separateSpeakerPerChannel",
          "required": false
        },
        {
          "type": "integer",
          "description": "Number of speakers in the file, omit parameter if unknown",
          "format": "int32",
          "example": 2,
          "name": "speakerCount",
          "required": false
        },
        {
          "type": "array",
          "description": "Optional set of speakers to be identified from the call.",
          "example": [
            "speakerId1",
            "speakerId2"
          ],
          "items": {
            "type": "string"
          },
          "name": "speakerIds",
          "required": false
        },
        {
          "type": "boolean",
          "description": "Apply voice activity detection.",
          "name": "enableVoiceActivityDetection",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "All",
              "KeyPhrases",
              "Emotion",
              "AbstractiveSummaryLong",
              "AbstractiveSummaryShort",
              "ExtractiveSummary",
              "Topics",
              "TalkToListenRatio",
              "Energy",
              "Pace",
              "QuestionsAsked"
            ]
          },
          "name": "insights",
          "required": false
        },
        {
          "type": "array",
          "description": "Indicates the words/phrases that will be used for boosting the transcript. This can help to boost accuracy for cases like Person Names, Company names etc.",
          "items": {
            "$ref": "SpeechContextPhrasesInput"
          },
          "name": "speechContexts",
          "required": false
        }
      ]
    },
    {
      "name": "ScimErrorResponse",
      "fields": [
        {
          "type": "string",
          "description": "Detailed error message",
          "name": "detail"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:api:messages:2.0:Error"
            ]
          },
          "name": "schemas"
        },
        {
          "type": "string",
          "description": "Bad request type when status code is 400",
          "enum": [
            "uniqueness",
            "tooMany",
            "mutability",
            "sensitive",
            "invalidSyntax",
            "invalidFilter",
            "invalidPath",
            "invalidValue",
            "invalidVers",
            "noTarget"
          ],
          "name": "scimType"
        },
        {
          "type": "string",
          "description": "Same as HTTP status code, e.g. 400, 401, etc.",
          "name": "status"
        }
      ]
    },
    {
      "name": "ScimSchemaAttribute",
      "fields": [
        {
          "type": "string",
          "description": "The name of the attribute",
          "name": "name",
          "required": true
        },
        {
          "type": "string",
          "enum": [
            "string",
            "boolean",
            "decimal",
            "integer",
            "dateTime",
            "reference",
            "complex"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimSchemaAttribute"
          },
          "name": "subAttributes",
          "required": false
        },
        {
          "type": "boolean",
          "description": "A Boolean value indicating the attribute's plurality",
          "default": false,
          "name": "multiValued",
          "required": true
        },
        {
          "type": "string",
          "description": "The description of the attribute",
          "name": "description",
          "required": false
        },
        {
          "type": "boolean",
          "default": false,
          "name": "required",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of suggested canonical values",
          "name": "canonicalValues",
          "required": false
        },
        {
          "type": "boolean",
          "default": false,
          "name": "caseExact",
          "required": false
        },
        {
          "type": "string",
          "enum": [
            "readOnly",
            "readWrite",
            "immutable",
            "writeOnly"
          ],
          "description": "Indicates the circumstances under which the value of the attribute can be (re)defined",
          "name": "mutability",
          "required": true
        },
        {
          "type": "string",
          "enum": [
            "always",
            "never",
            "default",
            "request"
          ],
          "description": "Indicates when an attribute and associated values are returned",
          "name": "returned",
          "required": true
        },
        {
          "type": "string",
          "enum": [
            "none",
            "server",
            "global"
          ],
          "description": "Specifies how the service provider enforces uniqueness of attribute values",
          "name": "uniqueness",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Indicates the SCIM resource types that be referenced",
          "name": "referenceTypes",
          "required": false
        }
      ]
    },
    {
      "name": "ScimMeta",
      "description": "Resource metadata",
      "fields": [
        {
          "type": "string",
          "format": "date-time",
          "name": "created"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "lastModified"
        },
        {
          "type": "string",
          "description": "Resource location URI",
          "name": "location"
        },
        {
          "type": "string",
          "enum": [
            "User",
            "Group",
            "ResourceType",
            "Schema"
          ],
          "name": "resourceType"
        }
      ]
    },
    {
      "name": "ScimSchemaSearchResponse",
      "fields": [
        {
          "type": "array",
          "description": "Resource type list",
          "items": {
            "$ref": "ScimSchemaResponse"
          },
          "name": "Resources"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "itemsPerPage"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            ]
          },
          "name": "schemas"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "startIndex"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "totalResults"
        }
      ]
    },
    {
      "name": "ScimSchemaResponse",
      "fields": [
        {
          "type": "string",
          "description": "The unique URI of the schema",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "The name of the schema",
          "name": "name",
          "required": false
        },
        {
          "type": "string",
          "description": "The description of the schema",
          "name": "description",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimSchemaAttribute"
          },
          "name": "attributes",
          "required": false
        },
        {
          "$ref": "ScimMeta",
          "name": "meta",
          "required": false
        }
      ]
    },
    {
      "name": "ScimUserShortInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "User status",
          "default": false,
          "name": "active",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimEmail"
          },
          "name": "emails",
          "required": true
        },
        {
          "type": "string",
          "description": "External unique resource ID defined by provisioning client",
          "name": "externalId",
          "required": false
        },
        {
          "type": "string",
          "description": "Unique resource ID defined by RingCentral",
          "name": "id",
          "required": false
        },
        {
          "$ref": "ScimName",
          "name": "name",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimPhoto"
          },
          "name": "photos",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ]
          },
          "name": "schemas",
          "required": true
        },
        {
          "type": "string",
          "description": "User title",
          "name": "title",
          "required": false
        },
        {
          "$ref": "ScimEnterpriseUser",
          "name": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
          "required": false
        },
        {
          "type": "string",
          "description": "MUST be same as work type email address",
          "name": "userName",
          "required": true
        },
        {
          "$ref": "ScimMeta",
          "name": "meta",
          "required": false
        }
      ]
    },
    {
      "name": "ScimEnterpriseUser",
      "fields": [
        {
          "type": "string",
          "name": "department"
        }
      ]
    },
    {
      "name": "ScimUserAddress",
      "fields": [
        {
          "type": "string",
          "name": "country",
          "required": false
        },
        {
          "type": "string",
          "name": "locality",
          "required": false
        },
        {
          "type": "string",
          "name": "postalCode",
          "required": false
        },
        {
          "type": "string",
          "name": "region",
          "required": false
        },
        {
          "type": "string",
          "name": "streetAddress",
          "required": false
        },
        {
          "type": "string",
          "enum": [
            "work"
          ],
          "name": "type",
          "required": true
        }
      ]
    },
    {
      "name": "ScimUserSearchResponse",
      "fields": [
        {
          "type": "array",
          "description": "User list",
          "items": {
            "$ref": "ScimUserShortInfo"
          },
          "name": "Resources"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "itemsPerPage"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            ]
          },
          "name": "schemas"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "startIndex"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "totalResults"
        }
      ]
    },
    {
      "name": "ScimEmail",
      "fields": [
        {
          "type": "string",
          "enum": [
            "work"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "name": "value",
          "required": true
        }
      ]
    },
    {
      "name": "ScimPhoto",
      "fields": [
        {
          "type": "string",
          "enum": [
            "photo"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "name": "value",
          "required": true
        }
      ]
    },
    {
      "name": "ScimUser",
      "fields": [
        {
          "type": "boolean",
          "description": "User status",
          "default": false,
          "name": "active",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimUserAddress"
          },
          "name": "addresses",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimEmail"
          },
          "name": "emails",
          "required": true
        },
        {
          "type": "string",
          "description": "External unique resource ID defined by provisioning client",
          "name": "externalId",
          "required": false
        },
        {
          "type": "string",
          "description": "Unique resource ID defined by RingCentral",
          "name": "id",
          "required": false
        },
        {
          "$ref": "ScimName",
          "name": "name",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimPhoneNumber"
          },
          "name": "phoneNumbers",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimPhoto"
          },
          "name": "photos",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ]
          },
          "name": "schemas",
          "required": true
        },
        {
          "type": "string",
          "description": "User title",
          "name": "title",
          "required": false
        },
        {
          "$ref": "ScimEnterpriseUser",
          "name": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
          "required": false
        },
        {
          "type": "string",
          "description": "MUST be same as work type email address",
          "name": "userName",
          "required": true
        }
      ]
    },
    {
      "name": "ScimPhoneNumber",
      "fields": [
        {
          "type": "string",
          "enum": [
            "work",
            "mobile",
            "other"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "name": "value",
          "required": true
        }
      ]
    },
    {
      "name": "ScimUserResponse",
      "fields": [
        {
          "type": "boolean",
          "description": "User status",
          "default": false,
          "name": "active",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimUserAddress"
          },
          "name": "addresses",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimEmail"
          },
          "name": "emails",
          "required": true
        },
        {
          "type": "string",
          "description": "External unique resource ID defined by provisioning client",
          "name": "externalId",
          "required": false
        },
        {
          "type": "string",
          "description": "Unique resource ID defined by RingCentral",
          "name": "id",
          "required": false
        },
        {
          "$ref": "ScimName",
          "name": "name",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimPhoneNumber"
          },
          "name": "phoneNumbers",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimPhoto"
          },
          "name": "photos",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ]
          },
          "name": "schemas",
          "required": true
        },
        {
          "type": "string",
          "description": "User title",
          "name": "title",
          "required": false
        },
        {
          "$ref": "ScimEnterpriseUser",
          "name": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
          "required": false
        },
        {
          "type": "string",
          "description": "MUST be same as work type email address",
          "name": "userName",
          "required": true
        },
        {
          "$ref": "ScimMeta",
          "name": "meta",
          "required": false
        }
      ]
    },
    {
      "name": "ScimName",
      "fields": [
        {
          "type": "string",
          "name": "familyName",
          "required": true
        },
        {
          "type": "string",
          "name": "givenName",
          "required": true
        }
      ]
    },
    {
      "name": "ScimSearchRequest",
      "fields": [
        {
          "type": "integer",
          "description": "Page size",
          "format": "int32",
          "name": "count"
        },
        {
          "type": "string",
          "description": "Only support 'userName' or 'email' filter expressions for now",
          "name": "filter"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
            ]
          },
          "name": "schemas"
        },
        {
          "type": "integer",
          "description": "Start index (1-based)",
          "format": "int32",
          "name": "startIndex"
        }
      ]
    },
    {
      "name": "ScimUserPatch",
      "fields": [
        {
          "type": "array",
          "description": "Patch operations list",
          "items": {
            "$ref": "ScimPatchOperation"
          },
          "name": "Operations",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:api:messages:2.0:PatchOp"
            ]
          },
          "name": "schemas",
          "required": true
        }
      ]
    },
    {
      "name": "ScimPatchOperation",
      "fields": [
        {
          "type": "string",
          "enum": [
            "add",
            "replace",
            "remove"
          ],
          "name": "op",
          "required": true
        },
        {
          "type": "string",
          "name": "path",
          "required": false
        },
        {
          "type": "string",
          "description": "Corresponding 'value' of that field specified by 'path'",
          "name": "value",
          "required": false
        }
      ]
    },
    {
      "name": "ScimProviderConfig",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "ScimAuthenticationScheme"
          },
          "name": "authenticationSchemes"
        },
        {
          "$ref": "ScimBulkSupported",
          "name": "bulk"
        },
        {
          "$ref": "ScimSupported",
          "name": "changePassword"
        },
        {
          "$ref": "ScimSupported",
          "name": "etag"
        },
        {
          "$ref": "ScimFilterSupported",
          "name": "filter"
        },
        {
          "$ref": "ScimSupported",
          "name": "patch"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig"
            ]
          },
          "name": "schemas"
        },
        {
          "$ref": "ScimSupported",
          "name": "sort"
        },
        {
          "$ref": "ScimSupported",
          "name": "xmlDataFormat"
        }
      ]
    },
    {
      "name": "ScimFilterSupported",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "name": "maxResults"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "supported"
        }
      ]
    },
    {
      "name": "ScimAuthenticationScheme",
      "fields": [
        {
          "type": "string",
          "name": "description"
        },
        {
          "type": "string",
          "name": "documentationUri"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "specUri"
        },
        {
          "type": "boolean",
          "name": "primary"
        }
      ]
    },
    {
      "name": "ScimBulkSupported",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "name": "maxOperations"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "maxPayloadSize"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "supported"
        }
      ]
    },
    {
      "name": "ScimSupported",
      "fields": [
        {
          "type": "boolean",
          "default": false,
          "name": "supported"
        }
      ]
    },
    {
      "name": "ScimSchemaExtension",
      "fields": [
        {
          "type": "string",
          "enum": [
            "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"
          ],
          "name": "schema",
          "required": true
        },
        {
          "type": "boolean",
          "default": false,
          "name": "required",
          "required": true
        }
      ]
    },
    {
      "name": "ScimResourceTypeSearchResponse",
      "fields": [
        {
          "type": "array",
          "description": "Resource type list",
          "items": {
            "$ref": "ScimResourceTypeResponse"
          },
          "name": "Resources"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "itemsPerPage"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            ]
          },
          "name": "schemas"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "startIndex"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "totalResults"
        }
      ]
    },
    {
      "name": "ScimResourceTypeResponse",
      "fields": [
        {
          "type": "string",
          "description": "Unique resource type ID, same value as the \"name\" attribute",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Resource type name",
          "name": "name",
          "required": true
        },
        {
          "type": "string",
          "description": "The resource type's HTTP-addressable endpoint",
          "name": "endpoint",
          "required": true
        },
        {
          "type": "string",
          "description": "Description of the resource type",
          "name": "description",
          "required": false
        },
        {
          "type": "string",
          "enum": [
            "urn:ietf:params:scim:schemas:core:2.0:User"
          ],
          "name": "schema",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScimSchemaExtension"
          },
          "name": "schemaExtensions",
          "required": false
        },
        {
          "$ref": "ScimMeta",
          "name": "meta",
          "required": false
        }
      ]
    },
    {
      "name": "QueueOpportunities",
      "description": "Queue opportunities data for the specified grouping",
      "fields": [
        {
          "title": "ValueType",
          "description": "Unit of the result value",
          "type": "string",
          "enum": [
            "Percent",
            "Seconds",
            "Instances"
          ],
          "name": "valueType",
          "required": true
        },
        {
          "description": "Value for queue opportunities",
          "type": "number",
          "format": "double",
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "CallsByDirection",
      "description": "Data for calls with breakdown by direction (Inbound, Outbound)",
      "fields": [
        {
          "title": "ValueType",
          "description": "Unit of the result value",
          "type": "string",
          "enum": [
            "Percent",
            "Seconds",
            "Instances"
          ],
          "name": "valueType",
          "required": true
        },
        {
          "$ref": "CallsByDirectionBreakdown",
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "DirectGrouping",
      "description": "This grouping allows to specify the `groupBy` option by which the data in the response will be grouped",
      "fields": [
        {
          "title": "GroupingOptions",
          "description": "The selected grouping option",
          "type": "string",
          "enum": [
            "Company",
            "CompanyNumbers",
            "Users",
            "Queues",
            "IVRs",
            "SharedLines",
            "UserGroups",
            "Sites",
            "Departments"
          ],
          "name": "groupBy",
          "required": true
        },
        {
          "description": "This field can be used to specify unique identifiers of entities selected in `groupBy` field. The response data will be limited to these entities only",
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "keys",
          "required": false
        }
      ]
    },
    {
      "name": "CallsByOriginBreakdown",
      "description": "Result breakdown by origin",
      "fields": [
        {
          "description": "Value for Internal origin",
          "type": "number",
          "format": "double",
          "name": "internal",
          "required": true
        },
        {
          "description": "Value for External origin",
          "type": "number",
          "format": "double",
          "name": "external",
          "required": true
        }
      ]
    },
    {
      "name": "AdvancedTimeSettings",
      "description": "Allows more granular control over time included in the report",
      "fields": [
        {
          "description": "Days of the week for which the report is calculated",
          "type": "array",
          "items": {
            "title": "DayOfWeek",
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ]
          },
          "name": "includeDays"
        },
        {
          "description": "Hours of the day for which the report is calculated",
          "type": "array",
          "items": {
            "$ref": "HoursInterval"
          },
          "name": "includeHours"
        }
      ]
    },
    {
      "name": "CallsByActions",
      "description": "Data for calls with breakdown by action (HoldOff, HoldOn, ParkOn, ParkOff, BlindTransfer, WarmTransfer, DTMFTransfer)",
      "fields": [
        {
          "title": "ValueType",
          "description": "Unit of the result value",
          "type": "string",
          "enum": [
            "Percent",
            "Seconds",
            "Instances"
          ],
          "name": "valueType",
          "required": true
        },
        {
          "$ref": "CallsByActionsBreakdown",
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "CallsByResult",
      "description": "Data for calls with breakdown by result (Completed, Abandoned, Voicemail, Unknown, Missed, Accepted)",
      "fields": [
        {
          "title": "ValueType",
          "description": "Unit of the result value",
          "type": "string",
          "enum": [
            "Percent",
            "Seconds",
            "Instances"
          ],
          "name": "valueType",
          "required": true
        },
        {
          "$ref": "CallsByResultBreakdown",
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "CallsByResponse",
      "description": "Data for calls with breakdown by response (Answered, NotAnswered, Connected, NotConnected)",
      "fields": [
        {
          "title": "ValueType",
          "description": "Unit of the result value",
          "type": "string",
          "enum": [
            "Percent",
            "Seconds",
            "Instances"
          ],
          "name": "valueType",
          "required": true
        },
        {
          "$ref": "CallsByResponseBreakdown",
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "CallsCounters",
      "description": "Call volume data for the specified grouping",
      "fields": [
        {
          "$ref": "AllCalls",
          "name": "allCalls"
        },
        {
          "$ref": "CallsByDirection",
          "name": "callsByDirection"
        },
        {
          "$ref": "CallsByOrigin",
          "name": "callsByOrigin"
        },
        {
          "$ref": "CallsByResponse",
          "name": "callsByResponse"
        },
        {
          "$ref": "CallsBySegments",
          "name": "callsSegments"
        },
        {
          "$ref": "CallsByResult",
          "name": "callsByResult"
        },
        {
          "$ref": "CallsByActions",
          "name": "callsActions"
        },
        {
          "$ref": "CallsByCompanyHours",
          "name": "callsByCompanyHours"
        },
        {
          "$ref": "CallsByQueueSla",
          "name": "callsByQueueSla"
        },
        {
          "$ref": "CallsByType",
          "name": "callsByType"
        },
        {
          "$ref": "QueueOpportunities",
          "name": "queueOpportunities"
        }
      ]
    },
    {
      "name": "TimeSettings",
      "description": "Date-time range for the calls. The call is considered to be within time range if it started within time range. Both borders are inclusive",
      "fields": [
        {
          "description": "Name of the timezone that will be used for `includeDays` and `includeHours` filters and aggregation intervals. For example 'America/Los_Angeles', 'Europe/Zurich'. See also *[Time Zones](https://www.iana.org/time-zones)*. Value in this field doesn't affect interpretation of time in `timeRange`, as it already includes offset from UTC",
          "type": "string",
          "name": "timeZone",
          "required": true
        },
        {
          "$ref": "TimeRange",
          "name": "timeRange",
          "required": true
        },
        {
          "$ref": "AdvancedTimeSettings",
          "name": "advancedTimeSettings",
          "required": false
        }
      ]
    },
    {
      "name": "AllCalls",
      "description": "Data for all calls",
      "fields": [
        {
          "title": "ValueType",
          "description": "Unit of the result value",
          "type": "string",
          "enum": [
            "Percent",
            "Seconds",
            "Instances"
          ],
          "name": "valueType",
          "required": true
        },
        {
          "description": "Value for all calls",
          "type": "number",
          "format": "double",
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "Grouping",
      "description": "This grouping allows to specify the `groupByMembers` option. The response data will be grouped by users and will only include users that belong to the scope selected in `groupByMembers` field",
      "fields": [
        {
          "title": "GroupingOptions",
          "description": "The selected grouping option",
          "type": "string",
          "enum": [
            "Company",
            "CompanyNumbers",
            "Users",
            "Queues",
            "IVRs",
            "SharedLines",
            "UserGroups",
            "Sites",
            "Departments"
          ],
          "name": "groupBy",
          "required": true
        },
        {
          "description": "This field can be used to further limit the users selection by specifying unique identifiers of corresponding entities. For example, providing unique queue ids along with `Queue` in `groupByMembers` field will limit the response to users that are queue agents in at least one of these queues",
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "keys",
          "required": false
        },
        {
          "title": "MembersGroupingOptions",
          "description": "The selected data scope",
          "type": "string",
          "enum": [
            "Department",
            "UserGroup",
            "Queue",
            "Site"
          ],
          "name": "groupByMembers",
          "required": true
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCounters",
      "description": "The formula is defined by `aggregationType` and `aggregationInterval` for every counter individually.\nIf `aggregationType` is `Sum` or `Percent`, `aggregationInterval` is not supported.\nIf `aggregationType` is `Min`, `Max` or `Average`, `aggregationInterval` is required",
      "fields": [
        {
          "description": "Aggregation of all calls count",
          "$ref": "AggregationResponseOptionsCountersAllCalls",
          "name": "allCalls"
        },
        {
          "description": "Aggregation of calls count by direction (Inbound, Outbound)",
          "$ref": "AggregationResponseOptionsCountersCallsByDirection",
          "name": "callsByDirection"
        },
        {
          "description": "Aggregation of calls count by origin (Internal, External)",
          "$ref": "AggregationResponseOptionsCountersCallsByOrigin",
          "name": "callsByOrigin"
        },
        {
          "description": "Aggregation of calls count by response (Answered, NotAnswered, Connected, NotConnected)",
          "$ref": "AggregationResponseOptionsCountersCallsByResponse",
          "name": "callsByResponse"
        },
        {
          "description": "Aggregation of calls count by segments (Ringing, LiveTalk, Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)",
          "$ref": "AggregationResponseOptionsCountersCallsSegments",
          "name": "callsSegments"
        },
        {
          "description": "Aggregation of calls count by result (Completed, Abandoned, Voicemail, Unknown, Missed, Accepted)",
          "$ref": "AggregationResponseOptionsCountersCallsByResult",
          "name": "callsByResult"
        },
        {
          "description": "Aggregation of calls count by company hours (BusinessHours, AfterHours)",
          "$ref": "AggregationResponseOptionsCountersCallsByCompanyHours",
          "name": "callsByCompanyHours"
        },
        {
          "description": "Aggregation of calls count by queue SLA (InSLA, OutSLA). This counter is only applicable to Queues grouping",
          "$ref": "AggregationResponseOptionsCountersCallsByQueueSla",
          "name": "callsByQueueSla"
        },
        {
          "description": "Aggregation of calls count by action (HoldOff, HoldOn, ParkOn, ParkOff, BlindTransfer, WarmTransfer, DTMFTransfer)",
          "$ref": "AggregationResponseOptionsCountersCallsByActions",
          "name": "callsByActions"
        },
        {
          "description": "Aggregation of calls count by type (Direct, FromQueue, ParkRetrieval, Transferred, Outbound)",
          "$ref": "AggregationResponseOptionsCountersCallsByType",
          "name": "callsByType"
        },
        {
          "description": "Aggregation of calls count by the total number of times a Queue call was presented to the user. It is limited to `groupBy` Users and `groupByMembers` (Department, Queue, Site, UserGroup) grouping. Only the listed below options for call filters are applicable to `queueOpportunities` and provide meaningful results: `queues` (selected queue extension ids), `callResults` (Missed, Abandoned), `callResponses` (Answered, NotAnswered), `origins` (Internal, External)",
          "$ref": "AggregationResponseOptionsCountersQueueOpportunities",
          "name": "queueOpportunities"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsTimers",
      "description": "The formula is defined by `aggregationType` and `aggregationInterval` for every timer individually.\nIf `aggregationType` is `Sum` or `Percent`, `aggregationInterval` is not supported.\nIf `aggregationType` is `Min`, `Max` or `Average`, `aggregationInterval` is supported, but not required.\nIf left empty, aggregation will be performed on per-call basis",
      "fields": [
        {
          "description": "Aggregation of all calls duration",
          "$ref": "AggregationResponseOptionsTimersAllCallsDuration",
          "name": "allCallsDuration"
        },
        {
          "description": "Aggregation of calls duration by direction (Inbound, Outbound)",
          "$ref": "AggregationResponseOptionsTimersCallsDurationByDirection",
          "name": "callsDurationByDirection"
        },
        {
          "description": "Aggregation of calls duration by origin (Internal, External)",
          "$ref": "AggregationResponseOptionsTimersCallsDurationByOrigin",
          "name": "callsDurationByOrigin"
        },
        {
          "description": "Aggregation of calls duration by response (Answered, NotAnswered, Connected, NotConnected)",
          "$ref": "AggregationResponseOptionsTimersCallsDurationByResponse",
          "name": "callsDurationByResponse"
        },
        {
          "description": "Aggregation of calls duration by segments (Ringing, LiveTalk, Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)",
          "$ref": "AggregationResponseOptionsTimersCallsSegmentsDuration",
          "name": "callsSegmentsDuration"
        },
        {
          "description": "Aggregation of calls duration by result (Completed, Abandoned, Voicemail, Unknown, Missed, Accepted)",
          "$ref": "AggregationResponseOptionsTimersCallsDurationByResult",
          "name": "callsDurationByResult"
        },
        {
          "description": "Aggregation of calls duration by company hours (BusinessHours, AfterHours)",
          "$ref": "AggregationResponseOptionsTimersCallsDurationByCompanyHours",
          "name": "callsDurationByCompanyHours"
        },
        {
          "description": "Aggregation of calls duration by queue SLA (InSLA, OutSLA). This timer is only applicable to Queues grouping",
          "$ref": "AggregationResponseOptionsTimersCallsDurationByQueueSla",
          "name": "callsDurationByQueueSla"
        },
        {
          "description": "Aggregation of calls duration by type (Direct, FromQueue, ParkRetrieval, Transferred, Outbound)",
          "$ref": "AggregationResponseOptionsTimersCallsDurationByType",
          "name": "callsDurationByType"
        }
      ]
    },
    {
      "name": "TimeSpentFilter",
      "description": "Filtering of calls based on the time spent by specified mailbox(es) on call",
      "fields": [
        {
          "description": "Minimum duration in seconds",
          "type": "integer",
          "format": "int64",
          "name": "minSeconds"
        },
        {
          "description": "Maximum duration in seconds",
          "type": "integer",
          "format": "int64",
          "name": "maxSeconds"
        }
      ]
    },
    {
      "name": "AggregationResponse",
      "fields": [
        {
          "$ref": "ResponsePaging",
          "name": "paging",
          "required": true
        },
        {
          "$ref": "AggregationResponseData",
          "name": "data",
          "required": true
        }
      ]
    },
    {
      "name": "CallsByOrigin",
      "description": "Data for calls with breakdown by origin (Internal, External)",
      "fields": [
        {
          "title": "ValueType",
          "description": "Unit of the result value",
          "type": "string",
          "enum": [
            "Percent",
            "Seconds",
            "Instances"
          ],
          "name": "valueType",
          "required": true
        },
        {
          "$ref": "CallsByOriginBreakdown",
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "CallFilters",
      "description": "Optional filters that limit the scope of calls (joined via AND)",
      "fields": [
        {
          "$ref": "ExtensionFilters",
          "name": "extensionFilters"
        },
        {
          "description": "List of queues extension ids which allows to get data only for calls that were routed through any of these queues",
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "queues"
        },
        {
          "description": "The direct company numbers the caller called (joined via OR)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "calledNumbers"
        },
        {
          "description": "Specifies the call directions relative to the scope specified in grouping object (joined via OR). Not applicable to internal origin calls with company scope",
          "type": "array",
          "items": {
            "title": "Direction",
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          },
          "name": "directions"
        },
        {
          "description": "Specifies whether an external party was present in the initial segment of the call (joined via OR)",
          "type": "array",
          "items": {
            "title": "Origin",
            "type": "string",
            "enum": [
              "Internal",
              "External"
            ]
          },
          "name": "origins"
        },
        {
          "description": "Filtering of calls by first response (joined via OR)",
          "type": "array",
          "items": {
            "title": "CallResponse",
            "type": "string",
            "enum": [
              "Answered",
              "NotAnswered",
              "Connected",
              "NotConnected"
            ]
          },
          "name": "callResponses"
        },
        {
          "description": "Filtering of calls by the nature of call result (joined via OR)",
          "type": "array",
          "items": {
            "title": "CallResult",
            "type": "string",
            "enum": [
              "Completed",
              "Abandoned",
              "Voicemail",
              "Unknown",
              "Missed",
              "Accepted"
            ]
          },
          "name": "callResults"
        },
        {
          "description": "Filtering of calls by presence of specific segment (joined via OR)",
          "type": "array",
          "items": {
            "$ref": "CallSegmentFilter"
          },
          "name": "callSegments"
        },
        {
          "description": "Filtering of calls by presence of specific action (joined via OR)",
          "type": "array",
          "items": {
            "title": "CallAction",
            "type": "string",
            "enum": [
              "HoldOff",
              "HoldOn",
              "ParkOn",
              "ParkOff",
              "BlindTransfer",
              "WarmTransfer",
              "DTMFTransfer"
            ]
          },
          "name": "callActions"
        },
        {
          "description": "Filtering of calls by company's business hours or after hours (joined via OR)",
          "type": "array",
          "items": {
            "title": "CompanyHoursOptions",
            "type": "string",
            "enum": [
              "BusinessHours",
              "AfterHours"
            ]
          },
          "name": "companyHours"
        },
        {
          "$ref": "CallDurationFilter",
          "name": "callDuration"
        },
        {
          "$ref": "TimeSpentFilter",
          "name": "timeSpent"
        },
        {
          "description": "Filtering calls that were within or out of queue SLA (joined via OR). Only applicable to Queues grouping",
          "type": "array",
          "items": {
            "title": "QueueSlaOptions",
            "type": "string",
            "enum": [
              "InSla",
              "OutSla"
            ]
          },
          "name": "queueSla"
        },
        {
          "description": "Filtering of calls based on how the call started from the callee perspective (joined via OR). If the call is outbound relative to the grouping scope, CallType is Outbound",
          "type": "array",
          "items": {
            "title": "CallType",
            "type": "string",
            "enum": [
              "Direct",
              "FromQueue",
              "ParkRetrieval",
              "Transferred",
              "Outbound",
              "Overflow"
            ]
          },
          "name": "callTypes"
        }
      ]
    },
    {
      "name": "AggregationResponseOptions",
      "description": "This field provides mapping of possible breakdown options for call aggregation and aggregation formula",
      "fields": [
        {
          "$ref": "AggregationResponseOptionsCounters",
          "name": "counters"
        },
        {
          "$ref": "AggregationResponseOptionsTimers",
          "name": "timers"
        }
      ]
    },
    {
      "name": "CallsByDirectionBreakdown",
      "description": "Result breakdown by direction",
      "fields": [
        {
          "description": "Value for Inbound direction",
          "type": "number",
          "format": "double",
          "name": "inbound",
          "required": true
        },
        {
          "description": "Value for Outbound direction",
          "type": "number",
          "format": "double",
          "name": "outbound",
          "required": true
        }
      ]
    },
    {
      "name": "AggregationRequest",
      "fields": [
        {
          "$ref": "Grouping",
          "name": "grouping",
          "required": true
        },
        {
          "$ref": "TimeSettings",
          "name": "timeSettings",
          "required": true
        },
        {
          "$ref": "CallFilters",
          "name": "callFilters",
          "required": false
        },
        {
          "$ref": "AggregationResponseOptions",
          "name": "responseOptions",
          "required": true
        }
      ]
    },
    {
      "name": "CallSegmentLengthFilter",
      "description": "Duration bounds for the segment",
      "fields": [
        {
          "description": "Minimum duration of segment in seconds",
          "type": "integer",
          "format": "int64",
          "name": "minSeconds"
        },
        {
          "description": "Maximum duration of segment in seconds",
          "type": "integer",
          "format": "int64",
          "name": "maxSeconds"
        }
      ]
    },
    {
      "name": "CallsByQueueSla",
      "description": "Data for calls with breakdown by queue SLA (InSLA, OutSLA). This counter is only applicable to Queues grouping",
      "fields": [
        {
          "title": "ValueType",
          "description": "Unit of the result value",
          "type": "string",
          "enum": [
            "Percent",
            "Seconds",
            "Instances"
          ],
          "name": "valueType",
          "required": true
        },
        {
          "$ref": "CallsByQueueSlaBreakdown",
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "HoursInterval",
      "fields": [
        {
          "description": "Time in format hh:mm",
          "type": "string",
          "name": "from",
          "required": true
        },
        {
          "description": "Time in format hh:mm",
          "type": "string",
          "name": "to",
          "required": true
        }
      ]
    },
    {
      "name": "AggregationResponseData",
      "description": "Aggregation result",
      "fields": [
        {
          "title": "GroupingOptions",
          "description": "The selected grouping option",
          "type": "string",
          "enum": [
            "Company",
            "CompanyNumbers",
            "Users",
            "Queues",
            "IVRs",
            "SharedLines",
            "UserGroups",
            "Sites",
            "Departments"
          ],
          "name": "groupedBy",
          "required": true
        },
        {
          "description": "A list of call aggregations as per the grouping and filtering options specified in the request",
          "type": "array",
          "items": {
            "$ref": "AggregationResponseRecord"
          },
          "name": "records",
          "required": false
        }
      ]
    },
    {
      "name": "ResponsePaging",
      "description": "Paging information",
      "fields": [
        {
          "description": "The current page number",
          "type": "integer",
          "format": "int64",
          "name": "page",
          "required": true
        },
        {
          "description": "How many items are displayed on the page",
          "type": "integer",
          "format": "int64",
          "name": "perPage",
          "required": true
        },
        {
          "description": "The total number of pages",
          "type": "integer",
          "format": "int64",
          "name": "totalPages",
          "required": true
        },
        {
          "description": "The total number of items in the dataset",
          "type": "integer",
          "format": "int64",
          "name": "totalElements",
          "required": true
        }
      ]
    },
    {
      "name": "CallsByActionsBreakdown",
      "description": "Result breakdown by actions",
      "fields": [
        {
          "description": "Value for ParkOn action",
          "type": "number",
          "format": "double",
          "name": "parkOn",
          "required": true
        },
        {
          "description": "Value for ParkOff action",
          "type": "number",
          "format": "double",
          "name": "parkOff",
          "required": true
        },
        {
          "description": "Value for HoldOn action",
          "type": "number",
          "format": "double",
          "name": "holdOn",
          "required": true
        },
        {
          "description": "Value for HoldOff action",
          "type": "number",
          "format": "double",
          "name": "holdOff",
          "required": true
        },
        {
          "description": "Value for BlindTransfer action",
          "type": "number",
          "format": "double",
          "name": "blindTransfer",
          "required": true
        },
        {
          "description": "Value for WarmTransfer action",
          "type": "number",
          "format": "double",
          "name": "warmTransfer",
          "required": true
        },
        {
          "description": "Value for DTMFTransfer action",
          "type": "number",
          "format": "double",
          "name": "dtmfTransfer",
          "required": true
        }
      ]
    },
    {
      "name": "ExtensionFilters",
      "description": "Specifies filtering based on extension ids",
      "fields": [
        {
          "description": "List of extension ids to match against incoming calls, joined via OR condition. Only applicable for `groupByMembers` options and Users, IVRs, SharedLines and Queues in `groupBy`",
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "fromIds"
        },
        {
          "description": "List of extension ids to match against outgoing calls, joined via OR condition. Limited to the extension id that first accepted the call. Only applicable for `groupByMembers` options and Users, IVRs and SharedLines in `groupBy`",
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "toIds"
        }
      ]
    },
    {
      "name": "CallsByResponseBreakdown",
      "description": "Result breakdown by response",
      "fields": [
        {
          "description": "Value for Answered response",
          "type": "number",
          "format": "double",
          "name": "answered",
          "required": true
        },
        {
          "description": "Value for NotAnswered response",
          "type": "number",
          "format": "double",
          "name": "notAnswered",
          "required": true
        },
        {
          "description": "Value for Connected response",
          "type": "number",
          "format": "double",
          "name": "connected",
          "required": true
        },
        {
          "description": "Value for NotConnected response",
          "type": "number",
          "format": "double",
          "name": "notConnected",
          "required": true
        }
      ]
    },
    {
      "name": "CallSegmentFilter",
      "fields": [
        {
          "title": "CallSegmentOptions",
          "description": "Call segment for filtering",
          "type": "string",
          "enum": [
            "Ringing",
            "LiveTalk",
            "Hold",
            "Park",
            "Transfer",
            "IvrPrompt",
            "Voicemail",
            "VmGreeting",
            "Setup"
          ],
          "name": "segment",
          "required": true
        },
        {
          "$ref": "CallSegmentLengthFilter",
          "name": "length",
          "required": false
        }
      ]
    },
    {
      "name": "GroupingByMembers",
      "description": "This grouping allows to specify the `groupByMembers` option. The response data will be grouped by users and will only include users that belong to the scope selected in `groupByMembers` field",
      "fields": [
        {
          "title": "MembersGroupingOptions",
          "description": "The selected data scope",
          "type": "string",
          "enum": [
            "Department",
            "UserGroup",
            "Queue",
            "Site"
          ],
          "name": "groupByMembers",
          "required": true
        },
        {
          "description": "This field can be used to further limit the users selection by specifying unique identifiers of corresponding entities. For example, providing unique queue ids along with `Queue` in `groupByMembers` field will limit the response to users that are queue agents in at least one of these queues",
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "keys",
          "required": false
        }
      ]
    },
    {
      "name": "CallsByResultBreakdown",
      "description": "Result breakdown by call result",
      "fields": [
        {
          "description": "Value for Completed result",
          "type": "number",
          "format": "double",
          "name": "completed",
          "required": true
        },
        {
          "description": "Value for Abandoned result",
          "type": "number",
          "format": "double",
          "name": "abandoned",
          "required": true
        },
        {
          "description": "Value for Voicemail result",
          "type": "number",
          "format": "double",
          "name": "voicemail",
          "required": true
        },
        {
          "description": "Value for Missed result",
          "type": "number",
          "format": "double",
          "name": "missed",
          "required": true
        },
        {
          "description": "Value for Accepted result",
          "type": "number",
          "format": "double",
          "name": "accepted",
          "required": true
        },
        {
          "description": "Value for Unknown result",
          "type": "number",
          "format": "double",
          "name": "unknown",
          "required": true
        }
      ]
    },
    {
      "name": "CallsByCompanyHours",
      "description": "Data for calls with breakdown by company hours (BusinessHours, AfterHours)",
      "fields": [
        {
          "title": "ValueType",
          "description": "Unit of the result value",
          "type": "string",
          "enum": [
            "Percent",
            "Seconds",
            "Instances"
          ],
          "name": "valueType",
          "required": true
        },
        {
          "$ref": "CallsByCompanyHoursBreakdown",
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "CallsByCompanyHoursBreakdown",
      "description": "Result breakdown by company hours",
      "fields": [
        {
          "description": "Value for BusinessHours company hours",
          "type": "number",
          "format": "double",
          "name": "businessHours",
          "required": true
        },
        {
          "description": "Value for AfterHours company hours",
          "type": "number",
          "format": "double",
          "name": "afterHours",
          "required": true
        }
      ]
    },
    {
      "name": "CallDurationFilter",
      "description": "Filtering of calls based on the overall call length",
      "fields": [
        {
          "description": "Minimum duration of call in seconds",
          "type": "integer",
          "format": "int64",
          "name": "minSeconds"
        },
        {
          "description": "Maximum duration of call in seconds",
          "type": "integer",
          "format": "int64",
          "name": "maxSeconds"
        }
      ]
    },
    {
      "name": "CallsByQueueSlaBreakdown",
      "description": "Result breakdown by queue SLA",
      "fields": [
        {
          "description": "Value for InSla queue SLA",
          "type": "number",
          "format": "double",
          "name": "inSla",
          "required": true
        },
        {
          "description": "Value for OutSla queue SLA",
          "type": "number",
          "format": "double",
          "name": "outOfSla",
          "required": true
        }
      ]
    },
    {
      "name": "CallsBySegments",
      "description": "Data for calls with breakdown by segments (Ringing, LiveTalk, Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)",
      "fields": [
        {
          "title": "ValueType",
          "description": "Unit of the result value",
          "type": "string",
          "enum": [
            "Percent",
            "Seconds",
            "Instances"
          ],
          "name": "valueType",
          "required": true
        },
        {
          "$ref": "CallsBySegmentsBreakdown",
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "CallsByTypeBreakdown",
      "description": "Result breakdown by type",
      "fields": [
        {
          "description": "Value for Direct type",
          "type": "number",
          "format": "double",
          "name": "direct",
          "required": true
        },
        {
          "description": "Value for FromQueue type",
          "type": "number",
          "format": "double",
          "name": "fromQueue",
          "required": true
        },
        {
          "description": "Value for ParkRetrieval type",
          "type": "number",
          "format": "double",
          "name": "parkRetrieval",
          "required": true
        },
        {
          "description": "Value for Transferred type",
          "type": "number",
          "format": "double",
          "name": "transferred",
          "required": true
        },
        {
          "description": "Value for Outbound type",
          "type": "number",
          "format": "double",
          "name": "outbound",
          "required": true
        },
        {
          "description": "Value for Overflow type",
          "type": "number",
          "format": "double",
          "name": "overflow",
          "required": true
        }
      ]
    },
    {
      "name": "CallsByType",
      "description": "Data for calls with breakdown by type (Direct, FromQueue, ParkRetrieval, Transferred, Outbound, Overflow)",
      "fields": [
        {
          "title": "ValueType",
          "description": "Unit of the result value",
          "type": "string",
          "enum": [
            "Percent",
            "Seconds",
            "Instances"
          ],
          "name": "valueType",
          "required": true
        },
        {
          "$ref": "CallsByTypeBreakdown",
          "name": "values",
          "required": true
        }
      ]
    },
    {
      "name": "CallsBySegmentsBreakdown",
      "description": "Result breakdown by segments",
      "fields": [
        {
          "description": "Value for Ringing segment",
          "type": "number",
          "format": "double",
          "name": "ringing",
          "required": true
        },
        {
          "description": "Value for LiveTalk segment",
          "type": "number",
          "format": "double",
          "name": "liveTalk",
          "required": true
        },
        {
          "description": "Value for Hold segment",
          "type": "number",
          "format": "double",
          "name": "hold",
          "required": true
        },
        {
          "description": "Value for Park segment",
          "type": "number",
          "format": "double",
          "name": "park",
          "required": true
        },
        {
          "description": "Value for Transfer segment",
          "type": "number",
          "format": "double",
          "name": "transfer",
          "required": true
        },
        {
          "description": "Value for IVRPrompt segment",
          "type": "number",
          "format": "double",
          "name": "ivrPrompt",
          "required": true
        },
        {
          "description": "Value for Voicemail segment",
          "type": "number",
          "format": "double",
          "name": "voicemail",
          "required": true
        },
        {
          "description": "Value for VMGreeting segment",
          "type": "number",
          "format": "double",
          "name": "vmGreeting",
          "required": true
        },
        {
          "description": "Value for Setup segment",
          "type": "number",
          "format": "double",
          "name": "setup",
          "required": true
        }
      ]
    },
    {
      "name": "AggregationResponseRecord",
      "fields": [
        {
          "description": "Grouping key",
          "type": "string",
          "name": "key",
          "required": true
        },
        {
          "$ref": "KeyInfo",
          "name": "info",
          "required": false
        },
        {
          "$ref": "CallsTimers",
          "name": "timers",
          "required": false
        },
        {
          "$ref": "CallsCounters",
          "name": "counters",
          "required": false
        }
      ]
    },
    {
      "name": "KeyInfo",
      "description": "Additional info about the key",
      "fields": [
        {
          "description": "Extension's number",
          "type": "string",
          "name": "extensionNumber"
        },
        {
          "description": "Extension's name",
          "type": "string",
          "name": "name"
        }
      ]
    },
    {
      "name": "CallsTimers",
      "description": "Call length data for the specified grouping",
      "fields": [
        {
          "$ref": "AllCalls",
          "name": "allCalls"
        },
        {
          "$ref": "CallsByDirection",
          "name": "callsByDirection"
        },
        {
          "$ref": "CallsByOrigin",
          "name": "callsByOrigin"
        },
        {
          "$ref": "CallsByResponse",
          "name": "callsByResponse"
        },
        {
          "$ref": "CallsBySegments",
          "name": "callsSegments"
        },
        {
          "$ref": "CallsByResult",
          "name": "callsByResult"
        },
        {
          "$ref": "CallsByCompanyHours",
          "name": "callsByCompanyHours"
        },
        {
          "$ref": "CallsByQueueSla",
          "name": "callsByQueueSla"
        },
        {
          "$ref": "CallsByType",
          "name": "callsByType"
        }
      ]
    },
    {
      "name": "TimeRange",
      "description": "Time range for the request",
      "fields": [
        {
          "description": "The start date-time for resulting records in RFC 3339 format including offset between local time and UTC, for example 2016-03-15T18:07:52.534Z",
          "type": "string",
          "format": "date-time",
          "name": "timeFrom",
          "required": true
        },
        {
          "description": "The end date-time for resulting records in RFC 3339 format including offset between local time and UTC, for example 2016-03-15T18:07:52.534Z",
          "type": "string",
          "format": "date-time",
          "name": "timeTo",
          "required": true
        }
      ]
    },
    {
      "name": "TimelineResponsePoint",
      "fields": [
        {
          "description": "Time point in RFC 3339 format",
          "type": "string",
          "format": "date-time",
          "name": "time",
          "required": true
        },
        {
          "$ref": "CallsTimers",
          "name": "timers",
          "required": false
        },
        {
          "$ref": "CallsCounters",
          "name": "counters",
          "required": false
        }
      ]
    },
    {
      "name": "TimelineResponse",
      "fields": [
        {
          "$ref": "ResponsePaging",
          "name": "paging",
          "required": true
        },
        {
          "$ref": "TimelineResponseData",
          "name": "data",
          "required": true
        }
      ]
    },
    {
      "name": "TimelineResponseOptions",
      "description": "Counters and timers options for calls breakdown",
      "fields": [
        {
          "$ref": "TimelineResponseOptionsCounters",
          "name": "counters"
        },
        {
          "$ref": "TimelineResponseOptionsTimers",
          "name": "timers"
        }
      ]
    },
    {
      "name": "TimelineResponseOptionsTimers",
      "description": "Options for selecting breakdown for calls duration",
      "fields": [
        {
          "description": "Include data for all calls duration",
          "type": "boolean",
          "name": "allCallsDuration"
        },
        {
          "description": "Include breakdown of calls duration by direction (Inbound, Outbound)",
          "type": "boolean",
          "name": "callsDurationByDirection"
        },
        {
          "description": "Include breakdown of calls duration by origin (Internal, External)",
          "type": "boolean",
          "name": "callsDurationByOrigin"
        },
        {
          "description": "Include breakdown of calls duration by response (Answered, NotAnswered, Connected, NotConnected)",
          "type": "boolean",
          "name": "callsDurationByResponse"
        },
        {
          "description": "Include breakdown of calls duration by segments (Ringing, LiveTalk, Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)",
          "type": "boolean",
          "name": "callsSegmentsDuration"
        },
        {
          "description": "Include breakdown of calls duration by result (Completed, Abandoned, Voicemail, Unknown, Missed, Accepted)",
          "type": "boolean",
          "name": "callsDurationByResult"
        },
        {
          "description": "Include breakdown of calls duration by company hours (BusinessHours, AfterHours)",
          "type": "boolean",
          "name": "callsDurationByCompanyHours"
        },
        {
          "description": "Include breakdown of calls duration by queue SLA (InSLA, OutSLA). This timer is only applicable to Queues grouping",
          "type": "boolean",
          "name": "callsDurationByQueueSla"
        },
        {
          "description": "Include breakdown of calls duration by type (Direct, FromQueue, ParkRetrieval, Transferred, Outbound)",
          "type": "boolean",
          "name": "callsDurationByType"
        }
      ]
    },
    {
      "name": "TimelineResponseRecord",
      "fields": [
        {
          "description": "Grouping key",
          "type": "string",
          "name": "key",
          "required": true
        },
        {
          "$ref": "KeyInfo",
          "name": "info",
          "required": false
        },
        {
          "description": "List of requested call data time-value points",
          "type": "array",
          "items": {
            "$ref": "TimelineResponsePoint"
          },
          "name": "points",
          "required": false
        }
      ]
    },
    {
      "name": "TimelineResponseOptionsCounters",
      "description": "Options for selecting breakdown for calls count",
      "fields": [
        {
          "description": "Include data for total calls count",
          "type": "boolean",
          "name": "allCalls"
        },
        {
          "description": "Include breakdown of calls count by direction (Inbound, Outbound)",
          "type": "boolean",
          "name": "callsByDirection"
        },
        {
          "description": "Include breakdown of calls count by origin (Internal, External)",
          "type": "boolean",
          "name": "callsByOrigin"
        },
        {
          "description": "Include breakdown of calls count by response (Answered, NotAnswered, Connected, NotConnected)",
          "type": "boolean",
          "name": "callsByResponse"
        },
        {
          "description": "Include breakdown of calls count by segments (Ringing, LiveTalk, Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)",
          "type": "boolean",
          "name": "callsSegments"
        },
        {
          "description": "Include breakdown of calls count by result (Completed, Abandoned, Voicemail, Unknown, Missed, Accepted)",
          "type": "boolean",
          "name": "callsByResult"
        },
        {
          "description": "Include breakdown of calls count by company hours (BusinessHours, AfterHours)",
          "type": "boolean",
          "name": "callsByCompanyHours"
        },
        {
          "description": "Include breakdown of calls count by queue SLA (InSLA, OutSLA). This counter is only applicable to Queues grouping",
          "type": "boolean",
          "name": "callsByQueueSla"
        },
        {
          "description": "Include breakdown of calls count by action (HoldOff, HoldOn, ParkOn, ParkOff, BlindTransfer, WarmTransfer, DTMFTransfer)",
          "type": "boolean",
          "name": "callsByActions"
        },
        {
          "description": "Include breakdown of calls count by type (Direct, FromQueue, ParkRetrieval, Transferred, Outbound)",
          "type": "boolean",
          "name": "callsByType"
        },
        {
          "description": "Include breakdown of calls count by the total number of times a Queue call was presented to the user. It is limited to `groupBy` Users and `groupByMembers` (Department, Queue, Site, UserGroup) grouping. Only the listed below options for call filters are applicable to `queueOpportunities` and provide meaningful results: `queues` (selected queue extension ids), `callResults` (Missed, Abandoned), `callResponses` (Answered, NotAnswered), `origins` (Internal, External)",
          "type": "boolean",
          "name": "queueOpportunities"
        }
      ]
    },
    {
      "name": "TimelineRequest",
      "fields": [
        {
          "$ref": "Grouping",
          "name": "grouping",
          "required": true
        },
        {
          "$ref": "TimeSettings",
          "name": "timeSettings",
          "required": true
        },
        {
          "$ref": "CallFilters",
          "name": "callFilters",
          "required": false
        },
        {
          "$ref": "TimelineResponseOptions",
          "name": "responseOptions",
          "required": true
        }
      ]
    },
    {
      "name": "TimelineResponseData",
      "description": "A list of time-value points of call data as per the grouping and filtering options specified in the request",
      "fields": [
        {
          "title": "GroupingOptions",
          "description": "The selected grouping option",
          "type": "string",
          "enum": [
            "Company",
            "CompanyNumbers",
            "Users",
            "Queues",
            "IVRs",
            "SharedLines",
            "UserGroups",
            "Sites",
            "Departments"
          ],
          "name": "groupedBy",
          "required": true
        },
        {
          "description": "List of call data as per the grouping and filtering options specified in the request",
          "type": "array",
          "items": {
            "$ref": "TimelineResponseRecord"
          },
          "name": "records",
          "required": false
        }
      ]
    },
    {
      "name": "TaskRecurrenceInfo",
      "description": "Task information",
      "fields": [
        {
          "type": "string",
          "description": "Recurrence settings of a task. None for non-periodic tasks",
          "default": "None",
          "enum": [
            "None",
            "Daily",
            "Weekdays",
            "Weekly",
            "Monthly",
            "Yearly"
          ],
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Ending condition of a task",
          "default": "None",
          "enum": [
            "None",
            "Count",
            "Date"
          ],
          "name": "endingCondition"
        },
        {
          "maximum": 10,
          "minimum": 1,
          "type": "integer",
          "format": "int32",
          "description": "Count of iterations of periodic tasks",
          "name": "endingAfter"
        },
        {
          "type": "string",
          "description": "End date of a periodic task in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat, UTC time zone\n",
          "format": "date-time",
          "name": "endingOn"
        }
      ]
    },
    {
      "name": "TMUpdateTaskRequest",
      "fields": [
        {
          "type": "string",
          "description": "Task name/subject. Max allowed length is 250 characters.",
          "name": "subject"
        },
        {
          "type": "array",
          "items": {
            "$ref": "TMUpdateTaskRequestAssignees"
          },
          "name": "assignees"
        },
        {
          "type": "string",
          "enum": [
            "Simple",
            "AllAssignees",
            "Percentage"
          ],
          "name": "completenessCondition"
        },
        {
          "type": "string",
          "description": "Task start date in UTC time zone",
          "format": "date-time",
          "name": "startDate"
        },
        {
          "type": "string",
          "description": "Task due date/time in UTC time zone",
          "format": "date-time",
          "name": "dueDate"
        },
        {
          "type": "string",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color"
        },
        {
          "type": "string",
          "description": "Task section to group / search by. Max allowed length is 100 characters.",
          "name": "section"
        },
        {
          "type": "string",
          "description": "Task details. Max allowed length is 102400 characters (100kB)",
          "name": "description"
        },
        {
          "$ref": "TaskRecurrenceInfo",
          "name": "recurrence"
        },
        {
          "type": "array",
          "items": {
            "$ref": "TMAttachmentInfo"
          },
          "name": "attachments"
        }
      ]
    },
    {
      "name": "TMTaskList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "TMTaskInfo"
          },
          "name": "records"
        },
        {
          "$ref": "TMNavigationInfo",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "TMAttachmentInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an attachment",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of an attachment",
          "enum": [
            "File",
            "Note",
            "Event",
            "Card"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "TMTaskInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Task creation date/time in UTC time zone",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Task the last modified time in UTC time zone",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Task type",
          "enum": [
            "Task"
          ],
          "name": "type"
        },
        {
          "$ref": "TMTaskInfoCreator",
          "name": "creator"
        },
        {
          "type": "array",
          "description": "Internal identifiers of the chats where the task is posted or shared",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        },
        {
          "type": "string",
          "description": "Task execution status",
          "enum": [
            "Pending",
            "InProgress",
            "Completed"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Task name/subject",
          "name": "subject"
        },
        {
          "type": "array",
          "description": "Task name/subject",
          "items": {
            "$ref": "TMTaskInfoAssignees"
          },
          "name": "assignees"
        },
        {
          "type": "string",
          "description": "How the task completeness should be determined",
          "enum": [
            "Simple",
            "AllAssignees",
            "Percentage"
          ],
          "name": "completenessCondition"
        },
        {
          "maximum": 100,
          "minimum": 0,
          "type": "integer",
          "format": "int32",
          "description": "Current completeness percentage of the task with the specified percentage completeness condition",
          "name": "completenessPercentage"
        },
        {
          "type": "string",
          "description": "Task start date",
          "format": "date-time",
          "name": "startDate"
        },
        {
          "type": "string",
          "description": "Task due date/time",
          "format": "date-time",
          "name": "dueDate"
        },
        {
          "type": "string",
          "description": "Font color of a post with the current task",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color"
        },
        {
          "type": "string",
          "description": "Task section to group / search by",
          "name": "section"
        },
        {
          "type": "string",
          "description": "Task details",
          "name": "description"
        },
        {
          "$ref": "TaskRecurrenceInfo",
          "name": "recurrence"
        },
        {
          "type": "array",
          "items": {
            "$ref": "TaskAttachment"
          },
          "name": "attachments"
        }
      ]
    },
    {
      "name": "TaskAttachment",
      "fields": [
        {
          "type": "string",
          "description": "File ID.",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Possible value - File. Attachment type (currently, only File is possible)",
          "enum": [
            "File"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of the attached file (incl. extension name)",
          "name": "name"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "URI",
          "name": "contentUri"
        }
      ]
    },
    {
      "name": "TMNavigationInfo",
      "fields": [
        {
          "type": "string",
          "description": "Previous page token. To get previous page, user should pass one of returned token in next request and, in turn, required page will be returned with new tokens",
          "name": "prevPageToken"
        },
        {
          "type": "string",
          "description": "Next page token. To get next page, user should pass one of returned token in next request and, in turn, required page will be returned with new tokens",
          "name": "nextPageToken"
        }
      ]
    },
    {
      "name": "TMCompleteTaskRequest",
      "fields": [
        {
          "type": "string",
          "description": "Completeness status",
          "enum": [
            "Incomplete",
            "Complete"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "TMCompleteTaskRequestAssignees"
          },
          "name": "assignees"
        },
        {
          "maximum": 100,
          "minimum": 0,
          "type": "integer",
          "format": "int32",
          "name": "completenessPercentage"
        }
      ]
    },
    {
      "name": "EventRecurrenceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Event recurrence settings. For non-periodic events the value\nis `None`. Must be greater or equal to event duration: 1- Day/Weekday;\n7 - Week; 28 - Month; 365 - Year\n",
          "enum": [
            "None",
            "Day",
            "Weekday",
            "Week",
            "Month",
            "Year"
          ],
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Condition of ending an event",
          "enum": [
            "None",
            "Count",
            "Date"
          ],
          "name": "endingCondition"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Count of event iterations. For periodic events only. Value range is 1 - 10.\nMust be specified if `endingCondition` is `Count`\n",
          "name": "endingAfter"
        },
        {
          "type": "string",
          "description": "Iterations ending datetime for periodic events in\n[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format\n",
          "format": "date-time",
          "name": "endingOn"
        }
      ]
    },
    {
      "name": "TMEventInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an event",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of a person created an event",
          "name": "creatorId"
        },
        {
          "type": "string",
          "description": "Event title",
          "name": "title"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime of starting an event",
          "name": "startTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime of ending an event",
          "name": "endTime"
        },
        {
          "type": "boolean",
          "description": "Indicates whether an event has some specific time slot or lasts for the whole day(s)",
          "default": false,
          "name": "allDay"
        },
        {
          "$ref": "EventRecurrenceInfo",
          "name": "recurrence"
        },
        {
          "type": "string",
          "description": "Color of Event title (including its presentation in Calendar)",
          "default": "Black",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color"
        },
        {
          "type": "string",
          "description": "Event location",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Event details",
          "name": "description"
        }
      ]
    },
    {
      "name": "TMEventList",
      "fields": [
        {
          "type": "array",
          "description": "List of events created by the current user",
          "items": {
            "$ref": "TMEventInfo"
          },
          "name": "records"
        },
        {
          "$ref": "TMNavigationInfo",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "TMCreateEventRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an event",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Internal identifier of a person created an event",
          "name": "creatorId",
          "required": false
        },
        {
          "type": "string",
          "description": "Event title",
          "name": "title",
          "required": true
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime of starting an event",
          "name": "startTime",
          "required": true
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime of ending an event",
          "name": "endTime",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Indicates whether event has some specific time slot or lasts for whole day(s)",
          "default": false,
          "name": "allDay",
          "required": false
        },
        {
          "$ref": "EventRecurrenceInfo",
          "name": "recurrence",
          "required": false
        },
        {
          "type": "string",
          "description": "Color of Event title (including its presentation in Calendar)",
          "default": "Black",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color",
          "required": false
        },
        {
          "type": "string",
          "description": "Event location",
          "name": "location",
          "required": false
        },
        {
          "type": "string",
          "description": "Event details",
          "name": "description",
          "required": false
        }
      ]
    },
    {
      "name": "TMChatListWithoutNavigation",
      "fields": [
        {
          "type": "array",
          "description": "List of chats",
          "items": {
            "$ref": "TMChatInfo"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "TMChatInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a chat",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of chat",
          "enum": [
            "Everyone",
            "Team",
            "Group",
            "Direct",
            "Personal"
          ],
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "For 'Team' chat type only. Team access level.",
          "name": "public"
        },
        {
          "type": "string",
          "description": "For 'Team','Everyone' chats types only. Chat name.",
          "name": "name"
        },
        {
          "type": "string",
          "description": "For 'Team','Everyone' chats types only. Chat description.",
          "name": "description"
        },
        {
          "type": "string",
          "description": "For 'Team' chat type only. Team status.",
          "enum": [
            "Active",
            "Archived"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Chat creation datetime in ISO 8601 format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Chat last change datetime in ISO 8601 format",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "array",
          "items": {
            "$ref": "TMChatMemberInfo"
          },
          "name": "members"
        }
      ]
    },
    {
      "name": "TMChatMemberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user",
          "name": "id"
        }
      ]
    },
    {
      "name": "TMAddFileRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a file",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to binary content",
          "name": "contentUri",
          "required": true
        },
        {
          "type": "string",
          "description": "Name of a file",
          "name": "name",
          "required": false
        }
      ]
    },
    {
      "name": "TMChatList",
      "fields": [
        {
          "type": "array",
          "description": "List of chats",
          "items": {
            "$ref": "TMChatInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "TMNavigationInfo",
          "name": "navigation",
          "required": false
        }
      ]
    },
    {
      "name": "TMCreateTaskRequest",
      "fields": [
        {
          "type": "string",
          "description": "Task name/subject. Max allowed length is 250 characters",
          "name": "subject",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "TMCreateTaskRequestAssignees"
          },
          "name": "assignees",
          "required": true
        },
        {
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "AllAssignees",
            "Percentage"
          ],
          "name": "completenessCondition",
          "required": false
        },
        {
          "type": "string",
          "description": "Task start date in UTC time zone.",
          "format": "date-time",
          "name": "startDate",
          "required": false
        },
        {
          "type": "string",
          "description": "Task due date/time in UTC time zone.",
          "format": "date-time",
          "name": "dueDate",
          "required": false
        },
        {
          "type": "string",
          "default": "Black",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color",
          "required": false
        },
        {
          "type": "string",
          "description": "Task section to group / search by. Max allowed length is 100 characters.",
          "name": "section",
          "required": false
        },
        {
          "type": "string",
          "description": "Task details. Max allowed length is 102400 characters (100kB).",
          "name": "description",
          "required": false
        },
        {
          "$ref": "TaskRecurrenceInfo",
          "name": "recurrence",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "TaskAttachment"
          },
          "name": "attachments",
          "required": false
        }
      ]
    },
    {
      "name": "TMMessageAttachmentInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an attachment",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of an attachment",
          "default": "Card",
          "enum": [
            "Card",
            "Event",
            "File",
            "Note",
            "Task"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a binary content",
          "name": "contentUri"
        },
        {
          "type": "string",
          "description": "Name of a file",
          "name": "name"
        },
        {
          "type": "string",
          "description": "A string of default text that will be rendered in the case that the client does not support Interactive Messages",
          "name": "fallback"
        },
        {
          "type": "string",
          "description": "A pretext to the message",
          "name": "intro"
        },
        {
          "$ref": "TMAttachmentAuthorInfo",
          "name": "author"
        },
        {
          "type": "string",
          "description": "Message title",
          "name": "title"
        },
        {
          "type": "string",
          "description": "A large string field (up to 1000 chars) to be displayed as the body of a message (Supports GlipDown)",
          "name": "text"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an image displayed at the bottom of a message",
          "name": "imageUri"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an image preview displayed to the right of a message (82x82)",
          "name": "thumbnailUri"
        },
        {
          "type": "array",
          "description": "Information on navigation",
          "items": {
            "$ref": "TMAttachmentFieldsInfo"
          },
          "name": "fields"
        },
        {
          "$ref": "TMAttachmentFootnoteInfo",
          "name": "footnote"
        },
        {
          "type": "string",
          "description": "Internal identifier of a person created an event",
          "name": "creatorId"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime of starting an event",
          "name": "startTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime of ending an event",
          "name": "endTime"
        },
        {
          "type": "boolean",
          "description": "Indicates whether an event has some specific time slot or lasts for the whole day(s)",
          "default": false,
          "name": "allDay"
        },
        {
          "$ref": "EventRecurrenceInfo",
          "name": "recurrence"
        },
        {
          "type": "string",
          "description": "Color of Event title, including its presentation in Calendar; or the color of the side border of an interactive message of a Card",
          "default": "Black",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color"
        },
        {
          "type": "string",
          "description": "Event location",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Event details",
          "name": "description"
        }
      ]
    },
    {
      "name": "TMMentionsInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of mention",
          "enum": [
            "Person",
            "Team",
            "File",
            "Link",
            "Event",
            "Task",
            "Note",
            "Card"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of a user",
          "name": "name"
        }
      ]
    },
    {
      "name": "TMAttachmentFieldsInfo",
      "fields": [
        {
          "type": "string",
          "description": "Title of an individual field",
          "name": "title"
        },
        {
          "type": "string",
          "description": "Value of an individual field (supports Markdown)",
          "name": "value"
        },
        {
          "type": "string",
          "description": "Style of width span applied to a field",
          "default": "Short",
          "enum": [
            "Short",
            "Long"
          ],
          "name": "style"
        }
      ]
    },
    {
      "name": "TMCreatePostRequest",
      "description": "Post data. At least one attribute should be provided (text or attachments)",
      "fields": [
        {
          "type": "string",
          "description": "Text of a post. Maximum length is 10000 symbols. Mentions can be added in .md format `![:Type](id)`",
          "name": "text"
        },
        {
          "type": "array",
          "description": "Identifier(s) of attachments. Maximum number of attachments is 25",
          "items": {
            "$ref": "TMAttachmentInfo"
          },
          "name": "attachments"
        }
      ]
    },
    {
      "name": "TMPostInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a post",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of a group a post belongs to",
          "name": "groupId"
        },
        {
          "type": "string",
          "description": "Type of post",
          "enum": [
            "TextMessage",
            "PersonJoined",
            "PersonsAdded"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "For 'TextMessage' post type only. Text of a message",
          "name": "text"
        },
        {
          "type": "string",
          "description": "Internal identifier of a user - author of a post",
          "name": "creatorId"
        },
        {
          "type": "array",
          "description": "For 'PersonsAdded' post type only. Identifiers of persons added to a group",
          "items": {
            "type": "string"
          },
          "name": "addedPersonIds"
        },
        {
          "type": "string",
          "description": "Post creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Post last modification datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "array",
          "description": "List of posted attachments",
          "items": {
            "$ref": "TMMessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "array",
          "items": {
            "$ref": "TMMentionsInfo"
          },
          "name": "mentions"
        },
        {
          "type": "string",
          "description": "Label of activity type",
          "name": "activity"
        },
        {
          "type": "string",
          "description": "Title of a message. (Can be set for bot's messages only)",
          "name": "title"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an image used as an icon for this message",
          "name": "iconUri"
        },
        {
          "type": "string",
          "description": "Emoji used as an icon for this message",
          "name": "iconEmoji"
        }
      ]
    },
    {
      "name": "TMAttachmentFootnoteInfo",
      "fields": [
        {
          "type": "string",
          "description": "Text of a footer",
          "name": "text"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an icon displayed to the left of a footer; sized 32x32px",
          "name": "iconUri"
        },
        {
          "type": "string",
          "description": "Message creation datetime in ISO 8601 format including timezone",
          "format": "date-time",
          "example": "2016-03-10T18:07:52.534Z",
          "name": "time"
        }
      ]
    },
    {
      "name": "TMPostsList",
      "fields": [
        {
          "type": "array",
          "description": "List of posts",
          "items": {
            "$ref": "TMPostInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "TMNavigationInfo",
          "name": "navigation",
          "required": false
        }
      ]
    },
    {
      "name": "TMAttachmentAuthorInfo",
      "fields": [
        {
          "type": "string",
          "description": "Name of a message author",
          "name": "name"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an author's name",
          "name": "uri"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link to an image displayed to the left of an author's name; sized 82x82px",
          "name": "iconUri"
        }
      ]
    },
    {
      "name": "TMUpdatePostRequest",
      "fields": [
        {
          "type": "string",
          "description": "Post text.",
          "name": "text"
        }
      ]
    },
    {
      "name": "AdaptiveCardInfoRequest",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Container"
          ],
          "name": "type"
        },
        {
          "type": "array",
          "items": {
            "$ref": "AdaptiveCardInfoRequestItem"
          },
          "name": "items"
        }
      ]
    },
    {
      "name": "AdaptiveCardSelectAction",
      "description": "An action that will be invoked when the card is tapped or selected. `Action.ShowCard` is not supported",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Action.Submit",
            "Action.OpenUrl",
            "Action.ToggleVisibility"
          ],
          "name": "type",
          "required": true
        }
      ]
    },
    {
      "name": "AdaptiveCardAction",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Action.ShowCard",
            "Action.Submit",
            "Action.OpenUrl",
            "Action.ToggleVisibility"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "name": "title"
        },
        {
          "$ref": "ActionAdaptiveCardInfo",
          "name": "card"
        },
        {
          "type": "string",
          "format": "uri",
          "name": "url"
        }
      ]
    },
    {
      "name": "ActionAdaptiveCardInfo",
      "fields": [
        {
          "type": "string",
          "enum": [
            "AdaptiveCard"
          ],
          "name": "type"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ActionCardBody"
          },
          "name": "body"
        }
      ]
    },
    {
      "name": "AdaptiveCardColumnInfo",
      "fields": [
        {
          "type": "string",
          "name": "type"
        },
        {
          "type": "string",
          "name": "width"
        },
        {
          "type": "array",
          "items": {
            "$ref": "AdaptiveCardColumnItemInfo"
          },
          "name": "items"
        }
      ]
    },
    {
      "name": "ActionCardBody",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Input.Text"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "boolean",
          "description": "If set to `true`, allows multiple lines of input",
          "default": false,
          "name": "isMultiline"
        },
        {
          "type": "string",
          "description": "Description of the input desired. Displayed when no text has been input",
          "name": "placeholder"
        }
      ]
    },
    {
      "name": "BackgroundImage",
      "description": "Specifies a background image oa a card. Acceptable formats are PNG, JPEG, and GIF",
      "fields": [
        {
          "type": "string",
          "enum": [
            "BackgroundImage"
          ],
          "description": "Must be `BackgroundImage`",
          "name": "type",
          "required": false
        },
        {
          "type": "string",
          "format": "uri",
          "description": "The URL/data URL of an image to be used as a background of a card. Acceptable formats are PNG, JPEG, and GIF",
          "name": "url",
          "required": true
        },
        {
          "description": "Describes how the image should fill the area",
          "name": "fillMode",
          "type": "string",
          "enum": [
            "cover",
            "repeatHorizontally",
            "repeatVertically",
            "repeat"
          ],
          "pattern": "^([c|C][o|O][v|V][e|E][r|R])|([r|R][e|E][p|P][e|E][a|A][t|T][h|H][o|O][r|R][i|I][z|Z][o|O][n|N][t|T][a|A][l|L][l|L][y|Y])|([r|R][e|E][p|P][e|E][a|A][t|T][v|V][e|E][r|R][t|T][i|I][c|C][a|A][l|L][l|L][y|Y])|([r|R][e|E][p|P][e|E][a|A][t|T])$",
          "required": false
        },
        {
          "description": "Describes how the image should be aligned if it must be cropped or if using repeat fill mode",
          "name": "horizontalAlignment",
          "type": "string",
          "enum": [
            "left",
            "center",
            "right"
          ],
          "pattern": "^([l|L][e|E][f|F][t|T])|([c|C][e|E][n|N][t|T][e|E][r|R])|([r|R][i|I][g|G][h|H][t|T])$",
          "required": false
        },
        {
          "description": "Describes how the image should be aligned if it must be cropped or if using repeat fill mode",
          "name": "verticalAlignment",
          "type": "string",
          "enum": [
            "top",
            "center",
            "bottom"
          ],
          "pattern": "^([t|T][o|O][p|P])|([c|C][e|E][n|N][t|T][e|E][r|R])|([b|B][o|O][t|T][t|T][o|O][m|M])$",
          "required": false
        }
      ]
    },
    {
      "name": "AdaptiveCardCreator",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a creator",
          "name": "id"
        }
      ]
    },
    {
      "name": "AdaptiveCardColumnItemInfo",
      "fields": [
        {
          "type": "string",
          "name": "type"
        },
        {
          "type": "string",
          "format": "uri",
          "name": "url"
        },
        {
          "type": "string",
          "name": "size"
        },
        {
          "type": "string",
          "name": "style"
        },
        {
          "type": "boolean",
          "name": "wrap"
        },
        {
          "type": "string",
          "name": "spacing"
        },
        {
          "type": "string",
          "name": "text"
        },
        {
          "type": "boolean",
          "name": "isSubtle"
        }
      ]
    },
    {
      "name": "AdaptiveCardRequest",
      "fields": [
        {
          "type": "string",
          "description": "Type of attachment. This field is mandatory and filled on server side -\nwill be ignored if set in request body\n",
          "enum": [
            "AdaptiveCard"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "description": "Version. This field is mandatory and filled on server side -\nwill be ignored if set in request body\n",
          "name": "version",
          "required": true
        },
        {
          "type": "array",
          "description": "List of adaptive cards with the detailed information",
          "items": {
            "$ref": "AdaptiveCardInfoRequest"
          },
          "name": "body",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "AdaptiveCardAction"
          },
          "name": "actions",
          "required": false
        },
        {
          "$ref": "AdaptiveCardSelectAction",
          "name": "selectAction",
          "required": false
        },
        {
          "type": "string",
          "name": "fallbackText",
          "required": false
        },
        {
          "description": "Specifies a background image oa a card. Acceptable formats are PNG, JPEG, and GIF",
          "name": "backgroundImage",
          "required": false,
          "$ref": "BackgroundImage"
        },
        {
          "type": "string",
          "description": "Specifies the minimum height of the card in pixels",
          "example": "50px",
          "name": "minHeight",
          "required": false
        },
        {
          "type": "string",
          "description": "Specifies what should be spoken for this entire card. This is simple text or SSML fragment",
          "name": "speak",
          "required": false
        },
        {
          "type": "string",
          "description": "The 2-letter ISO-639-1 language used in the card. Used to localize any date/time functions",
          "enum": [
            "en",
            "fr",
            "es"
          ],
          "name": "lang",
          "required": false
        },
        {
          "description": "Defines how the content should be aligned vertically within the container. Only relevant for fixed-height cards, or cards with a `minHeight` specified",
          "name": "verticalContentAlignment",
          "type": "string",
          "enum": [
            "top",
            "center",
            "bottom"
          ],
          "pattern": "^([t|T][o|O][p|P])|([c|C][e|E][n|N][t|T][e|E][r|R])|([b|B][o|O][t|T][t|T][o|O][m|M])$",
          "required": false
        }
      ]
    },
    {
      "name": "AdaptiveCardShortInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an adaptive card",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Adaptive Card creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Post last modification datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Schema of an adaptive card",
          "name": "$schema"
        },
        {
          "type": "string",
          "enum": [
            "AdaptiveCard"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Version of an adaptive card. Filled on server-side",
          "name": "version"
        },
        {
          "$ref": "AdaptiveCardCreator",
          "name": "creator"
        },
        {
          "type": "array",
          "description": "Chat IDs where an adaptive card is posted or shared.",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        }
      ]
    },
    {
      "name": "AdaptiveCardInfoRequestItem",
      "fields": [
        {
          "type": "string",
          "enum": [
            "TextBlock",
            "ColumnSet",
            "Column",
            "FactSet"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "name": "text"
        },
        {
          "type": "string",
          "name": "weight"
        },
        {
          "type": "string",
          "name": "size"
        },
        {
          "type": "array",
          "items": {
            "$ref": "AdaptiveCardColumnInfo"
          },
          "name": "columns"
        }
      ]
    },
    {
      "name": "TMCreatorInfo",
      "description": "Note creator information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user who created a note/task",
          "name": "id"
        }
      ]
    },
    {
      "name": "TMNoteList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "TMNoteInfo"
          },
          "name": "records"
        },
        {
          "$ref": "TMNavigationInfo",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "TMCreateNoteRequest",
      "fields": [
        {
          "type": "string",
          "description": "Title of a note. Max allowed length is 250 characters",
          "name": "title",
          "required": true
        },
        {
          "type": "string",
          "description": "Contents of a note; HTML markup text. Max allowed length is 1048576 characters (1 Mb).",
          "name": "body",
          "required": false
        }
      ]
    },
    {
      "name": "TMNoteInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a note",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Title of a note",
          "name": "title"
        },
        {
          "type": "array",
          "description": "Internal identifiers of the chat(s) where the note is posted or shared.",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        },
        {
          "type": "string",
          "description": "Preview of a note (first 150 characters of a body)",
          "name": "preview"
        },
        {
          "$ref": "TMCreatorInfo",
          "name": "creator"
        },
        {
          "$ref": "LastModifiedByInfo",
          "name": "lastModifiedBy"
        },
        {
          "$ref": "LockedByInfo",
          "name": "lockedBy"
        },
        {
          "type": "string",
          "description": "Note publishing status. Any note is created in 'Draft' status. After it is posted it becomes 'Active'",
          "enum": [
            "Active",
            "Draft"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Creation time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime of the note last update",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "enum": [
            "Note"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "LockedByInfo",
      "description": "Returned for the note being edited (locked) at the current moment. Information on the user editing the note",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the user editing the note",
          "name": "id"
        }
      ]
    },
    {
      "name": "LastModifiedByInfo",
      "description": "Note last modification information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the user who last updated the note",
          "name": "id"
        }
      ]
    },
    {
      "name": "AdaptiveCardInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an adaptive card",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Adaptive Card creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Post last modification datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Schema of an adaptive card",
          "name": "$schema"
        },
        {
          "type": "string",
          "enum": [
            "AdaptiveCard"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Version of an adaptive card",
          "name": "version"
        },
        {
          "$ref": "AdaptiveCardCreator",
          "name": "creator"
        },
        {
          "type": "array",
          "description": "Chat IDs where an adaptive card is posted or shared.",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        },
        {
          "type": "array",
          "description": "List of card elements to show in the primary card region",
          "items": {
            "$ref": "AdaptiveCardInfoRequest"
          },
          "name": "body"
        },
        {
          "type": "array",
          "items": {
            "$ref": "AdaptiveCardAction"
          },
          "name": "actions"
        },
        {
          "$ref": "AdaptiveCardSelectAction",
          "name": "selectAction"
        },
        {
          "type": "string",
          "description": "Text shown when the client doesn't support the version specified (may contain markdown)",
          "name": "fallbackText"
        },
        {
          "description": "Specifies a background image oa a card. Acceptable formats are PNG, JPEG, and GIF",
          "name": "backgroundImage",
          "$ref": "BackgroundImage"
        },
        {
          "type": "string",
          "description": "Specifies the minimum height of the card in pixels",
          "example": "50px",
          "name": "minHeight"
        },
        {
          "type": "string",
          "description": "Specifies what should be spoken for this entire card. This is simple text or SSML fragment",
          "name": "speak"
        },
        {
          "type": "string",
          "description": "The 2-letter ISO-639-1 language used in the card. Used to localize any date/time functions",
          "enum": [
            "en",
            "fr",
            "es"
          ],
          "name": "lang"
        },
        {
          "description": "Defines how the content should be aligned vertically within the container. Only relevant for fixed-height cards, or cards with a `minHeight` specified",
          "name": "verticalContentAlignment",
          "type": "string",
          "enum": [
            "top",
            "center",
            "bottom"
          ],
          "pattern": "^([t|T][o|O][p|P])|([c|C][e|E][n|N][t|T][e|E][r|R])|([b|B][o|O][t|T][t|T][o|O][m|M])$"
        }
      ]
    },
    {
      "name": "TMWebhookList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "TMWebhookInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "TMWebhookInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a webhook",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of the user who created a webhook",
          "name": "creatorId"
        },
        {
          "type": "array",
          "description": "Internal identifiers of groups where a webhook has been created",
          "items": {
            "type": "string"
          },
          "name": "groupIds"
        },
        {
          "type": "string",
          "description": "Webhook creation time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Webhook last update time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Public link to send a webhook payload",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Current status of a webhook",
          "enum": [
            "Active",
            "Suspended",
            "Deleted"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "TMCompanyInfo",
      "fields": [
        {
          "description": "Internal identifier of a company (RingCentral account ID)",
          "type": "string",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Name of a company",
          "name": "name",
          "required": false
        },
        {
          "type": "string",
          "description": "Domain name of a company",
          "name": "domain",
          "required": false
        },
        {
          "type": "string",
          "description": "Datetime of creation in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)",
          "format": "date-time",
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Datetime of last modification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)",
          "format": "date-time",
          "name": "lastModifiedTime",
          "required": true
        }
      ]
    },
    {
      "name": "TMPersonInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "First name of a user",
          "name": "firstName",
          "required": false
        },
        {
          "type": "string",
          "description": "Last name of a user",
          "name": "lastName",
          "required": false
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of a user",
          "name": "email",
          "required": false
        },
        {
          "type": "string",
          "description": "Photo of a user",
          "name": "avatar",
          "required": false
        },
        {
          "type": "string",
          "description": "Internal identifier of a company",
          "name": "companyId",
          "required": false
        },
        {
          "type": "string",
          "description": "Time of creation in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "creationTime",
          "required": false
        },
        {
          "type": "string",
          "description": "Time of the last modification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "lastModifiedTime",
          "required": false
        }
      ]
    },
    {
      "name": "TMConversationList",
      "fields": [
        {
          "type": "array",
          "description": "List of conversations",
          "items": {
            "$ref": "TMConversationInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "TMNavigationInfo",
          "name": "navigation",
          "required": false
        }
      ]
    },
    {
      "name": "TMConversationInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a conversation",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of conversation",
          "enum": [
            "Direct",
            "Personal",
            "Group"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Conversation creation datetime in ISO 8601 format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Conversation last change datetime in ISO 8601 format",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "array",
          "items": {
            "$ref": "TMChatMemberInfo"
          },
          "name": "members"
        }
      ]
    },
    {
      "name": "CreateConversationRequest",
      "fields": [
        {
          "type": "array",
          "description": "Identifier(s) of chat member(s). The maximum supported number\nof IDs is 15. User's own ID is optional. If `members` section is omitted\nthen \"Personal\" chat will be returned\n",
          "items": {
            "$ref": "CreateConversationRequestMembers"
          },
          "name": "members",
          "required": true
        }
      ]
    },
    {
      "name": "GlipDataExportNavigationInfo",
      "fields": [
        {
          "$ref": "GlipDataExportNavigationInfoUri",
          "name": "firstPage"
        },
        {
          "$ref": "GlipDataExportNavigationInfoUri",
          "name": "nextPage"
        },
        {
          "$ref": "GlipDataExportNavigationInfoUri",
          "name": "previousPage"
        },
        {
          "$ref": "GlipDataExportNavigationInfoUri",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "SpecificInfo",
      "description": "Information specified in request",
      "fields": [
        {
          "type": "string",
          "format": "date-time",
          "description": "Starting time for data collection",
          "name": "timeFrom"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Ending time for data collection",
          "name": "timeTo"
        },
        {
          "type": "array",
          "items": {
            "$ref": "DataExportTaskContactInfo"
          },
          "name": "contacts"
        },
        {
          "type": "array",
          "description": "List of chats from which the data (posts, files, tasks, events, notes, etc.) will be collected",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        }
      ]
    },
    {
      "name": "ExportTaskResultInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a dataset",
          "name": "id"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "Link for downloading a dataset",
          "name": "uri"
        },
        {
          "type": "integer",
          "format": "int64",
          "description": "Size of ta dataset in bytes",
          "name": "size"
        }
      ]
    },
    {
      "name": "GlipDataExportPagingInfo",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "name": "page"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "name": "perPage"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "format": "int32",
          "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "DataExportTaskList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "DataExportTask"
          },
          "name": "tasks"
        },
        {
          "$ref": "GlipDataExportNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "GlipDataExportPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "CreatorInfo",
      "description": "Task creator information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user",
          "name": "id"
        },
        {
          "type": "string",
          "description": "First name of a user",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last name of a user",
          "name": "lastName"
        }
      ]
    },
    {
      "name": "GlipDataExportNavigationInfoUri",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Canonical URI for the corresponding page of the list",
          "name": "uri"
        }
      ]
    },
    {
      "name": "DataExportTask",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a task",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Task creation timestamp",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Task last modification timestamp",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Task status",
          "enum": [
            "Accepted",
            "InProgress",
            "Completed",
            "Failed",
            "Expired"
          ],
          "name": "status"
        },
        {
          "$ref": "CreatorInfo",
          "name": "creator"
        },
        {
          "$ref": "SpecificInfo",
          "name": "specific"
        },
        {
          "type": "array",
          "description": "Data collection archives. Returned by task ID",
          "items": {
            "$ref": "ExportTaskResultInfo"
          },
          "name": "datasets"
        }
      ]
    },
    {
      "name": "DataExportTaskContactInfo",
      "description": "List of users whose data is collected. The following data will be exported: posts, tasks, events, etc. posted by the user(s); posts addressing the user(s) via direct and @Mentions; tasks assigned to the listed user(s). The list of 10 users per request is supported.",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a contact",
          "name": "id"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email address of a contact",
          "name": "email"
        }
      ]
    },
    {
      "name": "CreateDataExportTaskRequest",
      "fields": [
        {
          "type": "string",
          "format": "date-time",
          "description": "Starting time for data collection. The default value is `timeTo` minus 24 hours. Max allowed time frame between `timeFrom` and `timeTo` is 6 months",
          "name": "timeFrom"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Ending time for data collection. The default value is current time. Max allowed time frame between `timeFrom` and `timeTo` is 6 months",
          "name": "timeTo"
        },
        {
          "type": "array",
          "description": "List of contacts which data is collected. The following data will be exported: posts, tasks, events, etc. posted by the user(s); posts addressing the user(s) via direct and @Mentions; tasks assigned to the listed user(s). The list of 30 users per request is supported.",
          "items": {
            "$ref": "DataExportTaskContactInfo"
          },
          "name": "contacts"
        },
        {
          "type": "array",
          "description": "List of chats from which the data (posts, files, tasks, events, notes, etc.) will be collected. Maximum number of chats supported is 10",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        }
      ]
    },
    {
      "name": "UpdateEveryoneTeamRequest",
      "fields": [
        {
          "type": "string",
          "description": "Everyone chat name. Maximum number of characters supported is 250",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Everyone chat description. Maximum number of characters supported is 1000",
          "name": "description"
        }
      ]
    },
    {
      "name": "EveryoneTeamInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a chat",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of chat",
          "enum": [
            "Everyone"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Chat name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Chat description",
          "name": "description"
        },
        {
          "type": "string",
          "description": "Chat creation datetime in ISO 8601 format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Chat last change datetime in ISO 8601 format",
          "format": "date-time",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "TMCreateTeamRequest",
      "fields": [
        {
          "type": "boolean",
          "description": "Team access level.",
          "name": "public",
          "required": false
        },
        {
          "type": "string",
          "description": "Team name.",
          "name": "name",
          "required": true
        },
        {
          "type": "string",
          "description": "Team description.",
          "name": "description",
          "required": false
        },
        {
          "type": "array",
          "description": "Identifier(s) of team members.",
          "items": {
            "$ref": "TMCreateTeamRequestMembers"
          },
          "name": "members",
          "required": false
        }
      ]
    },
    {
      "name": "TMTeamList",
      "fields": [
        {
          "type": "array",
          "description": "List of teams",
          "items": {
            "$ref": "TMTeamInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "TMNavigationInfo",
          "name": "navigation",
          "required": false
        }
      ]
    },
    {
      "name": "TMTeamInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a team",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of chat",
          "enum": [
            "Team"
          ],
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "Team access level",
          "name": "public"
        },
        {
          "type": "string",
          "description": "Team name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Team description",
          "name": "description"
        },
        {
          "type": "string",
          "description": "Team status",
          "enum": [
            "Active",
            "Archived"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Team creation datetime in ISO 8601 format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Team last change datetime in ISO 8601 format",
          "format": "date-time",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "TMUpdateTeamRequest",
      "fields": [
        {
          "type": "boolean",
          "description": "Team access level",
          "name": "public"
        },
        {
          "type": "string",
          "description": "Team name. Maximum number of characters supported is 250",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Team description. Maximum number of characters supported is 1000",
          "name": "description"
        }
      ]
    },
    {
      "name": "TMRemoveTeamMembersRequest",
      "fields": [
        {
          "type": "array",
          "description": "Identifier(s) of chat members.",
          "items": {
            "$ref": "TMRemoveTeamMembersRequestMembers"
          },
          "name": "members",
          "required": true
        }
      ]
    },
    {
      "name": "TMAddTeamMembersRequest",
      "fields": [
        {
          "type": "array",
          "description": "Identifier(s) of chat member(s)",
          "items": {
            "description": "Conversation is opened",
            "$ref": "TMAddTeamMembersRequestMembers"
          },
          "name": "members",
          "required": true
        }
      ]
    },
    {
      "name": "TMNoteWithBodyInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a note",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Title of a note",
          "name": "title"
        },
        {
          "type": "array",
          "description": "Internal identifiers of the chat(s) where the note is posted or shared.",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        },
        {
          "type": "string",
          "description": "Preview of a note (first 150 characters of a body)",
          "name": "preview"
        },
        {
          "$ref": "TMCreatorInfo",
          "name": "creator"
        },
        {
          "$ref": "LastModifiedByInfo",
          "name": "lastModifiedBy"
        },
        {
          "$ref": "LockedByInfo",
          "name": "lockedBy"
        },
        {
          "type": "string",
          "description": "Note publishing status. Any note is created in 'Draft' status. After it is posted it becomes 'Active'",
          "enum": [
            "Active",
            "Draft"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Creation time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime of the note last update",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "enum": [
            "Note"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Text of a note",
          "name": "body"
        }
      ]
    },
    {
      "name": "GetBulkAddTaskResultsV2Response",
      "fields": [
        {
          "type": "array",
          "minItems": 1,
          "description": "List of account phone numbers",
          "items": {
            "$ref": "AddPhoneNumbersResponseItem"
          },
          "name": "records",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "Task creation time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "name": "creationTime",
          "required": false
        },
        {
          "type": "string",
          "description": "Task status",
          "example": "Accepted",
          "name": "status",
          "required": false
        }
      ]
    },
    {
      "name": "SubscriptionInfoBlacklistedData",
      "fields": [
        {
          "type": "string",
          "format": "date-time",
          "description": "Time of adding subscription to a black list in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n",
          "name": "blacklistedAt"
        },
        {
          "type": "string",
          "description": "Reason of adding subscription to a black list",
          "name": "reason"
        }
      ]
    },
    {
      "name": "RegSessionModelSettings",
      "fields": [
        {
          "type": "integer",
          "description": "The maximum number of registrants which forces closing the registration (0 means \"off\").",
          "format": "int32",
          "minimum": 0,
          "default": 0,
          "name": "autoCloseLimit"
        },
        {
          "type": "boolean",
          "description": "Indicates that emails to registrants should be suppressed (should be supported by external party)",
          "default": false,
          "name": "suppressEmails"
        },
        {
          "type": "boolean",
          "description": "Indicates that registration digest should be sent to host.",
          "default": true,
          "name": "registrationDigestEnabled"
        },
        {
          "type": "boolean",
          "description": "Indicates that registrants are allowed to join from multiple devices.",
          "default": false,
          "name": "preventMultipleDeviceJoins"
        },
        {
          "type": "boolean",
          "description": "Indicates that work email address is required for registration.",
          "default": false,
          "name": "workEmailRequired"
        },
        {
          "type": "boolean",
          "description": "Indicates that recording will be shown after the webinar and in emails.",
          "name": "viewRecording"
        },
        {
          "type": "string",
          "description": "Duration of on-demand webinar. The default value can only be used if the session is on demand.",
          "enum": [
            "OneMonth",
            "TwoMonths",
            "ThreeMonths",
            "SixMonths",
            "OneYear"
          ],
          "default": "SixMonths",
          "name": "onDemandDuration"
        },
        {
          "type": "boolean",
          "description": "Indicates that recording exists for the session.",
          "readOnly": true,
          "nullable": true,
          "name": "recordingExist"
        },
        {
          "type": "boolean",
          "description": "Indicates that post webinar registration will be opened automatically when webinar ends.",
          "name": "autoOpenPostWebinarRegistration"
        },
        {
          "type": "string",
          "description": "The time after which the post webinar will be closed automatically.",
          "format": "date-time",
          "readOnly": true,
          "nullable": true,
          "name": "postWebinarRegistrationClosingTime"
        }
      ]
    },
    {
      "name": "BulkUpdateInviteesRequestUpdatedInvitees",
      "fields": [
        {
          "type": "string",
          "description": "Internal object ID",
          "minLength": 1,
          "maxLength": 20,
          "example": "78654321",
          "name": "id"
        },
        {
          "type": "string",
          "description": "First (given) name",
          "maxLength": 64,
          "example": "John",
          "x-sensitive-data": "masked",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last (family) name",
          "maxLength": 64,
          "example": "Doe",
          "x-sensitive-data": "masked",
          "name": "lastName"
        },
        {
          "type": "string",
          "format": "email",
          "minLength": 1,
          "maxLength": 256,
          "example": "john.doe@example.com",
          "description": "User's contact email",
          "x-sensitive-data": "normalized-anonymized",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Job title",
          "maxLength": 64,
          "x-sensitive-data": "masked",
          "example": "Product Manager",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "description": "The role of the webinar session participant/invitee.\nSee also: [Understanding Webinar Roles](https://support.ringcentral.com/webinar/getting-started/understanding-ringcentral-webinar-roles.html)\n",
          "enum": [
            "Panelist",
            "CoHost",
            "Host",
            "Attendee"
          ],
          "example": "Panelist",
          "name": "role"
        },
        {
          "type": "string",
          "description": "The type of the webinar invitee",
          "enum": [
            "User",
            "Room"
          ],
          "default": "User",
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "Indicates if invite/cancellation emails have to be sent to this invitee.\nFor \"Host\" it cannot be set to false.\nIf it is true it can't be changed back to false.\n",
          "default": true,
          "name": "sendInvite"
        }
      ]
    },
    {
      "name": "AddDeviceToInventoryResponseDevices",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a created device",
          "name": "id"
        }
      ]
    },
    {
      "name": "DeleteDeviceFromInventoryResponseRecords",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a device is successfully deleted",
          "name": "bulkItemSuccessful"
        },
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "deviceId"
        },
        {
          "type": "array",
          "description": "The list of errors occurred during processing of particular item of bulk operation.\nReturned only if `bulkItemSuccessful` is false\n",
          "minItems": 1,
          "items": {
            "$ref": "ApiError"
          },
          "name": "bulkItemErrors"
        }
      ]
    },
    {
      "name": "AddDeviceToInventoryRequestSite",
      "fields": [
        {
          "type": "string",
          "description": "Site extension identifier or \"main-site\" for the main site",
          "name": "id"
        }
      ]
    },
    {
      "name": "DeleteDeviceFromInventoryRequestRecords",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device that should be deleted",
          "name": "deviceId"
        }
      ]
    },
    {
      "name": "AccountPhoneNumberInfoExtension",
      "fields": [
        {
          "type": "string",
          "description": "Unique identifier of extension",
          "example": "1234567",
          "name": "id"
        },
        {
          "description": "Short number of an extension.\nActual max length depends on system length limit for extension.\n",
          "type": "string",
          "pattern": "^\\d{3,8}$",
          "minLength": 1,
          "maxLength": 8,
          "example": "205",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "AssignPhoneNumberRequestExtension",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        }
      ]
    },
    {
      "name": "BulkAddDevicesItemEmergency",
      "fields": [
        {
          "$ref": "PostalAddress",
          "name": "address"
        },
        {
          "$ref": "BulkAddDevicesItemEmergencyLocation",
          "name": "location"
        }
      ]
    },
    {
      "name": "BulkAddDevicesItemPhoneInfo",
      "fields": [
        {
          "description": "Indicates if a number is toll or toll-free",
          "type": "string",
          "enum": [
            "Toll",
            "TollFree"
          ],
          "example": "Toll",
          "name": "tollType"
        },
        {
          "description": "Preferred area code to use if numbers available",
          "type": "string",
          "pattern": "^[1-9]\\d{1,3}$",
          "example": "650",
          "name": "preferredAreaCode"
        },
        {
          "type": "string",
          "description": "Phone number ID",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Phone number reservation ID",
          "name": "reservationId"
        },
        {
          "type": "string",
          "description": "Phone number ID",
          "name": "phoneNumberId"
        }
      ]
    },
    {
      "name": "DeviceDefinitionEmergency",
      "fields": [
        {
          "$ref": "PostalAddress",
          "name": "address"
        },
        {
          "$ref": "DeviceDefinitionEmergencyLocation",
          "name": "location"
        }
      ]
    },
    {
      "name": "DeviceDefinitionPhoneInfo",
      "fields": [
        {
          "description": "Indicates if a number is toll or toll-free",
          "type": "string",
          "enum": [
            "Toll",
            "TollFree"
          ],
          "example": "Toll",
          "name": "tollType"
        },
        {
          "description": "Preferred area code to use if numbers available",
          "type": "string",
          "pattern": "^[1-9]\\d{1,3}$",
          "example": "650",
          "name": "preferredAreaCode"
        },
        {
          "type": "string",
          "description": "Phone number ID",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Phone number reservation ID",
          "name": "reservationId"
        },
        {
          "type": "string",
          "description": "Phone number ID",
          "name": "phoneNumberId"
        }
      ]
    },
    {
      "name": "BulkAddDevicesResponseResults",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates if the provisioning operation was successful for this item, always `false` in this model",
          "example": false,
          "name": "successful"
        },
        {
          "description": "Internal identifier of the created device",
          "type": "string",
          "example": "787878",
          "name": "id"
        },
        {
          "$ref": "BulkOperationExtensionReference",
          "name": "extension"
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "phoneNumber"
        },
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "ApiErrorWithParameter"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersRequestItemContact",
      "fields": [
        {
          "description": "Given name",
          "type": "string",
          "maxLength": 64,
          "example": "John",
          "name": "firstName"
        },
        {
          "description": "Family name",
          "type": "string",
          "maxLength": 64,
          "example": "Smith",
          "name": "lastName"
        },
        {
          "description": "Contact email",
          "type": "string",
          "format": "email",
          "maxLength": 64,
          "example": "john.smith@acme.com",
          "name": "email"
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "mobileNumber"
        },
        {
          "description": "Indicates that contact email is enabled as login name for this user.\nPlease note that email must be unique in this case.\n",
          "type": "boolean",
          "default": true,
          "name": "emailAsLoginName"
        },
        {
          "$ref": "TransitionInfo",
          "name": "transition"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersRequestItemCostCenter",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the Cost Center",
          "example": "224149",
          "name": "id"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersRequestItemRoles",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a role to be assigned",
          "example": "1",
          "name": "id"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersRequestItemDevices",
      "fields": [
        {
          "$ref": "DeviceDefinition",
          "name": "deviceInfo"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersResponseResults",
      "fields": [
        {
          "type": "boolean",
          "description": "Indicates if the provisioning operation was successful for this item, always `false` in this model",
          "example": false,
          "name": "successful"
        },
        {
          "$ref": "BatchProvisionUsersResponseResultsExtension",
          "name": "extension"
        },
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "ApiErrorWithParameter"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersSuccessItemExtension",
      "fields": [
        {
          "type": "string",
          "description": "The internal identifier of RingCentral extension created",
          "example": "12345",
          "name": "id"
        },
        {
          "type": "array",
          "items": {
            "required": [
              "id",
              "phoneNumber"
            ],
            "$ref": "BatchProvisionUsersSuccessItemExtensionDevices"
          },
          "name": "devices"
        }
      ]
    },
    {
      "name": "BulkDeleteUsersResponseRecords",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "example": "1162820004",
          "name": "id"
        },
        {
          "type": "boolean",
          "description": "Indicates if this item was processed successfully during bulk operation.\nIf false, `bulkItemErrors` attribute contains the list of errors\n",
          "example": true,
          "name": "bulkItemSuccessful"
        },
        {
          "type": "array",
          "description": "The list of errors occurred during processing of particular item of bulk operation.\nReturned only if `bulkItemSuccessful` is false\n",
          "minItems": 1,
          "items": {
            "$ref": "ApiError"
          },
          "name": "bulkItemErrors"
        }
      ]
    },
    {
      "name": "MetaDataValues",
      "fields": [
        {
          "type": "string",
          "description": "Unique identifier",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Value",
          "name": "value"
        }
      ]
    },
    {
      "name": "CallLogRecordTransferTarget",
      "fields": [
        {
          "type": "string",
          "description": "Internal Identifier of Telephony Session, which belongs to transfer target in case of Warm Transfer",
          "name": "telephonySessionId"
        }
      ]
    },
    {
      "name": "CallLogRecordTransferee",
      "fields": [
        {
          "type": "string",
          "description": "Internal Identifier of Telephony Session, which belongs to transferee in case of Warm Transfer",
          "name": "telephonySessionId"
        }
      ]
    },
    {
      "name": "BaseCallLogRecordTransferTarget",
      "fields": [
        {
          "type": "string",
          "description": "Internal Identifier of Telephony Session, which belongs to transfer target in case of Warm Transfer",
          "name": "telephonySessionId"
        }
      ]
    },
    {
      "name": "BaseCallLogRecordTransferee",
      "fields": [
        {
          "type": "string",
          "description": "Internal Identifier of Telephony Session, which belongs to transferee in case of Warm Transfer",
          "name": "telephonySessionId"
        }
      ]
    },
    {
      "name": "CallLogRecordLegInfoTransferTarget",
      "fields": [
        {
          "type": "string",
          "description": "Internal Identifier of Telephony Session, which belongs to transfer target in case of Warm Transfer",
          "name": "telephonySessionId"
        }
      ]
    },
    {
      "name": "CallLogRecordLegInfoTransferee",
      "fields": [
        {
          "type": "string",
          "description": "Internal Identifier of Telephony Session, which belongs to transferee in case of Warm Transfer",
          "name": "telephonySessionId"
        }
      ]
    },
    {
      "name": "ExtensionBulkUpdateTaskResultAffectedItems",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "ExtensionUpdateShortResult"
          },
          "name": "result"
        }
      ]
    },
    {
      "name": "OptOutBulkAssignResponseOptIns",
      "fields": [
        {
          "type": "array",
          "description": "Recipients' phone numbers which opt-ins were successfully added for.",
          "items": {
            "type": "string"
          },
          "example": [
            "+15551237799"
          ],
          "name": "successful"
        },
        {
          "type": "array",
          "description": "Recipients' phone numbers which opt-ins were failed to be added for. Plus, error messages",
          "items": {
            "$ref": "OptOutBulkAssignFailedEntry"
          },
          "example": [
            {
              "to": "+15551237798",
              "errorMessage": "Unexpected issue on removing an opt-out from bulk-assign request"
            }
          ],
          "name": "failed"
        }
      ]
    },
    {
      "name": "OptOutBulkAssignResponseOptOuts",
      "fields": [
        {
          "type": "array",
          "description": "Recipients' phone numbers which opt-outs were successfully added for.",
          "items": {
            "type": "string"
          },
          "example": [
            "+15551237755"
          ],
          "name": "successful"
        },
        {
          "type": "array",
          "description": "Recipients' phone numbers which opt-outs were failed to be added for. Plus, error messages",
          "items": {
            "$ref": "OptOutBulkAssignFailedEntry"
          },
          "example": [
            {
              "to": "+15551237756",
              "errorMessage": "Unexpected issue on creating an opt-out from bulk-assign request"
            }
          ],
          "name": "failed"
        }
      ]
    },
    {
      "name": "CallMonitoringGroupSite",
      "fields": [
        {
          "type": "string",
          "description": "Identifier of a site",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a site",
          "name": "name"
        }
      ]
    },
    {
      "name": "CreateCallMonitoringGroupRequestSite",
      "fields": [
        {
          "type": "string",
          "description": "Identifier of a site",
          "name": "id"
        }
      ]
    },
    {
      "name": "ForwardingNumberInfoExtension",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Number of an extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Extension name",
          "name": "name"
        }
      ]
    },
    {
      "name": "ContractedCountryListResponseRecords",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Official name of a country",
          "name": "name"
        }
      ]
    },
    {
      "name": "SipRegistrationDeviceEmergencyInfoAddress",
      "fields": [
        {
          "type": "string",
          "name": "street"
        },
        {
          "type": "string",
          "name": "street2"
        },
        {
          "type": "string",
          "name": "city"
        },
        {
          "type": "string",
          "name": "zip"
        },
        {
          "type": "string",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format",
          "example": "US",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "boolean",
          "description": "Specifies if emergency address is out of country",
          "name": "outOfCountry"
        },
        {
          "type": "string",
          "description": "(Optional) Building name",
          "name": "buildingName"
        },
        {
          "type": "string",
          "description": "Street type",
          "name": "streetType"
        },
        {
          "type": "string",
          "description": "Building/street number",
          "name": "buildingNumber"
        }
      ]
    },
    {
      "name": "SpeakerIdentifyApiResponseResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "DiarizeSegment"
          },
          "name": "utterances"
        }
      ]
    },
    {
      "name": "DiarizeApiResponseResponse",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "name": "speakerCount"
        },
        {
          "type": "array",
          "items": {
            "$ref": "DiarizeSegment"
          },
          "name": "utterances"
        }
      ]
    },
    {
      "name": "JobStatusResponseResponse",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "The number of speakers detected. Field is set only when enableSpeakerDiarization is true.",
          "name": "speakerCount"
        },
        {
          "type": "array",
          "items": {
            "$ref": "UtteranceObject"
          },
          "description": "Speaker wise utterances. Field is set only when enableSpeakerDiarization is true.",
          "name": "utterances"
        },
        {
          "type": "array",
          "items": {
            "$ref": "WordSegment"
          },
          "name": "words"
        },
        {
          "type": "number",
          "description": "Overall transcription confidence.",
          "format": "float",
          "name": "confidence"
        },
        {
          "type": "string",
          "description": "The entire transcript with/without punctuations according to the input.",
          "name": "transcript"
        },
        {
          "type": "array",
          "items": {
            "$ref": "UtteranceInsightsObject"
          },
          "name": "utteranceInsights"
        },
        {
          "$ref": "SpeakerInsightsObject",
          "name": "speakerInsights"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ConversationalInsightsUnit"
          },
          "name": "conversationalInsights"
        }
      ]
    },
    {
      "name": "AsrApiResponseResponse",
      "fields": [
        {
          "type": "integer",
          "description": "The number of speakers detected. Field is set only when enableSpeakerDiarization is true.",
          "format": "int32",
          "example": 2,
          "name": "speakerCount"
        },
        {
          "type": "array",
          "description": "Speaker wise utterances. Field is set only when enableSpeakerDiarization is true.",
          "items": {
            "$ref": "UtteranceObject"
          },
          "name": "utterances"
        },
        {
          "type": "array",
          "items": {
            "$ref": "WordSegment"
          },
          "name": "words"
        },
        {
          "type": "number",
          "description": "Overall transcription confidence.",
          "format": "float",
          "name": "confidence"
        },
        {
          "type": "string",
          "description": "The entire transcript with/without punctuations according to the input.",
          "name": "transcript"
        }
      ]
    },
    {
      "name": "InteractionApiResponseResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "UtteranceInsightsObject"
          },
          "name": "utteranceInsights"
        },
        {
          "$ref": "SpeakerInsightsObject",
          "name": "speakerInsights"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ConversationalInsightsUnit"
          },
          "name": "conversationalInsights"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCountersAllCalls",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCountersCallsByDirection",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCountersCallsByOrigin",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCountersCallsByResponse",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCountersCallsSegments",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCountersCallsByResult",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCountersCallsByCompanyHours",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCountersCallsByQueueSla",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCountersCallsByActions",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCountersCallsByType",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsCountersQueueOpportunities",
      "fields": [
        {
          "title": "QueueOpportunitiesAggregationType",
          "description": "Counter aggregation type for queue opportunities, limited to `Sum` only.",
          "type": "string",
          "enum": [
            "Sum"
          ],
          "name": "aggregationType"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsTimersAllCallsDuration",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsTimersCallsDurationByDirection",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsTimersCallsDurationByOrigin",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsTimersCallsDurationByResponse",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsTimersCallsSegmentsDuration",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsTimersCallsDurationByResult",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsTimersCallsDurationByCompanyHours",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsTimersCallsDurationByQueueSla",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "AggregationResponseOptionsTimersCallsDurationByType",
      "fields": [
        {
          "title": "AggregationType",
          "description": "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max` or `Percent`",
          "type": "string",
          "enum": [
            "Sum",
            "Average",
            "Max",
            "Min",
            "Percent"
          ],
          "name": "aggregationType"
        },
        {
          "title": "AggregationInterval",
          "description": "Time interval which will be used for aggregation. Can be `Hour`, `Day`, `Week` or `Month`",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "name": "aggregationInterval"
        }
      ]
    },
    {
      "name": "TMUpdateTaskRequestAssignees",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an assignee",
          "name": "id"
        }
      ]
    },
    {
      "name": "TMTaskInfoCreator",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task creator",
          "name": "id"
        }
      ]
    },
    {
      "name": "TMTaskInfoAssignees",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an assignee",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Task execution status by assignee",
          "enum": [
            "Pending",
            "Completed"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "TMCompleteTaskRequestAssignees",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an assignee",
          "name": "id"
        }
      ]
    },
    {
      "name": "TMCreateTaskRequestAssignees",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an assignee",
          "name": "id"
        }
      ]
    },
    {
      "name": "AdaptiveCardRequestBackgroundImage",
      "fields": [
        {
          "type": "string",
          "enum": [
            "BackgroundImage"
          ],
          "description": "Must be `BackgroundImage`",
          "name": "type"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "The URL/data URL of an image to be used as a background of a card. Acceptable formats are PNG, JPEG, and GIF",
          "name": "url"
        },
        {
          "description": "Describes how the image should fill the area",
          "name": "fillMode",
          "type": "string",
          "enum": [
            "cover",
            "repeatHorizontally",
            "repeatVertically",
            "repeat"
          ],
          "pattern": "^([c|C][o|O][v|V][e|E][r|R])|([r|R][e|E][p|P][e|E][a|A][t|T][h|H][o|O][r|R][i|I][z|Z][o|O][n|N][t|T][a|A][l|L][l|L][y|Y])|([r|R][e|E][p|P][e|E][a|A][t|T][v|V][e|E][r|R][t|T][i|I][c|C][a|A][l|L][l|L][y|Y])|([r|R][e|E][p|P][e|E][a|A][t|T])$"
        },
        {
          "description": "Describes how the image should be aligned if it must be cropped or if using repeat fill mode",
          "name": "horizontalAlignment",
          "type": "string",
          "enum": [
            "left",
            "center",
            "right"
          ],
          "pattern": "^([l|L][e|E][f|F][t|T])|([c|C][e|E][n|N][t|T][e|E][r|R])|([r|R][i|I][g|G][h|H][t|T])$"
        },
        {
          "description": "Describes how the image should be aligned if it must be cropped or if using repeat fill mode",
          "name": "verticalAlignment",
          "type": "string",
          "enum": [
            "top",
            "center",
            "bottom"
          ],
          "pattern": "^([t|T][o|O][p|P])|([c|C][e|E][n|N][t|T][e|E][r|R])|([b|B][o|O][t|T][t|T][o|O][m|M])$"
        }
      ]
    },
    {
      "name": "AdaptiveCardInfoBackgroundImage",
      "fields": [
        {
          "type": "string",
          "enum": [
            "BackgroundImage"
          ],
          "description": "Must be `BackgroundImage`",
          "name": "type"
        },
        {
          "type": "string",
          "format": "uri",
          "description": "The URL/data URL of an image to be used as a background of a card. Acceptable formats are PNG, JPEG, and GIF",
          "name": "url"
        },
        {
          "description": "Describes how the image should fill the area",
          "name": "fillMode",
          "type": "string",
          "enum": [
            "cover",
            "repeatHorizontally",
            "repeatVertically",
            "repeat"
          ],
          "pattern": "^([c|C][o|O][v|V][e|E][r|R])|([r|R][e|E][p|P][e|E][a|A][t|T][h|H][o|O][r|R][i|I][z|Z][o|O][n|N][t|T][a|A][l|L][l|L][y|Y])|([r|R][e|E][p|P][e|E][a|A][t|T][v|V][e|E][r|R][t|T][i|I][c|C][a|A][l|L][l|L][y|Y])|([r|R][e|E][p|P][e|E][a|A][t|T])$"
        },
        {
          "description": "Describes how the image should be aligned if it must be cropped or if using repeat fill mode",
          "name": "horizontalAlignment",
          "type": "string",
          "enum": [
            "left",
            "center",
            "right"
          ],
          "pattern": "^([l|L][e|E][f|F][t|T])|([c|C][e|E][n|N][t|T][e|E][r|R])|([r|R][i|I][g|G][h|H][t|T])$"
        },
        {
          "description": "Describes how the image should be aligned if it must be cropped or if using repeat fill mode",
          "name": "verticalAlignment",
          "type": "string",
          "enum": [
            "top",
            "center",
            "bottom"
          ],
          "pattern": "^([t|T][o|O][p|P])|([c|C][e|E][n|N][t|T][e|E][r|R])|([b|B][o|O][t|T][t|T][o|O][m|M])$"
        }
      ]
    },
    {
      "name": "CreateConversationRequestMembers",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a person",
          "name": "id"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of a person",
          "name": "email"
        }
      ]
    },
    {
      "name": "TMCreateTeamRequestMembers",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a person",
          "name": "id"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of a person",
          "name": "email"
        }
      ]
    },
    {
      "name": "TMRemoveTeamMembersRequestMembers",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a person",
          "name": "id"
        }
      ]
    },
    {
      "name": "TMAddTeamMembersRequestMembers",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a person",
          "name": "id"
        },
        {
          "type": "string",
          "format": "email",
          "description": "Email of a person",
          "name": "email"
        }
      ]
    },
    {
      "name": "BulkAddDevicesItemEmergencyLocation",
      "fields": [
        {
          "type": "string",
          "description": "Emergency location ID",
          "name": "id"
        }
      ]
    },
    {
      "name": "DeviceDefinitionEmergencyLocation",
      "fields": [
        {
          "type": "string",
          "description": "Emergency location ID",
          "name": "id"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersResponseResultsExtension",
      "fields": [
        {
          "type": "string",
          "description": "The internal identifier of RingCentral extension created",
          "example": "12345",
          "name": "id"
        },
        {
          "type": "array",
          "items": {
            "required": [
              "id",
              "phoneNumber"
            ],
            "$ref": "BatchProvisionUsersResponseResultsExtensionDevices"
          },
          "name": "devices"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersSuccessItemExtensionDevices",
      "fields": [
        {
          "type": "string",
          "description": "The internal identifier of device created",
          "example": "12345",
          "name": "id"
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "BatchProvisionUsersResponseResultsExtensionDevices",
      "fields": [
        {
          "type": "string",
          "description": "The internal identifier of device created",
          "example": "12345",
          "name": "id"
        },
        {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "Phone number in e.164 format (with '+' prefix)",
          "maxLength": 18,
          "example": "+16501234567",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "FaxReceiver",
      "description": "Fax receiver",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Name of the receiver",
          "name": "name"
        }
      ]
    },
    {
      "name": "GreetingAnsweringRuleId",
      "description": "Greeting's answering rule id",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        }
      ]
    }
  ],
  "paths": [
    {
      "paths": [
        "ai"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "scim"
      ],
      "operations": [],
      "parameter": "version",
      "defaultParameter": "v2",
      "noParentParameter": true
    },
    {
      "paths": [
        "rcvideo"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "webinar"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "text"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi"
      ],
      "operations": [
        {
          "endpoint": "/restapi",
          "method": "get",
          "tags": [
            "API Info"
          ],
          "method2": "list",
          "description": "Returns current API version(s) and server info.",
          "summary": "Get API Versions",
          "operationId": "readAPIVersions",
          "rateLimitGroup": "NoThrottling",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ApiVersionsList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}",
          "method": "get",
          "tags": [
            "API Info"
          ],
          "method2": "get",
          "description": "Returns current API version info by apiVersion.",
          "summary": "Get Version Info",
          "operationId": "readAPIVersion",
          "rateLimitGroup": "NoThrottling",
          "withParameter": true,
          "responseSchema": {
            "$ref": "ApiVersionInfo"
          }
        }
      ],
      "parameter": "apiVersion",
      "defaultParameter": "v1.0"
    },
    {
      "paths": [
        "ai",
        "audio"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "analytics"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "status"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "rcvideo",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "v2"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "rcvideo",
        "v2"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "text",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "scim",
        "Users"
      ],
      "operations": [
        {
          "endpoint": "/scim/{version}/Users",
          "method": "get",
          "tags": [
            "SCIM"
          ],
          "method2": "list",
          "description": "Returns the list of users satisfying search criteria",
          "summary": "Search/List Users",
          "operationId": "scimSearchViaGet2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ScimUserSearchResponse"
          },
          "queryParameters": "scimSearchViaGet2Parameters"
        },
        {
          "endpoint": "/scim/{version}/Users",
          "method": "post",
          "tags": [
            "SCIM"
          ],
          "method2": "post",
          "description": "Creates a new user",
          "summary": "Create User",
          "operationId": "scimCreateUser2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ScimUserResponse"
          },
          "bodyParameters": "scimUser"
        },
        {
          "endpoint": "/scim/{version}/Users/{scimUserId}",
          "method": "get",
          "tags": [
            "SCIM"
          ],
          "method2": "get",
          "description": "Returns a user by ID",
          "summary": "Get User",
          "operationId": "scimGetUser2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "ScimUserResponse"
          }
        },
        {
          "endpoint": "/scim/{version}/Users/{scimUserId}",
          "method": "put",
          "tags": [
            "SCIM"
          ],
          "method2": "put",
          "description": "Updates a user",
          "summary": "Update/Replace User",
          "operationId": "scimUpdateUser2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "ScimUserResponse"
          },
          "bodyParameters": "scimUser"
        },
        {
          "endpoint": "/scim/{version}/Users/{scimUserId}",
          "method": "delete",
          "tags": [
            "SCIM"
          ],
          "method2": "delete",
          "description": "Deletes a user",
          "summary": "Delete User",
          "operationId": "scimDeleteUser2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "withParameter": true
        },
        {
          "endpoint": "/scim/{version}/Users/{scimUserId}",
          "method": "patch",
          "tags": [
            "SCIM"
          ],
          "method2": "patch",
          "description": "Updates a user (partial update)",
          "summary": "Update/Patch User",
          "operationId": "scimPatchUser2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "ScimUserResponse"
          },
          "bodyParameters": "scimUserPatch"
        }
      ],
      "parameter": "scimUserId"
    },
    {
      "paths": [
        "ai",
        "insights"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "audio",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "ringsense"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "status",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "scim",
        "Schemas"
      ],
      "operations": [
        {
          "endpoint": "/scim/{version}/Schemas",
          "method": "get",
          "tags": [
            "SCIM"
          ],
          "method2": "list",
          "description": "Returns the list of schemas",
          "summary": "List Schemas",
          "operationId": "scimListSchemas2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ScimSchemaSearchResponse"
          }
        },
        {
          "endpoint": "/scim/{version}/Schemas/{uri}",
          "method": "get",
          "tags": [
            "SCIM"
          ],
          "method2": "get",
          "description": "Returns SCIM schema",
          "summary": "Get Schema",
          "operationId": "scimGetSchema2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "ScimSchemaResponse"
          }
        }
      ],
      "parameter": "uri"
    },
    {
      "paths": [
        "restapi",
        "oauth"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "insights",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "team-messaging"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "ringsense",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "analytics",
        "calls"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "webinar",
        "history"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "account"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}",
          "method": "get",
          "tags": [
            "Company"
          ],
          "method2": "get",
          "description": "Returns basic information about a particular RingCentral customer account.\n",
          "summary": "Get Account Info",
          "operationId": "readAccountInfo",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": true,
          "responseSchema": {
            "$ref": "GetAccountInfoResponse"
          }
        }
      ],
      "parameter": "accountId",
      "defaultParameter": "~"
    },
    {
      "paths": [
        "ai",
        "text",
        "v1",
        "async"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "audio",
        "v1",
        "async"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "team-messaging",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "status",
        "v1",
        "jobs"
      ],
      "operations": [
        {
          "endpoint": "/ai/status/v1/jobs/{jobId}",
          "method": "get",
          "tags": [
            "Status"
          ],
          "method2": "get",
          "description": "Returns async task status by Job ID",
          "summary": "Get Async Task Status",
          "operationId": "caiJobStatusGet",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": true,
          "responseSchema": {
            "$ref": "JobStatusResponse"
          }
        }
      ],
      "parameter": "jobId"
    },
    {
      "paths": [
        "rcvideo",
        "v2",
        "account"
      ],
      "operations": [],
      "parameter": "accountId",
      "noParentParameter": true
    },
    {
      "paths": [
        "analytics",
        "calls",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "rcvideo",
        "v1",
        "account"
      ],
      "operations": [],
      "parameter": "accountId",
      "noParentParameter": true
    },
    {
      "paths": [
        "rcvideo",
        "v1",
        "history"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "dictionary"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "rcvideo",
        "v2",
        "bridges"
      ],
      "operations": [
        {
          "endpoint": "/rcvideo/v2/bridges/{bridgeId}",
          "method": "get",
          "tags": [
            "Bridge Management"
          ],
          "method2": "get",
          "description": "Returns a bridge by **bridgeId** identifier.",
          "summary": "Get Bridge",
          "operationId": "getBridge",
          "rateLimitGroup": "Medium",
          "appPermission": "Video",
          "withParameter": true,
          "responseSchema": {
            "$ref": "BridgeResponse"
          },
          "queryParameters": "getBridgeParameters"
        },
        {
          "endpoint": "/rcvideo/v2/bridges/{bridgeId}",
          "method": "delete",
          "tags": [
            "Bridge Management"
          ],
          "method2": "delete",
          "description": "Deletes a bridge by **bridgeId** identifier.\nDeletion can only be done by bridge owner, his delegate or any user who has the **Super Admin** privilege.\n",
          "summary": "Delete Bridge",
          "operationId": "deleteBridge",
          "rateLimitGroup": "Medium",
          "appPermission": "Video",
          "withParameter": true
        },
        {
          "endpoint": "/rcvideo/v2/bridges/{bridgeId}",
          "method": "patch",
          "tags": [
            "Bridge Management"
          ],
          "method2": "patch",
          "description": "Updates a bridge by **bridgeId** identifier. The request body should contain JSON object with updating properties.\nUpdate can only be done by bridge owner, his delegate or any user who has the **Super Admin** privilege.\n",
          "summary": "Update Bridge",
          "operationId": "updateBridge",
          "rateLimitGroup": "Medium",
          "appPermission": "Video",
          "withParameter": true,
          "responseSchema": {
            "$ref": "BridgeResponse"
          },
          "bodyParameters": "updateBridgeRequest"
        }
      ],
      "parameter": "bridgeId"
    },
    {
      "paths": [
        "scim",
        "ResourceTypes"
      ],
      "operations": [
        {
          "endpoint": "/scim/{version}/ResourceTypes",
          "method": "get",
          "tags": [
            "SCIM"
          ],
          "method2": "list",
          "description": "Returns the list of supported SCIM resource types",
          "summary": "List Resource Types",
          "operationId": "scimListResourceTypes2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ScimResourceTypeSearchResponse"
          }
        },
        {
          "endpoint": "/scim/{version}/ResourceTypes/{type}",
          "method": "get",
          "tags": [
            "SCIM"
          ],
          "method2": "get",
          "description": "Returns resource type by ID",
          "summary": "Get Resource Type",
          "operationId": "scimGetResourceType2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "ScimResourceTypeResponse"
          }
        }
      ],
      "parameter": "type"
    },
    {
      "paths": [
        "rcvideo",
        "v1",
        "accounts"
      ],
      "operations": [],
      "parameter": "accountId",
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "client-info"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}",
          "method": "get",
          "tags": [
            "Company"
          ],
          "method2": "get",
          "description": "Returns basic information about particular RingCentral account",
          "summary": "Get Account Info",
          "operationId": "getAccountInfoV2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": true,
          "responseSchema": {
            "$ref": "AccountInfo"
          }
        }
      ],
      "parameter": "accountId",
      "defaultParameter": "~"
    },
    {
      "paths": [
        "restapi",
        "oauth",
        "token"
      ],
      "operations": [
        {
          "endpoint": "/restapi/oauth/token",
          "method": "post",
          "tags": [
            "OAuth and OpenID Connect"
          ],
          "method2": "post",
          "description": "Returns access (and potentially refresh) tokens for making API requests.\n\nFor confidential client application types\nthis endpoint requires client authentication using one of the supported\nmethods (`client_secret_basic`, `client_secret_jwt` or `private_key_jwt`)\n\nFor non-confidential client application types\nthe client identifier must be provided via `client_id` request attribute.\n",
          "summary": "OAuth 2.0 Token Endpoint",
          "operationId": "getToken",
          "rateLimitGroup": "Auth",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TokenInfo"
          },
          "bodyParameters": "getTokenRequest",
          "formUrlEncoded": true
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "registration"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "insights",
        "v1",
        "async"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "subscription"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/subscription",
          "method": "get",
          "tags": [
            "Subscriptions"
          ],
          "method2": "list",
          "description": "Returns a list of subscriptions created by the user for the current authorized client application.\n",
          "summary": "List Subscriptions",
          "operationId": "listSubscriptions",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SubscriptionListResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/subscription",
          "method": "post",
          "tags": [
            "Subscriptions"
          ],
          "method2": "post",
          "description": "This API allows client applications to register a new subscription so that it\ncan be notified of events when they occur on the platform.\n\nA subscription relates to a set of events that a client application would like\nto be informed of and the delivery channel by which they will be notified of\nthose events. How subscriptions are established depends upon the notification\nchannel the client application would like to use to receive the event\nnotification. For example, to create a webhook a developer would create a\nsubscription via a REST API call, while specifying a list of events or \"event\nfilters\" to be notified of, a transport type of `WebHook`, and the address or\nURL to which they would like the webhook delivered.\n\nHowever, developers wishing to subscribe to a set of events via a WebSocket\nchannel, would first connect to the WebSocket gateway, and then issue their\nsubscription request over the WebSocket itself, as opposed to making a REST\nAPI call to this endpoint.\n\nWhile the protocol for establishing a subscription may vary depending upon\nthe delivery channel for that subscription, the schemas used for representing\na subscription are the same across all delivery modes.\n\nSubscriptions are currently limited to 20 subscriptions per user/extension (for particular application).\n\nRingCentral currently supports the following delivery modes for event subscriptions:\n\n* [WebHook](https://developers.ringcentral.com/guide/notifications/webhooks/quick-start) - to receive event notifications as an HTTP POST to a given URL\n* [WebSocket](https://developers.ringcentral.com/guide/notifications/websockets/quick-start) - to receive real-time events over a persistent WebSocket connection\n* [PubNub](https://developers.ringcentral.com/guide/notifications/push-notifications/quick-start) (deprecated) - to receive a push notification sent directly to a client application\n\nDevelopers should be aware that the PubNub delivery mode is currently\ndeprecated and will be removed in 2024. Developers are encouraged to\n[migrate their client applications to use WebSockets](https://developers.ringcentral.com/guide/notifications/websockets/migration/)\ninstead.\n",
          "summary": "Create Subscription",
          "operationId": "createSubscription",
          "rateLimitGroup": "Medium",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SubscriptionInfo"
          },
          "bodyParameters": "createSubscriptionRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/subscription/{subscriptionId}",
          "method": "get",
          "tags": [
            "Subscriptions"
          ],
          "method2": "get",
          "description": "Returns the existing subscription by ID.",
          "summary": "Get Subscription",
          "operationId": "readSubscription",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "SubscriptionInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/subscription/{subscriptionId}",
          "method": "put",
          "tags": [
            "Subscriptions"
          ],
          "method2": "put",
          "description": "Updates the existing subscription. The client application can extend or narrow\nthe list of events for which it receives notifications within the current subscription.\nIf event filters are specified, calling this method modifies them for the\nexisting subscription. The method also allows one to set an expiration time for the\nsubscription itself.\n\nIf parameters other than `events` and `expiresIn` are specified in the request they will be ignored.\nIf the request body is empty then the specified subscription will be renewed without any\nevent filter modifications and using the default expiration time.\n\nIf the request is sent with empty body, it just renews a subscription\n(so it is an equivalent of the `POST /restapi/v1.0/subscription/{subscriptionId}/renew`).\n\nPlease note that `WebSocket` subscriptions cannot be updated via HTTP interface.\n",
          "summary": "Update Subscription",
          "operationId": "updateSubscription",
          "rateLimitGroup": "Medium",
          "withParameter": true,
          "responseSchema": {
            "$ref": "SubscriptionInfo"
          },
          "bodyParameters": "updateSubscriptionRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/subscription/{subscriptionId}",
          "method": "delete",
          "tags": [
            "Subscriptions"
          ],
          "method2": "delete",
          "description": "Cancels the existing subscription.",
          "summary": "Cancel Subscription",
          "operationId": "deleteSubscription",
          "rateLimitGroup": "Medium",
          "withParameter": true
        }
      ],
      "parameter": "subscriptionId"
    },
    {
      "paths": [
        "scim",
        "Users",
        "dotSearch"
      ],
      "operations": [
        {
          "endpoint": "/scim/{version}/Users/dotSearch",
          "method": "post",
          "tags": [
            "SCIM"
          ],
          "method2": "post",
          "description": "Returns the list of users satisfying search criteria",
          "summary": "Search/List Users",
          "operationId": "scimSearchViaPost2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ScimUserSearchResponse"
          },
          "bodyParameters": "scimSearchRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "oauth",
        "revoke"
      ],
      "operations": [
        {
          "endpoint": "/restapi/oauth/revoke",
          "method": "post",
          "tags": [
            "OAuth and OpenID Connect"
          ],
          "method2": "post",
          "description": "Revokes all active access/refresh tokens and invalidates the OAuth session basing on token provided.\nThe `token` parameter may be passed in query string or body and may represent access or refresh token.\n\nThis endpoint is defined by [RFC-7009 \"OAuth 2.0 Token Revocation\"](https://datatracker.ietf.org/doc/html/rfc7009)\n\nFor confidential client application types\nthis endpoint requires client authentication using one of the supported\nmethods (`client_secret_basic`, `client_secret_jwt` or `private_key_jwt`)\n",
          "summary": "OAuth 2.0 Token Revocation Endpoint",
          "operationId": "revokeToken",
          "rateLimitGroup": "Auth",
          "withParameter": false,
          "queryParameters": "revokeTokenParameters",
          "bodyParameters": "revokeTokenRequest",
          "formUrlEncoded": true
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "notifications"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "webinar",
        "configuration"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "number-parser"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "sites"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/sites",
          "method": "get",
          "tags": [
            "Multi-Site"
          ],
          "method2": "list",
          "description": "Returns a list of sites for the specified account.\n",
          "summary": "List Sites",
          "operationId": "listSites",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SitesList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/sites",
          "method": "post",
          "tags": [
            "Multi-Site"
          ],
          "method2": "post",
          "description": "Creates a site for the specified account.\n",
          "summary": "Create Site",
          "operationId": "createSite",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SiteInfo"
          },
          "bodyParameters": "createSiteRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/sites/{siteId}",
          "method": "get",
          "tags": [
            "Multi-Site"
          ],
          "method2": "get",
          "description": "Returns a site by ID.\n",
          "summary": "Get Site",
          "operationId": "readSite",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": true,
          "responseSchema": {
            "$ref": "SiteInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/sites/{siteId}",
          "method": "put",
          "tags": [
            "Multi-Site"
          ],
          "method2": "put",
          "description": "Updates a site specified in path.\n",
          "summary": "Update Site",
          "operationId": "updateSite",
          "rateLimitGroup": "Light",
          "appPermission": "EditExtensions",
          "userPermission": "Sites",
          "withParameter": true,
          "responseSchema": {
            "$ref": "SiteInfo"
          },
          "bodyParameters": "siteUpdateRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/sites/{siteId}",
          "method": "delete",
          "tags": [
            "Multi-Site"
          ],
          "method2": "delete",
          "description": "Deletes a site specified in path.\n",
          "summary": "Delete Site",
          "operationId": "deleteSite",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "Sites",
          "withParameter": true
        }
      ],
      "parameter": "siteId"
    },
    {
      "paths": [
        "ai",
        "ringsense",
        "v1",
        "public"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "rcvideo",
        "v2",
        "bridges",
        "pin"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "account",
        "device"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/device/{deviceId}",
          "method": "get",
          "tags": [
            "Devices"
          ],
          "method2": "get",
          "description": "Returns account device(s) by their ID(s).",
          "summary": "Get Device",
          "operationId": "readDevice",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyDevices",
          "withParameter": true,
          "responseSchema": {
            "$ref": "DeviceResource"
          },
          "queryParameters": "readDeviceParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/device/{deviceId}",
          "method": "put",
          "tags": [
            "Devices"
          ],
          "method2": "put",
          "description": "Updates account device(s) by their ID(s).",
          "summary": "Update Device",
          "operationId": "updateDevice",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyDevices",
          "withParameter": true,
          "responseSchema": {
            "$ref": "DeviceResource"
          },
          "queryParameters": "updateDeviceParameters",
          "bodyParameters": "accountDeviceUpdate"
        }
      ],
      "parameter": "deviceId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "a2p-sms"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "webinar",
        "registration",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "ai",
        "audio",
        "v1",
        "enrollments"
      ],
      "operations": [
        {
          "endpoint": "/ai/audio/v1/enrollments",
          "method": "get",
          "tags": [
            "Audio"
          ],
          "method2": "list",
          "description": "Returns the List of Enrolled Speakers",
          "summary": "List Enrolled Speakers",
          "operationId": "caiEnrollmentsList",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ListEnrolledSpeakers"
          },
          "queryParameters": "caiEnrollmentsListParameters"
        },
        {
          "endpoint": "/ai/audio/v1/enrollments",
          "method": "post",
          "tags": [
            "Audio"
          ],
          "method2": "post",
          "description": "Creates Enrollment for the provided Speaker.",
          "summary": "Create Speaker Enrollment",
          "operationId": "caiEnrollmentsCreate",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": false,
          "responseSchema": {
            "$ref": "EnrollmentStatus"
          },
          "bodyParameters": "enrollmentInput"
        },
        {
          "endpoint": "/ai/audio/v1/enrollments/{speakerId}",
          "method": "get",
          "tags": [
            "Audio"
          ],
          "method2": "get",
          "description": "Get The Status of Enrollment for the provided Speaker.",
          "summary": "Get Speaker Enrollment Status",
          "operationId": "caiEnrollmentsGet",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": true,
          "responseSchema": {
            "$ref": "EnrollmentStatus"
          }
        },
        {
          "endpoint": "/ai/audio/v1/enrollments/{speakerId}",
          "method": "delete",
          "tags": [
            "Audio"
          ],
          "method2": "delete",
          "description": "Delete The Enrollment for the provided Speaker.",
          "summary": "Delete Speaker Enrollment",
          "operationId": "caiEnrollmentsDelete",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": true
        },
        {
          "endpoint": "/ai/audio/v1/enrollments/{speakerId}",
          "method": "patch",
          "tags": [
            "Audio"
          ],
          "method2": "patch",
          "description": "Add newer audio data to improve an existing speaker enrollment",
          "summary": "Update Speaker Enrollment",
          "operationId": "caiEnrollmentsUpdate",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": true,
          "responseSchema": {
            "$ref": "EnrollmentStatus"
          },
          "bodyParameters": "enrollmentPatchInput"
        }
      ],
      "parameter": "speakerId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "tasks"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/tasks/{taskId}",
          "method": "get",
          "tags": [
            "Tasks"
          ],
          "method2": "get",
          "description": "Returns information about the specified task(s) by ID(s).",
          "summary": "Get Task",
          "operationId": "readTaskNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMTaskInfo"
          }
        },
        {
          "endpoint": "/team-messaging/v1/tasks/{taskId}",
          "method": "delete",
          "tags": [
            "Tasks"
          ],
          "method2": "delete",
          "description": "Deletes the specified task.",
          "summary": "Delete Task",
          "operationId": "deleteTaskNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true
        },
        {
          "endpoint": "/team-messaging/v1/tasks/{taskId}",
          "method": "patch",
          "tags": [
            "Tasks"
          ],
          "method2": "patch",
          "description": "Updates the specified task by ID.",
          "summary": "Update Task",
          "operationId": "patchTaskNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMTaskList"
          },
          "bodyParameters": "tMUpdateTaskRequest"
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "chats"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/chats",
          "method": "get",
          "tags": [
            "Chats"
          ],
          "method2": "list",
          "description": "Returns the list of chats where the user is a member and also public teams that can be joined.\n\nAll records in response are sorted by creation time of a chat in ascending order.\n\n**Chat types**\n\nThere are multiple types of chats, including:\n\n* **Personal** - each user is given a dedicated \"personal chat\" in which they are the only member.\n* **Direct** - a chat between two individuals.\n* **Group** - a chat between three or more named individuals. A \"group\" chat has no name.\n* **Team** - a chat related to a specific topic. Members can come and go freely from this chat type.\n* **Everyone** - a special chat containing every individual in a company.\n",
          "summary": "List Chats",
          "operationId": "listGlipChatsNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMChatList"
          },
          "queryParameters": "listGlipChatsNewParameters"
        },
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}",
          "method": "get",
          "tags": [
            "Chats"
          ],
          "method2": "get",
          "description": "Returns information about a chat by ID.\n\n**Note** 'Chat' is a general name for all types of threads including *Personal* (user's own me-chat), *Direct* (one on one chat), *Group* (chat of 3-15 participants without specific name), *Team* (chat of 2 and more participants, with a specific name), *Everyone* (company chat including all employees, with a specific name).\"\n",
          "summary": "Get Chat",
          "operationId": "readGlipChatNew",
          "rateLimitGroup": "Light",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMChatInfo"
          }
        }
      ],
      "parameter": "chatId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "teams"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/teams",
          "method": "get",
          "tags": [
            "Teams"
          ],
          "method2": "list",
          "description": "Returns the list of teams where the user is a member (both archived and active) combined with a list of public teams that can be joined by the current user. All records in response are sorted by creation time of a chat in ascending order. A team is a chat between 2 and more (unlimited number) participants assigned with specific name.",
          "summary": "List Teams",
          "operationId": "listGlipTeamsNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMTeamList"
          },
          "queryParameters": "listGlipTeamsNewParameters"
        },
        {
          "endpoint": "/team-messaging/v1/teams",
          "method": "post",
          "tags": [
            "Teams"
          ],
          "method2": "post",
          "description": "Creates a team, and adds a list of people to the team.",
          "summary": "Create Team",
          "operationId": "createGlipTeamNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMTeamInfo"
          },
          "bodyParameters": "tMCreateTeamRequest"
        },
        {
          "endpoint": "/team-messaging/v1/teams/{chatId}",
          "method": "get",
          "tags": [
            "Teams"
          ],
          "method2": "get",
          "description": "Returns information about the specified team.",
          "summary": "Get Team",
          "operationId": "readGlipTeamNew",
          "rateLimitGroup": "Light",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMTeamInfo"
          }
        },
        {
          "endpoint": "/team-messaging/v1/teams/{chatId}",
          "method": "delete",
          "tags": [
            "Teams"
          ],
          "method2": "delete",
          "description": "Deletes the specified team.",
          "summary": "Delete Team",
          "operationId": "deleteGlipTeamNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true
        },
        {
          "endpoint": "/team-messaging/v1/teams/{chatId}",
          "method": "patch",
          "tags": [
            "Teams"
          ],
          "method2": "patch",
          "description": "Updates the name and description of the specified team.",
          "summary": "Update Team",
          "operationId": "patchGlipTeamNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMTeamInfo"
          },
          "bodyParameters": "tMUpdateTeamRequest"
        }
      ],
      "parameter": "chatId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "notes"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/notes/{noteId}",
          "method": "get",
          "tags": [
            "Notes"
          ],
          "method2": "get",
          "description": "Returns the specified note(s). It is possible to fetch up to 50 notes per request.",
          "summary": "Get Note",
          "operationId": "readUserNoteNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMNoteWithBodyInfo"
          }
        },
        {
          "endpoint": "/team-messaging/v1/notes/{noteId}",
          "method": "delete",
          "tags": [
            "Notes"
          ],
          "method2": "delete",
          "description": "Deletes the specified note.",
          "summary": "Delete Note",
          "operationId": "deleteNoteNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true
        },
        {
          "endpoint": "/team-messaging/v1/notes/{noteId}",
          "method": "patch",
          "tags": [
            "Notes"
          ],
          "method2": "patch",
          "description": "Edits a note. Notes can be edited by any user if posted to a chat. the user belongs to.",
          "summary": "Update Note",
          "operationId": "patchNoteNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMNoteInfo"
          },
          "queryParameters": "patchNoteNewParameters",
          "bodyParameters": "tMCreateNoteRequest"
        }
      ],
      "parameter": "noteId"
    },
    {
      "paths": [
        "restapi",
        "oauth",
        "authorize"
      ],
      "operations": [
        {
          "endpoint": "/restapi/oauth/authorize",
          "method": "get",
          "tags": [
            "OAuth and OpenID Connect"
          ],
          "method2": "get",
          "description": "Performs Authentication of the End-User by sending the User Agent to the Authorization Server's\nAuthorization Endpoint for Authentication and Authorization,\nusing request parameters defined by OAuth 2.0 [RFC-6749](https://datatracker.ietf.org/doc/html/rfc6749#section-3.1)\nand additional parameters and parameter values defined by\n[OpenID Connect Core 1.0](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).\n\nThis is the version that uses HTTP `GET` method.\n",
          "summary": "OAuth 2.0 Authorization Endpoint",
          "operationId": "authorize",
          "rateLimitGroup": "Auth",
          "withParameter": false,
          "queryParameters": "authorizeParameters"
        },
        {
          "endpoint": "/restapi/oauth/authorize",
          "method": "post",
          "tags": [
            "OAuth and OpenID Connect"
          ],
          "method2": "post",
          "description": "Performs Authentication of the End-User by sending the User Agent to the Authorization Server's\nAuthorization Endpoint for Authentication and Authorization,\nusing request parameters defined by OAuth 2.0 [RFC-6749](https://datatracker.ietf.org/doc/html/rfc6749#section-3.1)\nand additional parameters and parameter values defined by\n[OpenID Connect Core 1.0](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).\n\nThis is the version that uses HTTP `POST` method.\n",
          "summary": "OAuth 2.0 Authorization Endpoint (POST)",
          "operationId": "authorize2",
          "rateLimitGroup": "Auth",
          "withParameter": false,
          "bodyParameters": "authorizeRequest",
          "formUrlEncoded": true
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "files"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/files",
          "method": "post",
          "tags": [
            "Posts"
          ],
          "method2": "post",
          "description": "Posts a file.",
          "summary": "Upload File",
          "operationId": "createGlipFileNew",
          "rateLimitGroup": "Heavy",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMAddFileRequest"
          },
          "queryParameters": "createGlipFileNewParameters",
          "bodyParameters": "createGlipFileNewRequest",
          "multipart": true
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "brand"
      ],
      "operations": [],
      "parameter": "brandId",
      "noParentParameter": true
    },
    {
      "paths": [
        "webinar",
        "notifications",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "groups"
      ],
      "operations": [],
      "parameter": "groupId",
      "noParentParameter": true
    },
    {
      "paths": [
        "webinar",
        "configuration",
        "v1"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "recent"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-log"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-log",
          "method": "get",
          "tags": [
            "Call Log"
          ],
          "method2": "list",
          "description": "Returns call log records filtered by parameters specified.",
          "summary": "List Company Call Records",
          "operationId": "readCompanyCallLog",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "FullCompanyCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallLogResponse"
          },
          "queryParameters": "readCompanyCallLogParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-log/{callRecordId}",
          "method": "get",
          "tags": [
            "Call Log"
          ],
          "method2": "get",
          "description": "Returns individual call log record(s) by ID. \n[Batch syntax](https://developers.ringcentral.com/guide/basics/batch-requests) is supported.\n",
          "summary": "Get Company Call Record(s)",
          "operationId": "readCompanyCallRecord",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "FullCompanyCallLog",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CallLogRecord"
          },
          "queryParameters": "readCompanyCallRecordParameters"
        }
      ],
      "parameter": "callRecordId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "presence"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/presence",
          "method": "get",
          "tags": [
            "Presence"
          ],
          "method2": "get",
          "description": "Returns presence status of all extensions of an account. Please note: The presenceStatus is returned as Offline (the parameters telephonyStatus, message, userStatus and dndStatus are not returned at all) for the following extension types: Department, Announcement Only, Voicemail (Take Messages Only), Fax User, Paging Only Group, Shared Lines Group, IVR Menu, Application Extension.",
          "summary": "Get User Presence Status List",
          "operationId": "readAccountPresence",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadPresence",
          "userPermission": "ReadPresenceStatus",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AccountPresenceInfo"
          },
          "queryParameters": "readAccountPresenceParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "greeting"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/greeting",
          "method": "post",
          "tags": [
            "Greetings"
          ],
          "method2": "post",
          "description": "Creates a custom company greeting.",
          "summary": "Create Company Greeting",
          "operationId": "createCompanyGreeting",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ReadUserInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CustomCompanyGreetingInfo"
          },
          "bodyParameters": "createCompanyGreetingRequest",
          "multipart": true
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "state"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/state",
          "method": "get",
          "tags": [
            "Regional Settings"
          ],
          "method2": "list",
          "description": "Returns all states of a certain country.\n",
          "summary": "List States",
          "operationId": "listStates",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetStateListResponse"
          },
          "queryParameters": "listStatesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/state/{stateId}",
          "method": "get",
          "tags": [
            "Regional Settings"
          ],
          "method2": "get",
          "description": "Returns information on a specific state by ID.\n",
          "summary": "Get State",
          "operationId": "readState",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "GetStateInfoResponse"
          }
        }
      ],
      "parameter": "stateId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "events"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/events",
          "method": "get",
          "tags": [
            "Calendar Events"
          ],
          "method2": "list",
          "description": "Returns all calendar events created by the current user.",
          "summary": "List User Events",
          "operationId": "readGlipEventsNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMEventList"
          },
          "queryParameters": "readGlipEventsNewParameters"
        },
        {
          "endpoint": "/team-messaging/v1/events",
          "method": "post",
          "tags": [
            "Calendar Events"
          ],
          "method2": "post",
          "description": "Creates a new calendar event.",
          "summary": "Create Event",
          "operationId": "createEventNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMEventInfo"
          },
          "bodyParameters": "tMCreateEventRequest"
        },
        {
          "endpoint": "/team-messaging/v1/events/{eventId}",
          "method": "get",
          "tags": [
            "Calendar Events"
          ],
          "method2": "get",
          "description": "Returns the specified calendar event(s) by ID(s).",
          "summary": "Get Event",
          "operationId": "readEventNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMEventInfo"
          }
        },
        {
          "endpoint": "/team-messaging/v1/events/{eventId}",
          "method": "put",
          "tags": [
            "Calendar Events"
          ],
          "method2": "put",
          "description": "Updates the specified calendar event.",
          "summary": "Update Event",
          "operationId": "updateEventNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMEventInfo"
          },
          "bodyParameters": "tMCreateEventRequest"
        },
        {
          "endpoint": "/team-messaging/v1/events/{eventId}",
          "method": "delete",
          "tags": [
            "Calendar Events"
          ],
          "method2": "delete",
          "description": "Deletes the specified calendar event.",
          "summary": "Delete Event",
          "operationId": "deleteEventNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true
        }
      ],
      "parameter": "eventId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "directory"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "recording"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/recording/{recordingId}",
          "method": "get",
          "tags": [
            "Call Recordings"
          ],
          "method2": "get",
          "description": "Returns call recordings by ID(s).",
          "summary": "Get Call Recording",
          "operationId": "readCallRecording",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallRecording",
          "userPermission": "ReadCallRecording",
          "withParameter": true,
          "responseSchema": {
            "$ref": "GetCallRecordingResponse"
          }
        }
      ],
      "parameter": "recordingId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension",
          "method": "get",
          "tags": [
            "Extensions"
          ],
          "method2": "list",
          "description": "Returns the list of extensions created for a particular account.\nAll types of extensions are included in this list.\n",
          "summary": "List Extensions",
          "operationId": "listExtensions",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetExtensionListResponse"
          },
          "queryParameters": "listExtensionsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension",
          "method": "post",
          "tags": [
            "Extensions"
          ],
          "method2": "post",
          "description": "Creates an extension.\n",
          "summary": "Create Extension",
          "operationId": "createExtension",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "AddRemoveUsers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ExtensionCreationResponse"
          },
          "bodyParameters": "extensionCreationRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}",
          "method": "get",
          "tags": [
            "User Settings"
          ],
          "method2": "get",
          "description": "Returns basic information about a particular extension of an account.\n",
          "summary": "Get Extension",
          "operationId": "readExtension",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": true,
          "responseSchema": {
            "$ref": "GetExtensionInfoResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}",
          "method": "put",
          "tags": [
            "User Settings"
          ],
          "method2": "put",
          "description": "Updates the user settings.",
          "summary": "Update Extension",
          "operationId": "updateExtension",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserInfo OR EditUserCredentials",
          "withParameter": true,
          "responseSchema": {
            "$ref": "GetExtensionInfoResponse"
          },
          "bodyParameters": "extensionUpdateRequest"
        }
      ],
      "parameter": "extensionId",
      "defaultParameter": "~"
    },
    {
      "paths": [
        "restapi",
        "account",
        "templates"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/templates",
          "method": "get",
          "tags": [
            "Extensions"
          ],
          "method2": "list",
          "description": "Returns the list of user templates for the current account.\n",
          "summary": "List User Templates",
          "operationId": "listUserTemplates",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "UserTemplates"
          },
          "queryParameters": "listUserTemplatesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/templates/{templateId}",
          "method": "get",
          "tags": [
            "Extensions"
          ],
          "method2": "get",
          "description": "Returns the user template by ID.\n",
          "summary": "Get User Template",
          "operationId": "readUserTemplate",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TemplateInfo"
          }
        }
      ],
      "parameter": "templateId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "ivr-menus"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-menus",
          "method": "get",
          "tags": [
            "IVR"
          ],
          "method2": "list",
          "description": "Returns a company IVR menus.",
          "summary": "Get IVR Menu list",
          "operationId": "readIVRMenuList",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "IVRMenuList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-menus",
          "method": "post",
          "tags": [
            "IVR"
          ],
          "method2": "post",
          "description": "Creates a company IVR menu.",
          "summary": "Create IVR Menu",
          "operationId": "createIVRMenu",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "AutoReceptionist",
          "withParameter": false,
          "responseSchema": {
            "$ref": "IVRMenuInfo"
          },
          "bodyParameters": "iVRMenuInfo"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-menus/{ivrMenuId}",
          "method": "get",
          "tags": [
            "IVR"
          ],
          "method2": "get",
          "description": "Returns a company IVR menu by ID.",
          "summary": "Get IVR Menu",
          "operationId": "readIVRMenu",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "AutoReceptionist",
          "withParameter": true,
          "responseSchema": {
            "$ref": "IVRMenuInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-menus/{ivrMenuId}",
          "method": "put",
          "tags": [
            "IVR"
          ],
          "method2": "put",
          "description": "Updates a company IVR menu by ID.",
          "summary": "Update IVR Menu",
          "operationId": "updateIVRMenu",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "AutoReceptionist",
          "withParameter": true,
          "responseSchema": {
            "$ref": "IVRMenuInfo"
          },
          "bodyParameters": "iVRMenuInfo"
        }
      ],
      "parameter": "ivrMenuId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "sites",
        "ivr"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/sites/{siteId}/ivr",
          "method": "get",
          "tags": [
            "Multi-Site"
          ],
          "method2": "get",
          "description": "Returns IVR settings for a site specified in path.\n",
          "summary": "Get Site IVR Settings",
          "operationId": "readSiteIvrSettings",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SiteIVRSettings"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/sites/{siteId}/ivr",
          "method": "put",
          "tags": [
            "Multi-Site"
          ],
          "method2": "put",
          "description": "Updates IVR settings for a site specified in path.\n",
          "summary": "Update Site IVR Settings",
          "operationId": "updateSiteIvrSettings",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "Sites",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SiteIVRSettings"
          },
          "bodyParameters": "siteIVRSettingsUpdate"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "user-role"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/user-role",
          "method": "get",
          "tags": [
            "Role Management"
          ],
          "method2": "list",
          "description": "Returns a list of account user roles.",
          "summary": "List Company User Roles",
          "operationId": "listUserRoles",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserRoles",
          "withParameter": false,
          "responseSchema": {
            "$ref": "RolesCollectionResource"
          },
          "queryParameters": "listUserRolesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/user-role",
          "method": "post",
          "tags": [
            "Role Management"
          ],
          "method2": "post",
          "description": "Creates a custom user role.",
          "summary": "Create Custom Role",
          "operationId": "createCustomRole",
          "rateLimitGroup": "Medium",
          "appPermission": "RoleManagement",
          "userPermission": "EditUserRoles",
          "withParameter": false,
          "bodyParameters": "roleResource"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/user-role/{roleId}",
          "method": "get",
          "tags": [
            "Role Management"
          ],
          "method2": "get",
          "description": "Returns a user role assigned to the current account.",
          "summary": "Get User Role",
          "operationId": "readUserRole",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserRoles",
          "withParameter": true,
          "responseSchema": {
            "$ref": "RoleResource"
          },
          "queryParameters": "readUserRoleParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/user-role/{roleId}",
          "method": "put",
          "tags": [
            "Role Management"
          ],
          "method2": "put",
          "description": "Updates a user role assigned to the current account by ID.",
          "summary": "Update User Role",
          "operationId": "updateUserRole",
          "rateLimitGroup": "Medium",
          "appPermission": "RoleManagement",
          "userPermission": "EditUserRoles",
          "withParameter": true,
          "responseSchema": {
            "$ref": "RoleResource"
          },
          "bodyParameters": "roleResource"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/user-role/{roleId}",
          "method": "delete",
          "tags": [
            "Role Management"
          ],
          "method2": "delete",
          "description": "Deletes a custom user role by ID.",
          "summary": "Delete Custom Role",
          "operationId": "deleteCustomRole",
          "rateLimitGroup": "Medium",
          "appPermission": "RoleManagement",
          "userPermission": "EditUserRoles",
          "withParameter": true,
          "queryParameters": "deleteCustomRoleParameters"
        }
      ],
      "parameter": "roleId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "persons"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/persons/{personId}",
          "method": "get",
          "tags": [
            "Profile"
          ],
          "method2": "get",
          "description": "Returns a user or multiple users by their ID(s). \n[Batch requests](https://developers.ringcentral.com/guide/basics/batch-requests) are supported.\n",
          "summary": "Get Person",
          "operationId": "readGlipPersonNew",
          "rateLimitGroup": "Light",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMPersonInfo"
          }
        }
      ],
      "parameter": "personId"
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1",
        "company"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "subscription",
        "renew"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/subscription/{subscriptionId}/renew",
          "method": "post",
          "tags": [
            "Subscriptions"
          ],
          "method2": "post",
          "description": "Renews the existing subscription (this request comes with empty body).\n\nPlease note that `WebSocket` subscriptions are renewed automatically while websocket session is alive.\n",
          "summary": "Renew Subscription",
          "operationId": "renewSubscription",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SubscriptionInfo"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "country"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/country",
          "method": "get",
          "tags": [
            "Regional Settings"
          ],
          "method2": "list",
          "description": "Returns all countries available for calling.\n",
          "summary": "List Countries",
          "operationId": "listCountries",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CountryListDictionaryModel"
          },
          "queryParameters": "listCountriesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/country/{countryId}",
          "method": "get",
          "tags": [
            "Regional Settings"
          ],
          "method2": "get",
          "description": "Returns information on a specific country.\n",
          "summary": "Get Country",
          "operationId": "readCountry",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CountryInfoDictionaryModel"
          }
        }
      ],
      "parameter": "countryId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "webhooks"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/webhooks",
          "method": "get",
          "tags": [
            "Incoming Webhooks"
          ],
          "method2": "list",
          "description": "Returns the list of all webhooks associated with the current account.",
          "summary": "List Webhooks",
          "operationId": "listGlipWebhooksNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMWebhookList"
          }
        },
        {
          "endpoint": "/team-messaging/v1/webhooks/{webhookId}",
          "method": "get",
          "tags": [
            "Incoming Webhooks"
          ],
          "method2": "get",
          "description": "Returns webhooks(s) with the specified id(s).",
          "summary": "Get Webhook",
          "operationId": "readGlipWebhookNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMWebhookList"
          }
        },
        {
          "endpoint": "/team-messaging/v1/webhooks/{webhookId}",
          "method": "delete",
          "tags": [
            "Incoming Webhooks"
          ],
          "method2": "delete",
          "description": "Deletes a webhook by ID.",
          "summary": "Delete Webhook",
          "operationId": "deleteGlipWebhookNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true
        }
      ],
      "parameter": "webhookId"
    },
    {
      "paths": [
        "rcvideo",
        "v2",
        "bridges",
        "pin",
        "web"
      ],
      "operations": [
        {
          "endpoint": "/rcvideo/v2/bridges/pin/web/{pin}",
          "method": "get",
          "tags": [
            "Bridge Management"
          ],
          "method2": "get",
          "description": "Finds a bridge by short identifier (Web PIN). Also it can be used to find a default bridge by the alias\n(personal meeting name).\n",
          "summary": "Search Bridge by Web PIN",
          "operationId": "getBridgeByWebPin",
          "rateLimitGroup": "Medium",
          "appPermission": "Video",
          "withParameter": true,
          "responseSchema": {
            "$ref": "BridgeResponse"
          },
          "queryParameters": "getBridgeByWebPinParameters"
        }
      ],
      "parameter": "pin"
    },
    {
      "paths": [
        "scim",
        "ServiceProviderConfig"
      ],
      "operations": [
        {
          "endpoint": "/scim/{version}/ServiceProviderConfig",
          "method": "get",
          "tags": [
            "SCIM"
          ],
          "method2": "get",
          "description": "Returns SCIM service provider configuration",
          "summary": "Get Provider Config",
          "operationId": "scimGetProviderConfig2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ScimProviderConfig"
          }
        }
      ]
    },
    {
      "paths": [
        "ai",
        "text",
        "v1",
        "async",
        "summarize"
      ],
      "operations": [
        {
          "endpoint": "/ai/text/v1/async/summarize",
          "method": "post",
          "tags": [
            "Text"
          ],
          "method2": "post",
          "description": "Returns Conversational Summarization to the webhook URI for segmented transcript of audios\nwith start, end, speakerId, text(alphanumeric and punctuations).\n",
          "summary": "Conversational Summarization",
          "operationId": "caiSummarize",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CaiAsyncApiResponse"
          },
          "queryParameters": "caiSummarizeParameters",
          "bodyParameters": "summaryInput"
        }
      ]
    },
    {
      "paths": [
        "ai",
        "text",
        "v1",
        "async",
        "punctuate"
      ],
      "operations": [
        {
          "endpoint": "/ai/text/v1/async/punctuate",
          "method": "post",
          "tags": [
            "Text"
          ],
          "method2": "post",
          "description": "Returns Smart Punctuation to the provided webhook URI.",
          "summary": "Smart Punctuation",
          "operationId": "caiPunctuate",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CaiAsyncApiResponse"
          },
          "queryParameters": "caiPunctuateParameters",
          "bodyParameters": "punctuateInput"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "everyone"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/everyone",
          "method": "get",
          "tags": [
            "Teams"
          ],
          "method2": "get",
          "description": "Returns information about \"Everyone\" chat (a company level chat which includes all employees).",
          "summary": "Get Everyone Chat",
          "operationId": "readGlipEveryoneNew",
          "rateLimitGroup": "Light",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "EveryoneTeamInfo"
          }
        },
        {
          "endpoint": "/team-messaging/v1/everyone",
          "method": "patch",
          "tags": [
            "Teams"
          ],
          "method2": "patch",
          "description": "Updates \"Everyone\" chat information.",
          "summary": "Update Everyone Chat",
          "operationId": "patchGlipEveryoneNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "EveryoneTeamInfo"
          },
          "bodyParameters": "updateEveryoneTeamRequest"
        }
      ]
    },
    {
      "paths": [
        "analytics",
        "calls",
        "v1",
        "accounts"
      ],
      "operations": [],
      "parameter": "accountId",
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "account",
        "audit-trail"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "ivr-prompts"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts",
          "method": "get",
          "tags": [
            "IVR"
          ],
          "method2": "list",
          "description": "Returns the list of IVR prompts.",
          "summary": "List IVR Prompts",
          "operationId": "listIvrPrompts",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyGreetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "IvrPrompts"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts",
          "method": "post",
          "tags": [
            "IVR"
          ],
          "method2": "post",
          "description": "Creates an IVR prompt.",
          "summary": "Create IVR Prompts",
          "operationId": "createIVRPrompt",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyGreetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "PromptInfo"
          },
          "bodyParameters": "createIVRPromptRequest",
          "multipart": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts/{promptId}",
          "method": "get",
          "tags": [
            "IVR"
          ],
          "method2": "get",
          "description": "Returns an IVR prompt by ID.",
          "summary": "Get IVR Prompt",
          "operationId": "readIVRPrompt",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyGreetings",
          "withParameter": true,
          "responseSchema": {
            "$ref": "PromptInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts/{promptId}",
          "method": "put",
          "tags": [
            "IVR"
          ],
          "method2": "put",
          "description": "Updates an IVR prompt by ID",
          "summary": "Update IVR Prompt",
          "operationId": "updateIVRPrompt",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyGreetings",
          "withParameter": true,
          "responseSchema": {
            "$ref": "PromptInfo"
          },
          "bodyParameters": "updateIVRPromptRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts/{promptId}",
          "method": "delete",
          "tags": [
            "IVR"
          ],
          "method2": "delete",
          "description": "Deletes an IVR prompt by ID.",
          "summary": "Delete IVR Prompt",
          "operationId": "deleteIVRPrompt",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyGreetings",
          "withParameter": true
        }
      ],
      "parameter": "promptId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-queues"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues",
          "method": "get",
          "tags": [
            "Call Queues"
          ],
          "method2": "list",
          "description": "Returns a call queue list.",
          "summary": "List Call Queues",
          "operationId": "listCallQueues",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallQueueList"
          },
          "queryParameters": "listCallQueuesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}",
          "method": "get",
          "tags": [
            "Call Queues"
          ],
          "method2": "get",
          "description": "Returns basic information on a call queue group extension.",
          "summary": "Get Call Queue",
          "operationId": "readCallQueueInfo",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CallQueueDetails"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}",
          "method": "put",
          "tags": [
            "Call Queues"
          ],
          "method2": "put",
          "description": "Updates information on a call queue group extension.\n",
          "summary": "Update Call Queue",
          "operationId": "updateCallQueueInfo",
          "rateLimitGroup": "Light",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserInfo",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CallQueueDetails"
          },
          "bodyParameters": "callQueueDetailsForUpdate"
        }
      ],
      "parameter": "groupId"
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "devices"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/devices/{deviceId}",
          "method": "delete",
          "tags": [
            "Devices"
          ],
          "method2": "delete",
          "description": "Disassociates a phone line (DL & Device) from an extension:\n\n - if the value of `keepAssetsInInventory` is `true`,\nthe given device is moved to unassigned devices and the number is moved to the number inventory;\n - if the value of `keepAssetsInInventory` is `false`, the given device and number is removed from the account;\n - if the parameter `keepAssetsInInventory` is not set (empty body), default value `true` is set.\n",
          "summary": "Remove Phone Line",
          "operationId": "removeLineJWSPublic",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditAccountDevices",
          "withParameter": true,
          "responseSchema": {
            "$ref": "RemoveLineResponse"
          },
          "bodyParameters": "removeLineRequest"
        }
      ],
      "parameter": "deviceId"
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "language"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/language",
          "method": "get",
          "tags": [
            "Regional Settings"
          ],
          "method2": "list",
          "description": "Returns information about the supported languages.\n",
          "summary": "List Languages",
          "operationId": "listLanguages",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "LanguageList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/language/{languageId}",
          "method": "get",
          "tags": [
            "Regional Settings"
          ],
          "method2": "get",
          "description": "Returns a language by ID.\n",
          "summary": "Get Language",
          "operationId": "readLanguage",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "LanguageInfo"
          }
        }
      ],
      "parameter": "languageId"
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "greeting"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/greeting",
          "method": "get",
          "tags": [
            "Greetings"
          ],
          "method2": "list",
          "description": "Returns the list of predefined standard greetings. Custom greetings\nrecorded by user are not returned in response to this request. See Get Extension\nCustom Greetings.\n",
          "summary": "List Standard Greetings",
          "operationId": "listStandardGreetings",
          "rateLimitGroup": "Medium",
          "withParameter": false,
          "responseSchema": {
            "$ref": "DictionaryGreetingList"
          },
          "queryParameters": "listStandardGreetingsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/greeting/{greetingId}",
          "method": "get",
          "tags": [
            "Greetings"
          ],
          "method2": "get",
          "description": "Returns a standard greeting by ID.",
          "summary": "Get Standard Greeting",
          "operationId": "readStandardGreeting",
          "rateLimitGroup": "Medium",
          "withParameter": true,
          "responseSchema": {
            "$ref": "DictionaryGreetingInfo"
          }
        }
      ],
      "parameter": "greetingId"
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "timezone"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/timezone",
          "method": "get",
          "tags": [
            "Regional Settings"
          ],
          "method2": "list",
          "description": "Returns all available timezones.\n",
          "summary": "List Timezones",
          "operationId": "listTimezones",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetTimezoneListResponse"
          },
          "queryParameters": "listTimezonesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/timezone/{timezoneId}",
          "method": "get",
          "tags": [
            "Regional Settings"
          ],
          "method2": "get",
          "description": "Returns information on a certain timezone.\n",
          "summary": "Get Timezone",
          "operationId": "readTimezone",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "GetTimezoneInfoResponse"
          }
        }
      ],
      "parameter": "timezoneId"
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1",
        "webinars"
      ],
      "operations": [
        {
          "endpoint": "/webinar/history/v1/webinars/{webinarId}",
          "method": "get",
          "tags": [
            "Historical Webinars"
          ],
          "method2": "get",
          "description": "Returns a historical webinar information by ID (host interface)",
          "summary": "Get Historical Webinar",
          "operationId": "rcwHistoryGetWebinar",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "WebinarResource"
          }
        }
      ],
      "parameter": "webinarId"
    },
    {
      "paths": [
        "rcvideo",
        "v1",
        "history",
        "meetings"
      ],
      "operations": [
        {
          "endpoint": "/rcvideo/v1/history/meetings",
          "method": "get",
          "tags": [
            "Meetings History"
          ],
          "method2": "list",
          "description": "Returns the list of user meetings.",
          "summary": "List Video Meetings",
          "operationId": "listVideoMeetings",
          "rateLimitGroup": "Light",
          "appPermission": "Video",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MeetingPage"
          },
          "queryParameters": "listVideoMeetingsParameters"
        },
        {
          "endpoint": "/rcvideo/v1/history/meetings/{meetingId}",
          "method": "get",
          "tags": [
            "Meetings History"
          ],
          "method2": "get",
          "description": "Returns a user meeting by ID.",
          "summary": "Get Video Meeting",
          "operationId": "getVideoMeeting",
          "rateLimitGroup": "Light",
          "appPermission": "Video",
          "withParameter": true,
          "responseSchema": {
            "$ref": "Meeting"
          }
        }
      ],
      "parameter": "meetingId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "companies"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/companies/{companyId}",
          "method": "get",
          "tags": [
            "Profile"
          ],
          "method2": "get",
          "description": "Returns information about one or more companies by their IDs.",
          "summary": "Get Company Info",
          "operationId": "readTMCompanyInfoNew",
          "rateLimitGroup": "Light",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMCompanyInfo"
          }
        }
      ],
      "parameter": "companyId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "teams",
        "add"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/teams/{chatId}/add",
          "method": "post",
          "tags": [
            "Teams"
          ],
          "method2": "post",
          "description": "Adds members to the specified team.",
          "summary": "Add Team Members",
          "operationId": "addGlipTeamMembersNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "bodyParameters": "tMAddTeamMembersRequest"
        }
      ]
    },
    {
      "paths": [
        "rcvideo",
        "v2",
        "bridges",
        "pin",
        "pstn"
      ],
      "operations": [
        {
          "endpoint": "/rcvideo/v2/bridges/pin/pstn/{pin}",
          "method": "get",
          "tags": [
            "Bridge Management"
          ],
          "method2": "get",
          "description": "Finds a bridge by Host or Participant PSTN PIN.",
          "summary": "Search Bridge by PSTN PIN",
          "operationId": "getBridgeByPstnPin",
          "rateLimitGroup": "Medium",
          "appPermission": "Video",
          "withParameter": true,
          "responseSchema": {
            "$ref": "BridgeResponse"
          },
          "queryParameters": "getBridgeByPstnPinParameters"
        }
      ],
      "parameter": "pin"
    },
    {
      "paths": [
        "restapi",
        "number-parser",
        "parse"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/number-parser/parse",
          "method": "post",
          "tags": [
            "Phone Numbers"
          ],
          "method2": "post",
          "description": "Returns one or more parsed and/or formatted phone numbers that are passed as strings.",
          "summary": "Parse Phone Number(s)",
          "operationId": "parsePhoneNumber",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ParsePhoneNumberResponse"
          },
          "queryParameters": "parsePhoneNumberParameters",
          "bodyParameters": "parsePhoneNumberRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "location"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/location",
          "method": "get",
          "tags": [
            "Regional Settings"
          ],
          "method2": "get",
          "description": "Returns all available locations for a certain state.\n",
          "summary": "List Locations",
          "operationId": "listLocations",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetLocationListResponse"
          },
          "queryParameters": "listLocationsParameters"
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1",
        "sessions"
      ],
      "operations": [
        {
          "endpoint": "/webinar/history/v1/sessions",
          "method": "get",
          "tags": [
            "Historical Webinars"
          ],
          "method2": "get",
          "description": "Returns the list of historical Webinar Sessions hosted by a current authorized user\nsorted by 'endTime' in the descending order. Depending on a session status 'endTime' can\nrepresent actual end time or scheduled end time.\n",
          "summary": "List Historical Webinar Sessions across Multiple Webinars",
          "operationId": "rcwHistoryListAllSessions",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SessionGlobalListResource"
          },
          "queryParameters": "rcwHistoryListAllSessionsParameters"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "favorites"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/favorites",
          "method": "get",
          "tags": [
            "Chats"
          ],
          "method2": "get",
          "description": "Returns a list of the current user's favorite chats.",
          "summary": "List Favorite Chats",
          "operationId": "listFavoriteChatsNew",
          "rateLimitGroup": "Light",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMChatListWithoutNavigation"
          },
          "queryParameters": "listFavoriteChatsNewParameters"
        }
      ]
    },
    {
      "paths": [
        "rcvideo",
        "v1",
        "account",
        "extension"
      ],
      "operations": [],
      "parameter": "extensionId",
      "noParentParameter": false
    },
    {
      "paths": [
        "rcvideo",
        "v2",
        "account",
        "extension"
      ],
      "operations": [],
      "parameter": "extensionId",
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "phone-number"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/phone-number",
          "method": "get",
          "tags": [
            "Phone Numbers"
          ],
          "method2": "list",
          "description": "Returns the list of phone numbers assigned to RingCentral customer\naccount. Both company-level and extension-level numbers are returned.\n",
          "summary": "List Company Phone Numbers",
          "operationId": "listAccountPhoneNumbers",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyPhoneNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AccountPhoneNumbers"
          },
          "queryParameters": "listAccountPhoneNumbersParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/phone-number/{phoneNumberId}",
          "method": "get",
          "tags": [
            "Phone Numbers"
          ],
          "method2": "get",
          "description": "Returns phone number(s) belonging to a certain account or extension by phoneNumberId(s).\n[Batch request syntax](https://developers.ringcentral.com/guide/basics/batch-requests) is supported.\n",
          "summary": "Get Phone Number",
          "operationId": "readAccountPhoneNumber",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyPhoneNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CompanyPhoneNumberInfo"
          }
        }
      ],
      "parameter": "phoneNumberId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "service-info"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/service-info",
          "method": "get",
          "tags": [
            "Company"
          ],
          "method2": "get",
          "description": "Returns the information about service plan, available features\nand limitations for a particular RingCentral customer account.\n",
          "summary": "Get Account Service Info",
          "operationId": "readAccountServiceInfo",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AccountServiceInfo"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "active-calls"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/active-calls",
          "method": "get",
          "tags": [
            "Call Log"
          ],
          "method2": "get",
          "description": "Returns records of all calls that are in progress, ordered by start time in descending order.",
          "summary": "List Company Active Calls",
          "operationId": "listCompanyActiveCalls",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallLogResponse"
          },
          "queryParameters": "listCompanyActiveCallsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "user-role"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/user-role",
          "method": "get",
          "tags": [
            "Role Management"
          ],
          "method2": "list",
          "description": "Returns a list of standard user roles.",
          "summary": "List Standard User Roles",
          "operationId": "listStandardUserRole",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "RolesCollectionResource"
          },
          "queryParameters": "listStandardUserRoleParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/user-role/{roleId}",
          "method": "get",
          "tags": [
            "Role Management"
          ],
          "method2": "get",
          "description": "Returns a standard user role by ID.",
          "summary": "Get Standard User Role",
          "operationId": "readStandardUserRole",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "RoleResource"
          }
        }
      ],
      "parameter": "roleId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "teams",
        "join"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/teams/{chatId}/join",
          "method": "post",
          "tags": [
            "Teams"
          ],
          "method2": "post",
          "description": "Adds the current user to the specified team.",
          "summary": "Join Team",
          "operationId": "joinGlipTeamNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "notes",
        "lock"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/notes/{noteId}/lock",
          "method": "post",
          "tags": [
            "Notes"
          ],
          "method2": "post",
          "description": "Locks a note providing the user with the unique write access for 5 hours.",
          "summary": "Lock Note",
          "operationId": "lockNoteNew",
          "rateLimitGroup": "Light",
          "appPermission": "TeamMessaging",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "fax"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/fax",
          "method": "post",
          "tags": [
            "Fax"
          ],
          "method2": "post",
          "description": "Creates and sends/re-sends a fax message. Re-send can be implemented\nif sending has failed. Fax attachment size (both single and total) is\nlimited to 50Mb.\n",
          "summary": "Create Fax Message",
          "operationId": "createFaxMessage",
          "rateLimitGroup": "Heavy",
          "appPermission": "Faxes",
          "userPermission": "OutboundFaxes",
          "withParameter": false,
          "responseSchema": {
            "$ref": "FaxResponse"
          },
          "bodyParameters": "createFaxMessageRequest",
          "multipart": true
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "sms"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/sms",
          "method": "post",
          "tags": [
            "SMS"
          ],
          "method2": "post",
          "description": "Creates and sends a new text message or multiple messages. You can send SMS\nmessages simultaneously to different recipients up to 40 requests per minute;\nthis limitation is relevant for all client applications. Sending and receiving\nSMS is available for Toll-Free Numbers within the USA. You can send up to\n10 attachments in a single MMS message; the size of all attachments linked\nis limited up to 1500000 bytes.\n",
          "summary": "Send SMS",
          "operationId": "createSMSMessage",
          "rateLimitGroup": "Medium",
          "appPermission": "SMS",
          "userPermission": "OutboundSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetSMSMessageInfoResponse"
          },
          "bodyParameters": "createSMSMessage",
          "multipart": true
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "mms"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/mms",
          "method": "post",
          "tags": [
            "SMS"
          ],
          "method2": "post",
          "description": "Creates and sends a new media message or multiple messages. Sending MMS\nmessages simultaneously to different recipients is limited up to 50\nrequests per minute; relevant for all client applications.\n",
          "summary": "Send MMS",
          "operationId": "createMMS",
          "rateLimitGroup": "Medium",
          "appPermission": "SMS",
          "userPermission": "OutboundSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetSMSMessageInfoResponse"
          },
          "bodyParameters": "createMMSMessage",
          "multipart": true
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "custom-fields"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/custom-fields",
          "method": "get",
          "tags": [
            "Custom Fields"
          ],
          "method2": "get",
          "description": "Returns the list of created custom fields.",
          "summary": "Get Custom Field List",
          "operationId": "listCustomFields",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CustomFieldList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/custom-fields",
          "method": "post",
          "tags": [
            "Custom Fields"
          ],
          "method2": "post",
          "description": "Creates custom field attached to the object.",
          "summary": "Create Custom Field",
          "operationId": "createCustomField",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "Users",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CustomFieldModel"
          },
          "bodyParameters": "customFieldCreateRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/custom-fields/{fieldId}",
          "method": "put",
          "tags": [
            "Custom Fields"
          ],
          "method2": "put",
          "description": "Updates custom field by ID specified in path.",
          "summary": "Update Custom Field",
          "operationId": "updateCustomField",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "Users",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CustomFieldModel"
          },
          "bodyParameters": "customFieldUpdateRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/custom-fields/{fieldId}",
          "method": "delete",
          "tags": [
            "Custom Fields"
          ],
          "method2": "delete",
          "description": "Deletes custom field(s) by ID(s) with the corresponding values.",
          "summary": "Delete Custom Field",
          "operationId": "deleteCustomField",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "Users",
          "withParameter": true
        }
      ],
      "parameter": "fieldId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "sites",
        "members"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/sites/{siteId}/members",
          "method": "get",
          "tags": [
            "Multi-Site"
          ],
          "method2": "get",
          "description": "Returns members of a site specified in path.\n",
          "summary": "List Site Members",
          "operationId": "listSiteMembers",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SiteMembersList"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "permission"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/permission",
          "method": "get",
          "tags": [
            "User Permissions"
          ],
          "method2": "list",
          "description": "Returns a list of extension user permissions.",
          "summary": "List Permissions",
          "operationId": "listPermissions",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "PermissionCollectionResource"
          },
          "queryParameters": "listPermissionsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/permission/{permissionId}",
          "method": "get",
          "tags": [
            "User Permissions"
          ],
          "method2": "get",
          "description": "Returns a user permission by ID.",
          "summary": "Get Permission",
          "operationId": "readPermission",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "PermissionResource"
          }
        }
      ],
      "parameter": "permissionId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "chats",
        "posts"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/posts",
          "method": "get",
          "tags": [
            "Posts"
          ],
          "method2": "list",
          "description": "Returns a list of posts from the specified chat.",
          "summary": "List Posts",
          "operationId": "readGlipPostsNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMPostsList"
          },
          "queryParameters": "readGlipPostsNewParameters"
        },
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/posts",
          "method": "post",
          "tags": [
            "Posts"
          ],
          "method2": "post",
          "description": "Creates a post in the chat specified in path. Any mention can be added within the `text` attribute of\nthe request body in .md format - `![:Type](id)`, where `type` is one of (Person, Team, File, Note,\nTask, Event, Link, Card) and `id` is a unique identifier of the mentioned object of the specified type.\nAttachments can also be added to a post by passing the type and ID of attachment(s) in request body.\n",
          "summary": "Create Post",
          "operationId": "createGlipPostNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMPostInfo"
          },
          "bodyParameters": "tMCreatePostRequest"
        },
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/posts/{postId}",
          "method": "get",
          "tags": [
            "Posts"
          ],
          "method2": "get",
          "description": "Returns information about the specified post.",
          "summary": "Get Post",
          "operationId": "readGlipPostNew",
          "rateLimitGroup": "Light",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMPostInfo"
          }
        },
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/posts/{postId}",
          "method": "delete",
          "tags": [
            "Posts"
          ],
          "method2": "delete",
          "description": "Deletes the specified post from the chat.",
          "summary": "Delete Post",
          "operationId": "deleteGlipPostNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true
        },
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/posts/{postId}",
          "method": "patch",
          "tags": [
            "Posts"
          ],
          "method2": "patch",
          "description": "Updates a specific post within a chat.",
          "summary": "Update Post",
          "operationId": "patchGlipPostNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMPostInfo"
          },
          "bodyParameters": "tMUpdatePostRequest"
        }
      ],
      "parameter": "postId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-log-sync"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-log-sync",
          "method": "get",
          "tags": [
            "Call Log"
          ],
          "method2": "get",
          "description": "Synchronizes company call log records.",
          "summary": "Sync Company Call Log",
          "operationId": "syncAccountCallLog",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallLogSyncResponse"
          },
          "queryParameters": "syncAccountCallLogParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "assigned-role"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/assigned-role",
          "method": "get",
          "tags": [
            "Role Management"
          ],
          "method2": "get",
          "description": "Returns a list of roles assigned to the current account.",
          "summary": "List Company Assigned Roles",
          "operationId": "listAssignedRoles",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadAssignedRoles",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ExtensionWithRolesCollectionResource"
          },
          "queryParameters": "listAssignedRolesParameters"
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1",
        "recordings"
      ],
      "operations": [
        {
          "endpoint": "/webinar/history/v1/recordings",
          "method": "get",
          "tags": [
            "Historical Recordings"
          ],
          "method2": "list",
          "description": "Returns the list of webinar recordings for a given webinar host user\n",
          "summary": "List Webinar Recordings",
          "operationId": "rcwHistoryListRecordings",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "RecordingListResource"
          },
          "queryParameters": "rcwHistoryListRecordingsParameters"
        },
        {
          "endpoint": "/webinar/history/v1/recordings/{recordingId}",
          "method": "get",
          "tags": [
            "Historical Recordings"
          ],
          "method2": "get",
          "description": "Returns the webinar recording by ID (Webinar host's interface).\nThis API also returns sharing link if sharing is enabled.\n",
          "summary": "Get Webinar Recording",
          "operationId": "rcwHistoryGetRecording",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "RecordingItemExtendedModel"
          }
        }
      ],
      "parameter": "recordingId"
    },
    {
      "paths": [
        "rcvideo",
        "v1",
        "account",
        "recordings"
      ],
      "operations": [
        {
          "endpoint": "/rcvideo/v1/account/{accountId}/recordings",
          "method": "get",
          "tags": [
            "Meeting Recordings"
          ],
          "method2": "get",
          "description": "Returns all account recordings.\nThis endpoint is used in Admin recording service, not regular web\n",
          "summary": "List Account Recordings",
          "operationId": "getAccountRecordings",
          "rateLimitGroup": "Light",
          "appPermission": "Video",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CloudRecordings"
          },
          "queryParameters": "getAccountRecordingsParameters"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "chats",
        "tasks"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/tasks",
          "method": "get",
          "tags": [
            "Tasks"
          ],
          "method2": "get",
          "description": "Returns the list of tasks of the specified chat.",
          "summary": "List Chat Tasks",
          "operationId": "listChatTasksNew",
          "rateLimitGroup": "Heavy",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMTaskList"
          },
          "queryParameters": "listChatTasksNewParameters"
        },
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/tasks",
          "method": "post",
          "tags": [
            "Tasks"
          ],
          "method2": "post",
          "description": "Creates a task in the specified chat.",
          "summary": "Create Task",
          "operationId": "createTaskNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMTaskInfo"
          },
          "bodyParameters": "tMCreateTaskRequest"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "chats",
        "notes"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/notes",
          "method": "get",
          "tags": [
            "Notes"
          ],
          "method2": "get",
          "description": "Returns the list of chat notes.",
          "summary": "List Notes",
          "operationId": "listChatNotesNew",
          "rateLimitGroup": "Heavy",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMNoteList"
          },
          "queryParameters": "listChatNotesNewParameters"
        },
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/notes",
          "method": "post",
          "tags": [
            "Notes"
          ],
          "method2": "post",
          "description": "Creates a new note in the specified chat.",
          "summary": "Create Note",
          "operationId": "createChatNoteNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMNoteInfo"
          },
          "bodyParameters": "tMCreateNoteRequest"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "data-export"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/data-export",
          "method": "get",
          "tags": [
            "Compliance Exports"
          ],
          "method2": "list",
          "description": "Returns the list of Glip data export tasks.",
          "summary": "List Data Export Tasks",
          "operationId": "listDataExportTasksNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "DataExportTaskList"
          },
          "queryParameters": "listDataExportTasksNewParameters"
        },
        {
          "endpoint": "/team-messaging/v1/data-export",
          "method": "post",
          "tags": [
            "Compliance Exports"
          ],
          "method2": "post",
          "description": "Creates a task for Glip data export and returns a link at which the exported data will be available in future once the task is implemented. The exported data can be downloaded by calling Get Data Export Task method with the specified task ID. Simultaneously no more than 2 tasks per company can be created.",
          "summary": "Create Data Export Task",
          "operationId": "createDataExportTaskNew",
          "rateLimitGroup": "Heavy",
          "appPermission": "TeamMessaging",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "DataExportTask"
          },
          "bodyParameters": "createDataExportTaskRequest"
        },
        {
          "endpoint": "/team-messaging/v1/data-export/{taskId}",
          "method": "get",
          "tags": [
            "Compliance Exports"
          ],
          "method2": "get",
          "description": "Returns the links for downloading Glip data exported within the specified task. If the export task is still in progress, then only the task status will be returned. If the data is ready for downloading, then the list of URLs will be returned.",
          "summary": "Get Data Export Task",
          "operationId": "readDataExportTaskNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "DataExportTask"
          }
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "teams",
        "leave"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/teams/{chatId}/leave",
          "method": "post",
          "tags": [
            "Teams"
          ],
          "method2": "post",
          "description": "Removes the current user from the specified team.",
          "summary": "Leave Team",
          "operationId": "leaveGlipTeamNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "rcvideo",
        "v1",
        "accounts",
        "extensions"
      ],
      "operations": [],
      "parameter": "extensionId",
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "answering-rule"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/answering-rule",
          "method": "get",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "list",
          "description": "Returns a list of company call handling rules.",
          "summary": "List Company Call Handling Rules",
          "operationId": "listCompanyAnsweringRules",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CompanyAnsweringRuleList"
          },
          "queryParameters": "listCompanyAnsweringRulesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/answering-rule",
          "method": "post",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "post",
          "description": "Creates call handling rule on account level.",
          "summary": "Create Company Call Handling Rule",
          "operationId": "createCompanyAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CompanyAnsweringRuleInfo"
          },
          "bodyParameters": "companyAnsweringRuleRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/answering-rule/{ruleId}",
          "method": "get",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "get",
          "description": "Returns a company call handling rule by ID.",
          "summary": "Get Company Call Handling Rule",
          "operationId": "readCompanyAnsweringRule",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyAnsweringRules",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CompanyAnsweringRuleInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/answering-rule/{ruleId}",
          "method": "put",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "put",
          "description": "Updates a company call handling rule.",
          "summary": "Update Company Call Handling Rule",
          "operationId": "updateCompanyAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyAnsweringRules",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CompanyAnsweringRuleInfo"
          },
          "bodyParameters": "companyAnsweringRuleUpdate"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/answering-rule/{ruleId}",
          "method": "delete",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "delete",
          "description": "Deletes a company custom call handling rule by a particular ID.",
          "summary": "Delete Company Call Handling Rule",
          "operationId": "deleteCompanyAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyAnsweringRules",
          "withParameter": true
        }
      ],
      "parameter": "ruleId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "business-hours"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/business-hours",
          "method": "get",
          "tags": [
            "Business Hours"
          ],
          "method2": "get",
          "description": "Returns the company business hours schedule. Business hours (and After hours - all the remaining time) schedules are commonly used for setting call handling rules - `business-hours-rule` and `after-hours-rule` correspondingly.",
          "summary": "Get Company Business Hours",
          "operationId": "readCompanyBusinessHours",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CompanyBusinessHours"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/business-hours",
          "method": "put",
          "tags": [
            "Business Hours"
          ],
          "method2": "put",
          "description": "Updates the company business hours schedule.",
          "summary": "Update Company Business Hours",
          "operationId": "updateCompanyBusinessHours",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CompanyBusinessHours"
          },
          "bodyParameters": "companyBusinessHoursUpdateRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-recording"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording",
          "method": "get",
          "tags": [
            "Call Recording Settings"
          ],
          "method2": "get",
          "description": "Returns call recording settings.",
          "summary": "Get Call Recording Settings",
          "operationId": "readCallRecordingSettings",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallRecordingSettingsResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording",
          "method": "put",
          "tags": [
            "Call Recording Settings"
          ],
          "method2": "put",
          "description": "Updates current call recording settings.",
          "summary": "Update Call Recording Settings",
          "operationId": "updateCallRecordingSettings",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallRecordingSettingsResource"
          },
          "bodyParameters": "callRecordingSettingsResource"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "extensions"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/extensions",
          "method": "delete",
          "tags": [
            "User Settings"
          ],
          "method2": "delete",
          "description": "Deletes user extension(s) and either keeps or destroys the assets - numbers and devices.\nMultiple extensions can be deleted with a single API call.\n",
          "summary": "Delete User Extensions",
          "operationId": "bulkDeleteUsersV2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "Users",
          "withParameter": false,
          "responseSchema": {
            "$ref": "BulkDeleteUsersResponse"
          },
          "bodyParameters": "bulkDeleteUsersRequest"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "teams",
        "remove"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/teams/{chatId}/remove",
          "method": "post",
          "tags": [
            "Teams"
          ],
          "method2": "post",
          "description": "Removes members from the specified team.",
          "summary": "Remove Team Members",
          "operationId": "removeGlipTeamMembersNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "bodyParameters": "tMRemoveTeamMembersRequest"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "notes",
        "unlock"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/notes/{noteId}/unlock",
          "method": "post",
          "tags": [
            "Notes"
          ],
          "method2": "post",
          "description": "Unlocks a note letting other users edit this note. Once the note is locked (by another user) it cannot be unlocked during 5 hours since the lock datetime.",
          "summary": "Unlock Note",
          "operationId": "unlockNoteNew",
          "rateLimitGroup": "Light",
          "appPermission": "TeamMessaging",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "recent",
        "chats"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/recent/chats",
          "method": "get",
          "tags": [
            "Chats"
          ],
          "method2": "get",
          "description": "Returns recent chats where the user is a member. All records in response are sorted by the `lastModifiedTime` in descending order (the latest changed chat is displayed first on page)",
          "summary": "List Recent Chats",
          "operationId": "listRecentChatsNew",
          "rateLimitGroup": "Light",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMChatListWithoutNavigation"
          },
          "queryParameters": "listRecentChatsNewParameters"
        }
      ]
    },
    {
      "paths": [
        "ai",
        "ringsense",
        "v1",
        "public",
        "accounts"
      ],
      "operations": [],
      "parameter": "accountId",
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "grant"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/grant",
          "method": "get",
          "tags": [
            "User Settings"
          ],
          "method2": "get",
          "description": "Returns a list of extensions including information on grants given to the current extension towards them. \nCurrently the list of grants includes: picking up a call, call monitoring, calling or receiving a call on behalf\nof somebody, call delegation and calling paging groups.\n",
          "summary": "List Extension Grants",
          "operationId": "listExtensionGrants",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetExtensionGrantListResponse"
          },
          "queryParameters": "listExtensionGrantsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "device",
        "sip-info"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/device/{deviceId}/sip-info",
          "method": "get",
          "tags": [
            "Devices"
          ],
          "method2": "get",
          "description": "Returns device SIP information.",
          "summary": "Get Device SIP Info",
          "operationId": "readDeviceSipInfo",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyDevices",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SipInfoResource"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "a2p-sms",
        "batches"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/batches",
          "method": "get",
          "tags": [
            "High Volume SMS"
          ],
          "method2": "list",
          "description": "Returns the list of A2P batches sent from the current account.\nThe list can be filtered by message batch ID and/or from phone number.\n",
          "summary": "List A2P SMS Batches",
          "operationId": "listA2PBatches",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "BatchListResponse"
          },
          "queryParameters": "listA2PBatchesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/batches",
          "method": "post",
          "tags": [
            "High Volume SMS"
          ],
          "method2": "post",
          "description": "Allows to send high volume of A2P (Application-to-Person) SMS messages\n(in message batches). Only phone number with the `A2PSmsSender` feature can\nbe used as a sender.\n",
          "summary": "Send A2P SMS",
          "operationId": "createA2PSMS",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MessageBatchResponse"
          },
          "bodyParameters": "messageBatchCreateRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/batches/{batchId}",
          "method": "get",
          "tags": [
            "High Volume SMS"
          ],
          "method2": "get",
          "description": "Returns information on a message batch.",
          "summary": "Get A2P SMS Batch",
          "operationId": "readA2PBatch",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": true,
          "responseSchema": {
            "$ref": "MessageBatchResponse"
          }
        }
      ],
      "parameter": "batchId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-recordings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recordings",
          "method": "delete",
          "tags": [
            "Call Recordings"
          ],
          "method2": "delete",
          "description": "Deletes company call recordings by their IDs. *Please note:* This method deletes the recording file itself,\nnot the record of it in the call log.\n",
          "summary": "Delete Company Call Recordings",
          "operationId": "deleteCompanyCallRecordings",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditCallLog",
          "userPermission": "EditCompanyCallRecordings",
          "withParameter": false,
          "bodyParameters": "callRecordingIds"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "groups",
        "events"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/groups/{groupId}/events",
          "method": "get",
          "tags": [
            "Calendar Events"
          ],
          "method2": "get",
          "description": "Returns a list of calendar events available for the current user within the specified group. Users can only see their personal tasks and public tasks.",
          "summary": "List Group Events",
          "operationId": "listGroupEventsNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMEventInfo"
          }
        },
        {
          "endpoint": "/team-messaging/v1/groups/{groupId}/events",
          "method": "post",
          "tags": [
            "Calendar Events"
          ],
          "method2": "post",
          "description": "Creates a new calendar event within the specified group.",
          "summary": "Create Event by Group ID",
          "operationId": "createEventByGroupIdNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMEventInfo"
          },
          "bodyParameters": "tMCreateEventRequest"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "conversations"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/conversations",
          "method": "get",
          "tags": [
            "Conversations"
          ],
          "method2": "list",
          "description": "Returns the list of conversations where the user is a member. All records in response are sorted by creation time of a conversation in ascending order. Conversation is a chat of the *Group* type.",
          "summary": "List Conversations",
          "operationId": "listGlipConversationsNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMConversationList"
          },
          "queryParameters": "listGlipConversationsNewParameters"
        },
        {
          "endpoint": "/team-messaging/v1/conversations",
          "method": "post",
          "tags": [
            "Conversations"
          ],
          "method2": "post",
          "description": "Creates a new conversation or opens the existing one. If the conversation already exists, then its ID will be returned in response. A conversation is an adhoc discussion between a particular set of users, not featuring any specific name or description; it is a chat of 'Group' type. If you add a person to the existing conversation (group), it creates a whole new conversation.",
          "summary": "Create/Open Conversation",
          "operationId": "createGlipConversationNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMConversationInfo"
          },
          "bodyParameters": "createConversationRequest"
        },
        {
          "endpoint": "/team-messaging/v1/conversations/{chatId}",
          "method": "get",
          "tags": [
            "Conversations"
          ],
          "method2": "get",
          "description": "Returns information about the specified conversation, including the list of conversation participants. A conversation is an adhoc discussion between a particular set of users, not featuring any specific name or description; it is a chat of 'Group' type. If you add a person to the existing conversation, it creates a whole new conversation.",
          "summary": "Get Conversation",
          "operationId": "readGlipConversationNew",
          "rateLimitGroup": "Light",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "TMConversationInfo"
          }
        }
      ],
      "parameter": "chatId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "teams",
        "archive"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/teams/{chatId}/archive",
          "method": "post",
          "tags": [
            "Teams"
          ],
          "method2": "post",
          "description": "Changes the status of the specified team to 'Archived'.",
          "summary": "Archive Team",
          "operationId": "archiveGlipTeamNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "notes",
        "publish"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/notes/{noteId}/publish",
          "method": "post",
          "tags": [
            "Notes"
          ],
          "method2": "post",
          "description": "Publishes a note making it visible to other users.",
          "summary": "Publish Note",
          "operationId": "publishNoteNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMNoteInfo"
          }
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "configuration",
        "v1",
        "company"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "device"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/device",
          "method": "get",
          "tags": [
            "Devices"
          ],
          "method2": "get",
          "description": "Returns devices of an extension or multiple extensions by their ID(s). \n[Batch request syntax](https://developers.ringcentral.com/guide/basics/batch-requests) is supported.\n",
          "summary": "List Extension Devices",
          "operationId": "listExtensionDevices",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserDevices",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetExtensionDevicesResponse"
          },
          "queryParameters": "listExtensionDevicesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "greeting",
        "content"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/greeting/{greetingId}/content",
          "method": "get",
          "tags": [
            "Greetings"
          ],
          "method2": "get",
          "description": "Returns account-level greeting media contents.\n\n**This API must be called via media API entry point, e.g. https://media.ringcentral.com**\n",
          "summary": "Get Account Greeting Media Content",
          "operationId": "readAccountGreetingContent",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          },
          "queryParameters": "readAccountGreetingContentParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "a2p-sms",
        "messages"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/messages",
          "method": "get",
          "tags": [
            "High Volume SMS"
          ],
          "method2": "list",
          "description": "Returns the list of outbound/inbound A2P messages sent from/to A2P phone numbers of the current account. The list can be filtered by message batch ID and/or phone number.",
          "summary": "List A2P SMS Messages",
          "operationId": "listA2PSMS",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MessageListResponse"
          },
          "queryParameters": "listA2PSMSParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/messages/{messageId}",
          "method": "get",
          "tags": [
            "High Volume SMS"
          ],
          "method2": "get",
          "description": "Returns the details of an A2P SMS message by ID.",
          "summary": "Get A2P SMS",
          "operationId": "readA2PSMS",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": true,
          "responseSchema": {
            "$ref": "MessageDetailsResponse"
          }
        }
      ],
      "parameter": "messageId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "device",
        "emergency"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/device/{deviceId}/emergency",
          "method": "put",
          "tags": [
            "Devices"
          ],
          "method2": "put",
          "description": "Updates account device emergency information.",
          "summary": "Update Device Emergency Info",
          "operationId": "updateDeviceEmergency",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyDevices",
          "withParameter": false,
          "responseSchema": {
            "$ref": "DeviceResource"
          },
          "bodyParameters": "accountDeviceUpdate"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "a2p-sms",
        "statuses"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/statuses",
          "method": "get",
          "tags": [
            "High Volume SMS"
          ],
          "method2": "get",
          "description": "Retrieves a set of message counts by message status and error codes filtered by dates, batchId and message direction.",
          "summary": "List A2P SMS Statuses",
          "operationId": "aggregateA2PSMSStatuses",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MessageStatusesResponse"
          },
          "queryParameters": "aggregateA2PSMSStatusesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "a2p-sms",
        "opt-outs"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/opt-outs",
          "method": "get",
          "tags": [
            "High Volume SMS"
          ],
          "method2": "get",
          "description": "Returns the list of numbers opted out from the account. The list\ncan be filtered by `to`/`from` phone number query parameters. Specifying `text/csv`\nin the `Accept` header lets download the data in the CSV format.\n",
          "summary": "List Opted Out Numbers",
          "operationId": "readA2PSMSOptOuts",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "OptOutListResponse"
          },
          "queryParameters": "readA2PSMSOptOutsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "business-address"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/business-address",
          "method": "get",
          "tags": [
            "Company"
          ],
          "method2": "get",
          "description": "Returns business address of a company.\n",
          "summary": "Get Account Business Address",
          "operationId": "readAccountBusinessAddress",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AccountBusinessAddressResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/business-address",
          "method": "put",
          "tags": [
            "Company"
          ],
          "method2": "put",
          "description": "Updates the business address of a company that account is linked\nto.\n",
          "summary": "Update Company Business Address",
          "operationId": "updateAccountBusinessAddress",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AccountBusinessAddressResource"
          },
          "bodyParameters": "modifyAccountBusinessAddressRequest"
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "registration",
        "v1",
        "sessions"
      ],
      "operations": [
        {
          "endpoint": "/webinar/registration/v1/sessions/{sessionId}",
          "method": "get",
          "tags": [
            "Registration Management"
          ],
          "method2": "get",
          "description": "Returns a registration Session information by ID.\n\nA caller must be an authorized user: either a host of the webinar or an IT Admin:\na user from host's account with \"WebinarSettings\" permission.\n",
          "summary": "Get Registration Session Info",
          "operationId": "rcwRegGetSession",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "RegSessionModel"
          }
        },
        {
          "endpoint": "/webinar/registration/v1/sessions/{sessionId}",
          "method": "patch",
          "tags": [
            "Registration Management"
          ],
          "method2": "patch",
          "description": "Updates a Session by ID.\n\nThis is a PARTIAL update (PATCH), client may call it providing only attributes which are to be changed.\n\nA caller must be an authorized user: either a host of the webinar or an IT Admin:\na user from host's account with \"WebinarSettings\" permission.\n\nIf a session record with given ID doesn't exist on Registration Service side the API should return HTTP 404.\n",
          "summary": "Update Registration Session",
          "operationId": "rcwRegUpdateSession",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "RegSessionModel"
          },
          "bodyParameters": "regSessionModel"
        }
      ],
      "parameter": "sessionId"
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "cost-centers"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/cost-centers",
          "method": "get",
          "tags": [
            "Cost Centers"
          ],
          "method2": "get",
          "description": "Returns the list of cost centers of the account specified in path.",
          "summary": "List Cost Centers",
          "operationId": "listCostCenters",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "CostCenterManagement",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CostCenterList"
          }
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "tasks",
        "complete"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/tasks/{taskId}/complete",
          "method": "post",
          "tags": [
            "Tasks"
          ],
          "method2": "post",
          "description": "Completes a task in the specified chat.",
          "summary": "Complete Task",
          "operationId": "completeTaskNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "bodyParameters": "tMCompleteTaskRequest"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "chats",
        "favorite"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/favorite",
          "method": "post",
          "tags": [
            "Chats"
          ],
          "method2": "post",
          "description": "Adds the specified chat to the users's list of favorite chats.",
          "summary": "Add Chat to Favorites",
          "operationId": "favoriteGlipChatNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "adaptive-cards"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/adaptive-cards/{cardId}",
          "method": "get",
          "tags": [
            "Adaptive Cards"
          ],
          "method2": "get",
          "description": "Returns adaptive card(s) with given id(s).",
          "summary": "Get Adaptive Card",
          "operationId": "getGlipAdaptiveCardNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "AdaptiveCardInfo"
          }
        },
        {
          "endpoint": "/team-messaging/v1/adaptive-cards/{cardId}",
          "method": "put",
          "tags": [
            "Adaptive Cards"
          ],
          "method2": "put",
          "description": "Updates an adaptive card.",
          "summary": "Update Adaptive Card",
          "operationId": "updateGlipAdaptiveCardNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true,
          "responseSchema": {
            "$ref": "AdaptiveCardShortInfo"
          },
          "bodyParameters": "adaptiveCardRequest"
        },
        {
          "endpoint": "/team-messaging/v1/adaptive-cards/{cardId}",
          "method": "delete",
          "tags": [
            "Adaptive Cards"
          ],
          "method2": "delete",
          "description": "Deletes an adaptive card by ID.",
          "summary": "Delete Adaptive Card",
          "operationId": "deleteGlipAdaptiveCardNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": true
        }
      ],
      "parameter": "cardId"
    },
    {
      "paths": [
        "ai",
        "audio",
        "v1",
        "async",
        "speech-to-text"
      ],
      "operations": [
        {
          "endpoint": "/ai/audio/v1/async/speech-to-text",
          "method": "post",
          "tags": [
            "Audio"
          ],
          "method2": "post",
          "description": "Returns Speech to Text Conversion to the provided webhook URI.",
          "summary": "Speech to Text Conversion",
          "operationId": "caiSpeechToText",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CaiAsyncApiResponse"
          },
          "queryParameters": "caiSpeechToTextParameters",
          "bodyParameters": "asrInput"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "recording",
        "content"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/recording/{recordingId}/content",
          "method": "get",
          "tags": [
            "Call Recordings"
          ],
          "method2": "get",
          "description": "Returns media content of a call recording (`audio/mpeg` or `audio/wav`)\n\n**This API must be called via media API entry point, e.g. https://media.ringcentral.com**\n",
          "summary": "Get Call Recording Content",
          "operationId": "readCallRecordingContent",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallRecording",
          "withParameter": false,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          },
          "queryParameters": "readCallRecordingContentParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "phone-numbers"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/phone-numbers",
          "method": "get",
          "tags": [
            "Phone Numbers"
          ],
          "method2": "get",
          "description": "Returns the list of phone numbers assigned to RingCentral customer\naccount. Both company-level and extension-level numbers are returned.\nConferencing numbers, hot desk and ELIN numbers are not returned.\n",
          "summary": "List Account Phone Numbers",
          "operationId": "listAccountPhoneNumbersV2",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyPhoneNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AccountPhoneNumberList"
          },
          "queryParameters": "listAccountPhoneNumbersV2Parameters"
        },
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/phone-numbers",
          "method": "delete",
          "tags": [
            "Phone Numbers"
          ],
          "method2": "delete",
          "description": "This method can only delete numbers that of the following usage types:\n  - `Inventory`,\n  - `ForwardedNumber`,\n  - `ForwardedCompanyNumber`.\n\nIn other words, this method will not delete numbers which are in use on the account - extension direct numbers,\nmain number, etc. It is possible to indicate phone numbers to be deleted using their IDs or exact string values\nin e.164 format. However, the same lookup method (by ID or by value) must be used for all numbers within the same API call.\n",
          "summary": "Delete Numbers from Inventory",
          "operationId": "deleteNumbersFromInventoryV2",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyPhoneNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "DeletePhoneNumbersResponse"
          },
          "bodyParameters": "deletePhoneNumbersRequest"
        },
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/phone-numbers/{phoneNumberId}",
          "method": "patch",
          "tags": [
            "Phone Numbers"
          ],
          "method2": "patch",
          "description": "Assigns or reassigns a phone number as a company or extension number.\n\nAssign scenarios supported:\n- from inventory to a company number;\n- from inventory to an extension number.\n\nReassign scenarios supported:\n- from an extension to another extension;\n- from an extension to a company number;\n- from a company number to an extension.\n",
          "summary": "Assign Phone Number",
          "operationId": "assignPhoneNumberV2",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyPhoneNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "AccountPhoneNumberInfo"
          },
          "bodyParameters": "assignPhoneNumberRequest"
        }
      ],
      "parameter": "phoneNumberId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "directory",
        "entries"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/directory/entries",
          "method": "get",
          "tags": [
            "Internal Contacts"
          ],
          "method2": "list",
          "description": "Returns contact information on corporate users of federated accounts. Please note: 1. `User`, `DigitalUser`, `VirtualUser` and `FaxUser` types are returned as `User` type. 2. `ApplicationExtension` type is not returned. 3. Only extensions in `Enabled`, `Disabled` and `NotActivated` state are returned.",
          "summary": "Get Company Directory Entries",
          "operationId": "listDirectoryEntries",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "DirectoryResource"
          },
          "queryParameters": "listDirectoryEntriesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/directory/entries/{entryId}",
          "method": "get",
          "tags": [
            "Internal Contacts"
          ],
          "method2": "get",
          "description": "Returns contact information on a particular corporate user of a federated account.",
          "summary": "Get Corporate Directory Entry",
          "operationId": "readDirectoryEntry",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "ContactResource"
          },
          "queryParameters": "readDirectoryEntryParameters"
        }
      ],
      "parameter": "entryId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "sites",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/sites/{siteId}/bulk-assign",
          "method": "post",
          "tags": [
            "Multi-Site"
          ],
          "method2": "post",
          "description": "Assigns multiple sites to an account specified in path.\n",
          "summary": "Edit Sites",
          "operationId": "assignMultipleSites",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "Sites",
          "withParameter": false,
          "bodyParameters": "siteMembersBulkUpdate"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "forward-all-calls"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/forward-all-calls",
          "method": "get",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "get",
          "description": "Returns information about *Forward All Company Calls* feature setting.",
          "summary": "Get Forward All Company Calls",
          "operationId": "getForwardAllCompanyCalls",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ForwardAllCompanyCallsInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/forward-all-calls",
          "method": "patch",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "patch",
          "description": "Updates *Forward All Company Calls* feature setting.",
          "summary": "Update Forward All Company Calls",
          "operationId": "updateForwardAllCompanyCalls",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ForwardAllCompanyCallsInfo"
          },
          "bodyParameters": "forwardAllCompanyCallsRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "user-role",
        "default"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/user-role/default",
          "method": "get",
          "tags": [
            "Role Management"
          ],
          "method2": "get",
          "description": "Returns the default user role of the current account.",
          "summary": "Get Default User Role",
          "operationId": "readDefaultRole",
          "rateLimitGroup": "Light",
          "appPermission": "RoleManagement",
          "userPermission": "Roles",
          "withParameter": false,
          "responseSchema": {
            "$ref": "DefaultUserRole"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/user-role/default",
          "method": "put",
          "tags": [
            "Role Management"
          ],
          "method2": "put",
          "description": "Updates the account default user role.",
          "summary": "Set Default User Role",
          "operationId": "updateDefaultUserRole",
          "rateLimitGroup": "Medium",
          "appPermission": "RoleManagement",
          "userPermission": "Roles",
          "withParameter": false,
          "responseSchema": {
            "$ref": "DefaultUserRole"
          },
          "bodyParameters": "defaultUserRoleRequest"
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "configuration",
        "v1",
        "webinars"
      ],
      "operations": [
        {
          "endpoint": "/webinar/configuration/v1/webinars",
          "method": "get",
          "tags": [
            "Webinars and Sessions"
          ],
          "method2": "list",
          "description": "Returns the list of Webinars hosted by a current authorized user sorted by 'scheduledStartTime' or 'creationTime' in the ascending order.\n",
          "summary": "List User's Webinars",
          "operationId": "rcwConfigListWebinars",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "WebinarListResource"
          },
          "queryParameters": "rcwConfigListWebinarsParameters"
        },
        {
          "endpoint": "/webinar/configuration/v1/webinars",
          "method": "post",
          "tags": [
            "Webinars and Sessions"
          ],
          "method2": "post",
          "description": "Creates a new webinar.\n\nIf \"host\" parameter is NOT passed then the current authorized user will become a Host.\nIf \"host\" parameter is passed then the caller must be a company administrator and have \"WebinarSettings\" permission.\n\"host.linkedUser.accountId\" must be the same as authorized user's account ID.\n\nThe webinar settings which are not mandated at account level or are unlocked can be\nspecified. All other settings are defaulted according to account policy.\n",
          "summary": "Create Webinar",
          "operationId": "rcwConfigCreateWebinar",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "WcsWebinarResource"
          },
          "bodyParameters": "webinarCreationRequest"
        },
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}",
          "method": "get",
          "tags": [
            "Webinars and Sessions"
          ],
          "method2": "get",
          "description": "Returns a Webinar information by ID.\nSome webinar settings are returned basing on webinar-level overrides, other - from default settings defined at account level.\n",
          "summary": "Get Webinar",
          "operationId": "rcwConfigGetWebinar",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "WcsWebinarResource"
          }
        },
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}",
          "method": "delete",
          "tags": [
            "Webinars and Sessions"
          ],
          "method2": "delete",
          "description": "Deletes a Webinar by ID. All child objects (Sessions, Invitees) will be also deleted.\nIt is disallowed to delete a Webinar which has at least one Session in 'Active' or 'Finished' state.\n",
          "summary": "Delete Webinar",
          "operationId": "rcwConfigDeleteWebinar",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": true
        },
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}",
          "method": "patch",
          "tags": [
            "Webinars and Sessions"
          ],
          "method2": "patch",
          "description": "Updates a Webinar. The payload may contain just changed fields of a Webinar resource (it is a partial update):\n- host cannot be changed, and host user information cannot be updated;\n- only the settings which are not mandated at account level or are unlocked can be\nchanged;\n- in order to reset a webinar password it should be passed as an empty string;\n- \"registrationStatus\" cannot be changed.\n",
          "summary": "Update Webinar",
          "operationId": "rcwConfigUpdateWebinar",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "WcsWebinarResource"
          },
          "bodyParameters": "webinarBaseModel"
        }
      ],
      "parameter": "webinarId"
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "groups",
        "webhooks"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/groups/{groupId}/webhooks",
          "method": "get",
          "tags": [
            "Incoming Webhooks"
          ],
          "method2": "get",
          "description": "Returns webhooks which are available for the current user by group ID.",
          "summary": "List Webhooks in Group",
          "operationId": "listGlipGroupWebhooksNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMWebhookList"
          }
        },
        {
          "endpoint": "/team-messaging/v1/groups/{groupId}/webhooks",
          "method": "post",
          "tags": [
            "Incoming Webhooks"
          ],
          "method2": "post",
          "description": "Creates a new webhook.",
          "summary": "Create Webhook in Group",
          "operationId": "createGlipGroupWebhookNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TMWebhookInfo"
          }
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "teams",
        "unarchive"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/teams/{chatId}/unarchive",
          "method": "post",
          "tags": [
            "Teams"
          ],
          "method2": "post",
          "description": "Changes the status of the specified team to 'Active'.",
          "summary": "Unarchive Team",
          "operationId": "unarchiveGlipTeamNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "fax-cover-page"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/fax-cover-page",
          "method": "get",
          "tags": [
            "Fax"
          ],
          "method2": "get",
          "description": "Returns fax cover pages available for the current extension.",
          "summary": "List Fax Cover Pages",
          "operationId": "listFaxCoverPages",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ListFaxCoverPagesResponse"
          },
          "queryParameters": "listFaxCoverPagesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "client-info",
        "sip-provision"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/client-info/sip-provision",
          "method": "post",
          "tags": [
            "Device SIP Registration"
          ],
          "method2": "post",
          "description": "Creates SIP registration of a device/application (WebPhone, Mobile, Softphone).\n",
          "summary": "Register Device",
          "operationId": "createSIPRegistration",
          "rateLimitGroup": "Heavy",
          "appPermission": "VoipCalling",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CreateSipRegistrationResponse"
          },
          "bodyParameters": "createSipRegistrationRequest"
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "configuration",
        "v1",
        "sessions"
      ],
      "operations": [
        {
          "endpoint": "/webinar/configuration/v1/sessions",
          "method": "get",
          "tags": [
            "Webinars and Sessions"
          ],
          "method2": "get",
          "description": "Returns the list of Webinar Sessions hosted by a current authorized user sorted by\n'scheduledStartTime' or 'creationTime' (if 'scheduledStartTime' is not set) in the ascending order\n",
          "summary": "List Sessions across Multiple Webinars",
          "operationId": "rcwConfigListAllSessions",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "WcsSessionGlobalListResource"
          },
          "queryParameters": "rcwConfigListAllSessionsParameters"
        }
      ]
    },
    {
      "paths": [
        "ai",
        "audio",
        "v1",
        "async",
        "speaker-diarize"
      ],
      "operations": [
        {
          "endpoint": "/ai/audio/v1/async/speaker-diarize",
          "method": "post",
          "tags": [
            "Audio"
          ],
          "method2": "post",
          "description": "Identifies who said what. Speaker diarization will identify the speaker for each segment\nso you can tell who spoke the sentence, paragraph, or phrase.\n",
          "summary": "Speaker Diarization",
          "operationId": "caiSpeakerDiarize",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CaiAsyncApiResponse"
          },
          "queryParameters": "caiSpeakerDiarizeParameters",
          "bodyParameters": "diarizeInput"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "metadata"
      ],
      "operations": [],
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "account",
        "paging-only-groups"
      ],
      "operations": [],
      "parameter": "pagingOnlyGroupId",
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "call-log"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-log",
          "method": "get",
          "tags": [
            "Call Log"
          ],
          "method2": "list",
          "description": "Returns call log records filtered by parameters specified.",
          "summary": "List User Call Records",
          "operationId": "readUserCallLog",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallLogResponse"
          },
          "queryParameters": "readUserCallLogParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-log",
          "method": "delete",
          "tags": [
            "Call Log"
          ],
          "method2": "delete",
          "description": "Deletes filtered call log records.",
          "summary": "Delete User Call Records",
          "operationId": "deleteUserCallLog",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditCallLog",
          "userPermission": "EditCallLog",
          "withParameter": false,
          "queryParameters": "deleteUserCallLogParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-log/{callRecordId}",
          "method": "get",
          "tags": [
            "Call Log"
          ],
          "method2": "get",
          "description": "Returns call log records by ID.",
          "summary": "Get User Call Record(s)",
          "operationId": "readUserCallRecord",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CallLogRecord"
          },
          "queryParameters": "readUserCallRecordParameters"
        }
      ],
      "parameter": "callRecordId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "greeting"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/greeting",
          "method": "post",
          "tags": [
            "Greetings"
          ],
          "method2": "post",
          "description": "Creates custom greeting for an extension user.",
          "summary": "Create Custom User Greeting",
          "operationId": "createCustomUserGreeting",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CustomUserGreetingInfo"
          },
          "queryParameters": "createCustomUserGreetingParameters",
          "bodyParameters": "createCustomUserGreetingRequest",
          "multipart": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/greeting/{greetingId}",
          "method": "get",
          "tags": [
            "Greetings"
          ],
          "method2": "get",
          "description": "Returns a custom user greeting by ID.",
          "summary": "Get Custom Greeting",
          "operationId": "readCustomGreeting",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserInfo",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CustomUserGreetingInfo"
          }
        }
      ],
      "parameter": "greetingId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "ring-out"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/ring-out",
          "method": "post",
          "tags": [
            "RingOut"
          ],
          "method2": "post",
          "description": "Makes a 2-legged RingOut call.",
          "summary": "Make RingOut Call",
          "operationId": "createRingOutCall",
          "rateLimitGroup": "Heavy",
          "appPermission": "RingOut",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetRingOutStatusResponse"
          },
          "bodyParameters": "makeRingOutRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/ring-out/{ringoutId}",
          "method": "get",
          "tags": [
            "RingOut"
          ],
          "method2": "get",
          "description": "Returns a status of a 2-legged RingOut call.",
          "summary": "Get RingOut Call Status",
          "operationId": "readRingOutCallStatus",
          "rateLimitGroup": "Light",
          "appPermission": "RingOut",
          "withParameter": true,
          "responseSchema": {
            "$ref": "GetRingOutStatusResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/ring-out/{ringoutId}",
          "method": "delete",
          "tags": [
            "RingOut"
          ],
          "method2": "delete",
          "description": "Cancels a 2-legged RingOut call.",
          "summary": "Cancel RingOut Call",
          "operationId": "deleteRingOutCall",
          "rateLimitGroup": "Heavy",
          "appPermission": "RingOut",
          "withParameter": true
        }
      ],
      "parameter": "ringoutId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}",
          "method": "get",
          "tags": [
            "Call Control"
          ],
          "method2": "get",
          "description": "Returns the status of a call session by ID.",
          "summary": "Get Call Session Status",
          "operationId": "readCallSessionStatus",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CallSessionObject"
          },
          "queryParameters": "readCallSessionStatusParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}",
          "method": "delete",
          "tags": [
            "Call Control"
          ],
          "method2": "delete",
          "description": "Drops a call session.",
          "summary": "Drop Call Session",
          "operationId": "deleteCallSession",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": true
        }
      ],
      "parameter": "telephonySessionId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "favorite"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/favorite",
          "method": "get",
          "tags": [
            "External Contacts"
          ],
          "method2": "get",
          "description": "Returns the list of favorite contacts of the current extension.\nFavorite contacts include both company contacts (extensions) and personal\ncontacts (address book records).\n",
          "summary": "List Favorite Contacts",
          "operationId": "listFavoriteContacts",
          "rateLimitGroup": "Light",
          "appPermission": "ReadContacts",
          "userPermission": "ReadPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "FavoriteContactList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/favorite",
          "method": "put",
          "tags": [
            "External Contacts"
          ],
          "method2": "put",
          "description": "Updates the list of favorite contacts of the current extension.\nFavorite contacts include both company contacts (extensions) and personal\ncontacts (address book records).**Please note**: Currently personal address\nbook size is limited to 10 000 contacts.\n",
          "summary": "Update Favorite Contact List",
          "operationId": "updateFavoriteContactList",
          "rateLimitGroup": "Medium",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "FavoriteContactList"
          },
          "bodyParameters": "favoriteCollection"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "presence"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/presence",
          "method": "get",
          "tags": [
            "Presence"
          ],
          "method2": "get",
          "description": "Returns the presence status of an extension or several extensions by their ID(s). The `presenceStatus` is returned as Offline\n(the parameters `telephonyStatus`, `message`, `userStatus` and `dndStatus` are not returned at all) for the following extension types:\nDepartment/Announcement Only/Take Messages Only (Voicemail)/Fax User/Paging Only Group/Shared Lines Group/IVR Menu/Application Extension/Park Location.\nIf the user requests his/her own presence status, the response contains actual presence status even if the status publication is turned off.\n[Batch request syntax](https://developers.ringcentral.com/guide/basics/batch-requests) is supported. For batch requests the number of extensions\nin one request is limited to 30. If more extensions are included in the request, the error code 400 Bad Request is returned with the logical error\ncode InvalidMultipartRequest and the corresponding message Extension Presence Info multipart request is limited to 30 extensions.\n",
          "summary": "Get User Presence Status",
          "operationId": "readUserPresenceStatus",
          "rateLimitGroup": "Light",
          "appPermission": "ReadPresence",
          "userPermission": "ReadPresenceStatus",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetPresenceInfo"
          },
          "queryParameters": "readUserPresenceStatusParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/presence",
          "method": "put",
          "tags": [
            "Presence"
          ],
          "method2": "put",
          "description": "Updates user-defined extension presence status, status message and DnD status by extension ID. Supported for regular User extensions only. The extension types listed do not support presence status: Department, Announcement Only, Take Messages Only (Voicemail), Fax User, Paging Only Group, Shared Lines Group, IVR Menu, Application Extension.",
          "summary": "Update User Presence Status",
          "operationId": "updateUserPresenceStatus",
          "rateLimitGroup": "Medium",
          "appPermission": "EditPresence",
          "withParameter": false,
          "responseSchema": {
            "$ref": "PresenceInfoResponse"
          },
          "bodyParameters": "presenceInfoRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "features"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/features",
          "method": "get",
          "tags": [
            "Features"
          ],
          "method2": "get",
          "description": "Returns a list of supported features and the information on their\navailability for the current extension. Particular feature(s) can\nbe checked by providing `featureId` query parameter. Multiple values\nare supported in the format: `?featureId=Feature1&featureId=Feature2`.\nTo get only available features in order to decrease response size,\n`availableOnly=true` query param can be specified. If a feature\nis available for the current user, `\"available\": true` is returned in\nresponse for the record with the corresponding feature ID. Otherwise,\nthe additional attribute `reason` is returned with the appropriate code:\n- `ServicePlanLimitation` -  a feature is not included in account service plan;\n- `AccountLimitation` - a feature is turned off for account;\n- `ExtensionTypeLimitation` - a feature is not applicable for extension type;\n- `ExtensionLimitation` - a feature is not available for extension, e.g., additional license required;\n- `InsufficientPermissions` - required permission is not granted to the current user (not the one, who is specified in the URL, but the one who is calling this API);\n- `ConfigurationLimitation` - a feature is turned off for extension, e.g., by account administrator.\n- `PermissionLimitation` - a feature is unavailable due to a specific permission this extension has.\n\nAlso, some features may have additional parameters, e.g. limits, which are returned in `params` attribute as a name-value collection:\n\n    {\n      \"id\": \"HUD\",\n      \"available\": true,\n      \"params\": [\n        {\n          \"name\": \"limitMax\",\n          \"value\": \"100\"\n        }\n      ]\n    }\n",
          "summary": "Get User Features",
          "operationId": "readExtensionFeatures",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "FeatureList"
          },
          "queryParameters": "readExtensionFeaturesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "call-out"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/call-out",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Creates a new outbound call out session. Currently this method is supported for Softphone/Hardphone only, since device IDs for WebRTC/Mobile apps cannot be obtained.",
          "summary": "Make CallOut",
          "operationId": "createCallOutCallSession",
          "rateLimitGroup": "Heavy",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallSession"
          },
          "bodyParameters": "makeCallOutRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "audit-trail",
        "search"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/audit-trail/search",
          "method": "post",
          "tags": [
            "Audit Trail"
          ],
          "method2": "post",
          "description": "Returns the audit trail data with specific filters applied.\nAudit trail searching is limited to the last 10,000 records or last 180 days, whichever comes first.\n",
          "summary": "Search Audit Trail Data",
          "operationId": "auditTrailSearch",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadAuditTrail",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AccountHistorySearchPublicResponse"
          },
          "bodyParameters": "accountHistorySearchPublicRequest"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "webhooks",
        "suspend"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/webhooks/{webhookId}/suspend",
          "method": "post",
          "tags": [
            "Incoming Webhooks"
          ],
          "method2": "post",
          "description": "Suspends a webhook by ID.",
          "summary": "Suspend Webhook",
          "operationId": "suspendGlipWebhookNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "chats",
        "unfavorite"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/unfavorite",
          "method": "post",
          "tags": [
            "Chats"
          ],
          "method2": "post",
          "description": "Removes the specified chat from the users's list of favorite chats.",
          "summary": "Remove Chat from Favorites",
          "operationId": "unfavoriteGlipChatNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "ai",
        "audio",
        "v1",
        "async",
        "speaker-identify"
      ],
      "operations": [
        {
          "endpoint": "/ai/audio/v1/async/speaker-identify",
          "method": "post",
          "tags": [
            "Audio"
          ],
          "method2": "post",
          "description": "Returns Speaker Identification to the provided webhook URI.",
          "summary": "Speaker Identification",
          "operationId": "caiSpeakerIdentify",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CaiAsyncApiResponse"
          },
          "queryParameters": "caiSpeakerIdentifyParameters",
          "bodyParameters": "identifyInput"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "caller-id"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-id",
          "method": "get",
          "tags": [
            "User Settings"
          ],
          "method2": "get",
          "description": "Returns information on an outbound caller ID of an extension.\n",
          "summary": "Get Extension Caller ID",
          "operationId": "readExtensionCallerId",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCallerIDSettings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ExtensionCallerIdInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-id",
          "method": "put",
          "tags": [
            "User Settings"
          ],
          "method2": "put",
          "description": "Updates outbound caller ID information of an extension.\n",
          "summary": "Update Extension Caller ID",
          "operationId": "updateExtensionCallerId",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditCallerIDSettings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ExtensionCallerIdInfo"
          },
          "bodyParameters": "extensionCallerIdInfoRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-locations"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-locations",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "list",
          "description": "Returns emergency response locations for the current account.",
          "summary": "List Emergency Locations",
          "operationId": "listEmergencyLocations",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "EmergencyLocationsResource"
          },
          "queryParameters": "listEmergencyLocationsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-locations",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Creates a new emergency response location for a company.",
          "summary": "Add Emergency Location",
          "operationId": "createEmergencyLocation",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "EmergencyLocationResponseResource"
          },
          "bodyParameters": "emergencyLocationRequestResource"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-locations/{locationId}",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "get",
          "description": "Returns emergency response location by ID. Available for Admin users only.",
          "summary": "Get Emergency Location",
          "operationId": "readEmergencyLocation",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CommonEmergencyLocationResource"
          },
          "queryParameters": "readEmergencyLocationParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-locations/{locationId}",
          "method": "put",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "put",
          "description": "Updates the specified emergency response location.",
          "summary": "Update Emergency Location",
          "operationId": "updateEmergencyLocation",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "EmergencyLocationResponseResource"
          },
          "bodyParameters": "emergencyLocationRequestResource"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-locations/{locationId}",
          "method": "delete",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "delete",
          "description": "Deletes the specified emergency response location.",
          "summary": "Delete Emergency Location",
          "operationId": "deleteEmergencyLocation",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "queryParameters": "deleteEmergencyLocationParameters"
        }
      ],
      "parameter": "locationId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "ivr-prompts",
        "content"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts/{promptId}/content",
          "method": "get",
          "tags": [
            "IVR"
          ],
          "method2": "get",
          "description": "Returns media content of an IVR prompt by ID.\n\n**This API must be called via media API entry point, e.g. https://media.ringcentral.com**\n",
          "summary": "Get IVR Prompt Content",
          "operationId": "readIVRPromptContent",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          },
          "queryParameters": "readIVRPromptContentParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-queues",
        "members"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}/members",
          "method": "get",
          "tags": [
            "Call Queues"
          ],
          "method2": "get",
          "description": "Returns a list of call queue group members.\n",
          "summary": "List Call Queue Members",
          "operationId": "listCallQueueMembers",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallQueueMembers"
          },
          "queryParameters": "listCallQueueMembersParameters"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "webhooks",
        "activate"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/webhooks/{webhookId}/activate",
          "method": "post",
          "tags": [
            "Incoming Webhooks"
          ],
          "method2": "post",
          "description": "Activates a webhook by ID.",
          "summary": "Activate Webhook",
          "operationId": "activateGlipWebhookNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1",
        "company",
        "sessions"
      ],
      "operations": [
        {
          "endpoint": "/webinar/history/v1/company/sessions",
          "method": "get",
          "tags": [
            "Historical Webinars"
          ],
          "method2": "get",
          "description": "Returns the list of historical Webinar Sessions hosted by particular user(s) or all company users\nsorted by 'endTime' in the descending order. Depending on a session status 'endTime' can\nrepresent actual end time or scheduled end time.\nThe user must have \"WebinarSettings\" permission granted otherwise the API returns HTTP 403.\n",
          "summary": "List Historical Webinar Sessions across Multiple Webinars / Hosts",
          "operationId": "rcwHistoryListAllCompanySessions",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SessionGlobalListResource"
          },
          "queryParameters": "rcwHistoryListAllCompanySessionsParameters"
        }
      ]
    },
    {
      "paths": [
        "analytics",
        "calls",
        "v1",
        "accounts",
        "timeline"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-queues",
        "presence"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}/presence",
          "method": "get",
          "tags": [
            "Presence"
          ],
          "method2": "get",
          "description": "Returns presence status of the call queue members.",
          "summary": "Get Call Queue Presence",
          "operationId": "readCallQueuePresence",
          "rateLimitGroup": "Light",
          "appPermission": "ReadPresence",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallQueuePresence"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}/presence",
          "method": "put",
          "tags": [
            "Presence"
          ],
          "method2": "put",
          "description": "Updates presence status of the call queue members in the specified queue.",
          "summary": "Update Call Queue Presence",
          "operationId": "updateCallQueuePresence",
          "rateLimitGroup": "Medium",
          "appPermission": "EditPresence",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallQueuePresence"
          },
          "bodyParameters": "callQueueUpdatePresence"
        }
      ]
    },
    {
      "paths": [
        "rcvideo",
        "v2",
        "account",
        "extension",
        "bridges"
      ],
      "operations": [
        {
          "endpoint": "/rcvideo/v2/account/{accountId}/extension/{extensionId}/bridges",
          "method": "post",
          "tags": [
            "Bridge Management"
          ],
          "method2": "post",
          "description": "Creates a new bridge for the user specified by **accountId** and **extensionId** identifiers. The request body\nshould contain JSON object which describes properties of the new bridge.\nThe bridge can be created by a user himself, his delegate or any user who has the **Super Admin** privilege.\n",
          "summary": "Create Bridge",
          "operationId": "createBridge",
          "rateLimitGroup": "Heavy",
          "appPermission": "Video",
          "withParameter": false,
          "responseSchema": {
            "$ref": "BridgeResponse"
          },
          "bodyParameters": "createBridgeRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "message-store-report"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-report",
          "method": "post",
          "tags": [
            "Message Exports"
          ],
          "method2": "post",
          "description": "Creates a task to collect all account messages within the specified\ntime interval. Maximum number of simultaneous tasks per account is 2.\n",
          "summary": "Create Message Store Report",
          "operationId": "createMessageStoreReport",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadMessages",
          "userPermission": "Users",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MessageStoreReport"
          },
          "bodyParameters": "createMessageStoreReportRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-report/{taskId}",
          "method": "get",
          "tags": [
            "Message Exports"
          ],
          "method2": "get",
          "description": "Returns the current status of a task on report creation.",
          "summary": "Get Message Store Report Task",
          "operationId": "readMessageStoreReportTask",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadMessages",
          "userPermission": "Users",
          "withParameter": true,
          "responseSchema": {
            "$ref": "MessageStoreReport"
          }
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1",
        "webinars",
        "sessions"
      ],
      "operations": [
        {
          "endpoint": "/webinar/history/v1/webinars/{webinarId}/sessions/{sessionId}",
          "method": "get",
          "tags": [
            "Historical Webinars"
          ],
          "method2": "get",
          "description": "Returns a historical webinar Session by ID. Access allowed to participants with original role as Host or CoHost.",
          "summary": "Get Historical Webinar Session",
          "operationId": "rcwHistoryGetSession",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "SessionResource"
          }
        }
      ],
      "parameter": "sessionId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "conference"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/conference",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Initiates a conference call session.",
          "summary": "Start Conference Call Session",
          "operationId": "createConferenceCallSession",
          "rateLimitGroup": "Heavy",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallSession"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "directory",
        "federation"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/directory/federation",
          "method": "get",
          "tags": [
            "Internal Contacts"
          ],
          "method2": "get",
          "description": "Returns information on a federation and associated accounts.",
          "summary": "Get Account Federation",
          "operationId": "readDirectoryFederation",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "FederationResource"
          },
          "queryParameters": "readDirectoryFederationParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "device-inventory"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/device-inventory",
          "method": "post",
          "tags": [
            "Devices"
          ],
          "method2": "post",
          "description": "Adds an existing phone (customer provided device - BYOD) as an unassigned device to the account inventory.",
          "summary": "Add Phone to Inventory",
          "operationId": "addDeviceToInventory",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AddDeviceToInventoryResponse"
          },
          "bodyParameters": "addDeviceToInventoryRequest"
        },
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/device-inventory",
          "method": "delete",
          "tags": [
            "Devices"
          ],
          "method2": "delete",
          "description": "Deletes an existing unassigned (without digital line or phone number) device or multiple devices\nfrom the account inventory. It is possible to delete up to 10 devices per request.\n",
          "summary": "Delete Device from Inventory",
          "operationId": "deleteDeviceFromInventory",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "DeleteDeviceFromInventoryResponse"
          },
          "bodyParameters": "deleteDeviceFromInventoryRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "devices",
        "bulk-add"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/devices/bulk-add",
          "method": "post",
          "tags": [
            "Devices"
          ],
          "method2": "post",
          "description": "Adds multiple BYOD (customer provided) devices to an account.",
          "summary": "Add BYOD Devices",
          "operationId": "bulkAddDevicesV2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "AddRemoveDevices",
          "withParameter": false,
          "responseSchema": {
            "$ref": "BulkAddDevicesResponse"
          },
          "bodyParameters": "bulkAddDevicesRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "call-queues"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-queues",
          "method": "put",
          "tags": [
            "Call Queues"
          ],
          "method2": "put",
          "description": "Updates a list of call queues where the user is an agent. This\nis a full update request, which means that if any call queue where the user is\nan agent is not mentioned in request, then the user is automatically removed\nfrom this queue.\n",
          "summary": "Update User Call Queues",
          "operationId": "updateUserCallQueues",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCallQueuePresence",
          "withParameter": false,
          "responseSchema": {
            "$ref": "UserCallQueues"
          },
          "bodyParameters": "userCallQueues"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "user-role",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/user-role/{roleId}/bulk-assign",
          "method": "post",
          "tags": [
            "Role Management"
          ],
          "method2": "post",
          "description": "Assigns multiple user roles.",
          "summary": "Assign Multiple User Roles",
          "operationId": "assignMultipleUserRoles",
          "rateLimitGroup": "Heavy",
          "appPermission": "RoleManagement",
          "userPermission": "EditUserRoles",
          "withParameter": false,
          "bodyParameters": "bulkRoleAssignResource"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension-bulk-update"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension-bulk-update",
          "method": "post",
          "tags": [
            "Extensions"
          ],
          "method2": "post",
          "description": "Updates multiple extensions at once. Maximum 500 extensions can be updated per request.\n",
          "summary": "Update Multiple Extensions",
          "operationId": "extensionBulkUpdate",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "EditExtensionInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ExtensionBulkUpdateTaskResource"
          },
          "bodyParameters": "extensionBulkUpdateRequest"
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1",
        "company",
        "recordings"
      ],
      "operations": [
        {
          "endpoint": "/webinar/history/v1/company/recordings",
          "method": "get",
          "tags": [
            "Historical Recordings"
          ],
          "method2": "list",
          "description": "Returns the list of webinar recordings (Administrator's interface).\nThe user must have \"WebinarSettings\" permission granted otherwise the API returns HTTP 403.\n",
          "summary": "List Webinar Recordings (Admin)",
          "operationId": "rcwHistoryAdminListRecordings",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "RecordingAdminListResource"
          },
          "queryParameters": "rcwHistoryAdminListRecordingsParameters"
        },
        {
          "endpoint": "/webinar/history/v1/company/recordings/{recordingId}",
          "method": "get",
          "tags": [
            "Historical Recordings"
          ],
          "method2": "get",
          "description": "Returns the webinar recording by ID (Administrator's interface).\n\nThe user must have \"WebinarSettings\" permission granted otherwise the API returns HTTP 403.\n",
          "summary": "Get Webinar Recording (Admin)",
          "operationId": "rcwHistoryAdminGetRecording",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "RecordingAdminExtendedItemModel"
          }
        }
      ],
      "parameter": "recordingId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "address-book"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "extensions",
        "devices"
      ],
      "operations": [],
      "parameter": "deviceId",
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "batch-provisioning"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "conferencing"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/conferencing",
          "method": "get",
          "tags": [
            "User Settings"
          ],
          "method2": "get",
          "description": "Returns information on Free Conference Calling (FCC) feature\nfor a given extension.\n",
          "summary": "Get User Conferencing Settings",
          "operationId": "readConferencingSettings",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "OrganizeConference",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetConferencingInfoResponse"
          },
          "queryParameters": "readConferencingSettingsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/conferencing",
          "method": "put",
          "tags": [
            "User Settings"
          ],
          "method2": "put",
          "description": "Updates the default conferencing number for the current extension.\nThe number can be selected from conferencing numbers of the current extension.\nUpdates the setting, allowing participants join the conference before host.\n",
          "summary": "Update User Conferencing Settings",
          "operationId": "updateConferencingSettings",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "OrganizeConference",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetConferencingInfoResponse"
          },
          "bodyParameters": "updateConferencingInfoRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "message-sync"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-sync",
          "method": "get",
          "tags": [
            "Message Store"
          ],
          "method2": "get",
          "description": "Synchronizes messages.",
          "summary": "Sync Messages",
          "operationId": "syncMessages",
          "rateLimitGroup": "Light",
          "appPermission": "ReadMessages",
          "userPermission": "ReadMessages",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetMessageSyncResponse"
          },
          "queryParameters": "syncMessagesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "active-calls"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/active-calls",
          "method": "get",
          "tags": [
            "Call Log"
          ],
          "method2": "get",
          "description": "Returns records of all extension calls that are in progress, ordered\nby start time in descending order.\n",
          "summary": "List User Active Calls",
          "operationId": "listExtensionActiveCalls",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallLogResponse"
          },
          "queryParameters": "listExtensionActiveCallsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "phone-number"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/phone-number",
          "method": "get",
          "tags": [
            "Phone Numbers"
          ],
          "method2": "get",
          "description": "Returns the list of phone numbers that are used by a particular extension,\ncan be filtered by the phone number type. The returned list contains all\nnumbers which are directly mapped to the given extension. Plus the features\nand company-level numbers that may be used when performing different operations\non behalf of this extension.\n",
          "summary": "Get Extension Phone Number List",
          "operationId": "listExtensionPhoneNumbers",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserPhoneNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetExtensionPhoneNumbersResponse"
          },
          "queryParameters": "listExtensionPhoneNumbersParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "permission-category"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/permission-category",
          "method": "get",
          "tags": [
            "User Permissions"
          ],
          "method2": "list",
          "description": "Returns a list of permission categories.",
          "summary": "List Permission Categories",
          "operationId": "listPermissionCategories",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "PermissionCategoryCollectionResource"
          },
          "queryParameters": "listPermissionCategoriesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/permission-category/{permissionCategoryId}",
          "method": "get",
          "tags": [
            "User Permissions"
          ],
          "method2": "get",
          "description": "Returns a permission category by ID.",
          "summary": "Get Permission Category",
          "operationId": "readPermissionCategory",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "PermissionCategoryResource"
          }
        }
      ],
      "parameter": "permissionCategoryId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-monitoring-groups"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups",
          "method": "get",
          "tags": [
            "Call Monitoring Groups"
          ],
          "method2": "get",
          "description": "Returns a list of call monitoring groups filtered by an extension.\n",
          "summary": "List Call Monitoring Groups",
          "operationId": "listCallMonitoringGroups",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallMonitoringGroups"
          },
          "queryParameters": "listCallMonitoringGroupsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups",
          "method": "post",
          "tags": [
            "Call Monitoring Groups"
          ],
          "method2": "post",
          "description": "Creates a new call monitoring group.\n",
          "summary": "Create Call Monitoring Group",
          "operationId": "createCallMonitoringGroup",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "Groups",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallMonitoringGroup"
          },
          "bodyParameters": "createCallMonitoringGroupRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups/{groupId}",
          "method": "put",
          "tags": [
            "Call Monitoring Groups"
          ],
          "method2": "put",
          "description": "Updates a call monitoring group name.\n",
          "summary": "Update Call Monitoring Group",
          "operationId": "updateCallMonitoringGroup",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "Groups",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CallMonitoringGroup"
          },
          "bodyParameters": "createCallMonitoringGroupRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups/{groupId}",
          "method": "delete",
          "tags": [
            "Call Monitoring Groups"
          ],
          "method2": "delete",
          "description": "Removes information about a call monitoring group specified in path.\n",
          "summary": "Delete Call Monitoring Group",
          "operationId": "deleteCallMonitoringGroup",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "Groups",
          "withParameter": true
        }
      ],
      "parameter": "groupId"
    },
    {
      "paths": [
        "webinar",
        "notifications",
        "v1",
        "subscriptions"
      ],
      "operations": [
        {
          "endpoint": "/webinar/notifications/v1/subscriptions",
          "method": "get",
          "tags": [
            "Webinar Subscriptions"
          ],
          "method2": "list",
          "description": "Returns a list of webinar subscriptions created by the user for the current authorized client application.",
          "summary": "List Webinar Subscriptions",
          "operationId": "rcwN11sListSubscriptions",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SubscriptionListResource"
          }
        },
        {
          "endpoint": "/webinar/notifications/v1/subscriptions",
          "method": "post",
          "tags": [
            "Webinar Subscriptions"
          ],
          "method2": "post",
          "description": "Creates a new webinar subscription for the current authorized user / client application.",
          "summary": "Create Webinar Subscription",
          "operationId": "rcwN11sCreateSubscription",
          "rateLimitGroup": "Medium",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SubscriptionInfo"
          },
          "bodyParameters": "createWebhookSubscriptionRequest"
        },
        {
          "endpoint": "/webinar/notifications/v1/subscriptions/{subscriptionId}",
          "method": "get",
          "tags": [
            "Webinar Subscriptions"
          ],
          "method2": "get",
          "description": "Returns the webinar subscription by ID",
          "summary": "Get Webinar Subscription",
          "operationId": "rcwN11sGetSubscription",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "SubscriptionInfo"
          }
        },
        {
          "endpoint": "/webinar/notifications/v1/subscriptions/{subscriptionId}",
          "method": "put",
          "tags": [
            "Webinar Subscriptions"
          ],
          "method2": "put",
          "description": "Updates the existing subscription. The client application can extend/narrow\nthe list of events for which it receives notifications within this subscription.\nIf event filters are specified, calling this method modifies them for the\nexisting subscription. The method also allows setting the subscription expiration time.\nIf other than `events` and `expiresIn` parameters are passed in the request they will be ignored.\nIf the request body is empty then the specified subscription will be just renewed without any\nevent filter modifications and with default expiration time.\n",
          "summary": "Update Webinar Subscription",
          "operationId": "rcwN11sUpdateSubscription",
          "rateLimitGroup": "Medium",
          "withParameter": true,
          "responseSchema": {
            "$ref": "SubscriptionInfo"
          },
          "bodyParameters": "updateSubscriptionRequest"
        },
        {
          "endpoint": "/webinar/notifications/v1/subscriptions/{subscriptionId}",
          "method": "delete",
          "tags": [
            "Webinar Subscriptions"
          ],
          "method2": "delete",
          "description": "Cancels the existing webinar subscription.",
          "summary": "Cancel Webinar Subscription",
          "operationId": "rcwN11sDeleteSubscription",
          "rateLimitGroup": "Medium",
          "withParameter": true
        }
      ],
      "parameter": "subscriptionId"
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1",
        "recordings",
        "download"
      ],
      "operations": [
        {
          "endpoint": "/webinar/history/v1/recordings/{recordingId}/download",
          "method": "get",
          "tags": [
            "Historical Recordings"
          ],
          "method2": "get",
          "description": "Returns the webinar recording download link (both Webinar host's and admin interface).\n\nIf called by a webinar host, the API returns error (403) if recording downloading is prohibited by company settings.\nThe admin user who has \"WebinarSettings\" permission should be able to download recording regardless of current company settings.\n",
          "summary": "Get Webinar Recording Download Resource",
          "operationId": "rcwHistoryGetRecordingDownload",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "RecordingDownloadModel"
          },
          "queryParameters": "rcwHistoryGetRecordingDownloadParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "send-welcome-email"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/send-welcome-email",
          "method": "post",
          "tags": [
            "Company"
          ],
          "method2": "post",
          "description": "Sends/resends welcome email to the system user of confirmed account",
          "summary": "Send/Resend Welcome Email",
          "operationId": "sendWelcomeEmailV2",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "Users",
          "withParameter": false,
          "bodyParameters": "sendWelcomeEmailV2Request"
        }
      ]
    },
    {
      "paths": [
        "team-messaging",
        "v1",
        "chats",
        "adaptive-cards"
      ],
      "operations": [
        {
          "endpoint": "/team-messaging/v1/chats/{chatId}/adaptive-cards",
          "method": "post",
          "tags": [
            "Adaptive Cards"
          ],
          "method2": "post",
          "description": "Creates a new adaptive card in the chat specified in path.",
          "summary": "Create Adaptive Card",
          "operationId": "createGlipAdaptiveCardNew",
          "rateLimitGroup": "Medium",
          "appPermission": "TeamMessaging",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AdaptiveCardShortInfo"
          },
          "bodyParameters": "adaptiveCardRequest"
        }
      ]
    },
    {
      "paths": [
        "ai",
        "ringsense",
        "v1",
        "public",
        "accounts",
        "domains"
      ],
      "operations": [],
      "parameter": "domain",
      "noParentParameter": false
    },
    {
      "paths": [
        "analytics",
        "calls",
        "v1",
        "accounts",
        "aggregation"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "profile-image"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/profile-image",
          "method": "get",
          "tags": [
            "User Settings"
          ],
          "method2": "list",
          "description": "Returns a profile image of an extension.\n",
          "summary": "Get User Profile Image",
          "operationId": "readUserProfileImageLegacy",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/profile-image",
          "method": "post",
          "tags": [
            "User Settings"
          ],
          "method2": "post",
          "description": "Uploads the extension profile image.\n",
          "summary": "Upload User Profile Image",
          "operationId": "createUserProfileImage",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserInfo",
          "withParameter": false,
          "bodyParameters": "createUserProfileImageRequest",
          "multipart": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/profile-image",
          "method": "put",
          "tags": [
            "User Settings"
          ],
          "method2": "put",
          "description": "Updates the extension profile image.\n",
          "summary": "Update User Profile Image",
          "operationId": "updateUserProfileImage",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserInfo",
          "withParameter": false,
          "bodyParameters": "updateUserProfileImageRequest",
          "multipart": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/profile-image",
          "method": "delete",
          "tags": [
            "User Settings"
          ],
          "method2": "delete",
          "description": "Deletes the user profile image.\n",
          "summary": "Delete User Profile Image",
          "operationId": "deleteUserProfileImage",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserInfo",
          "withParameter": false
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/profile-image/{scaleSize}",
          "method": "get",
          "tags": [
            "User Settings"
          ],
          "method2": "get",
          "description": "Returns the scaled profile image of an extension.\n\n**This API must be called via media API entry point, e.g. https://media.ringcentral.com**\n",
          "summary": "Get Scaled Profile Image",
          "operationId": "readScaledProfileImage",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "withParameter": true,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          },
          "queryParameters": "readScaledProfileImageParameters"
        }
      ],
      "parameter": "scaleSize"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "message-store"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store",
          "method": "get",
          "tags": [
            "Message Store"
          ],
          "method2": "list",
          "description": "Returns a list of messages from an extension mailbox.",
          "summary": "List Messages",
          "operationId": "listMessages",
          "rateLimitGroup": "Light",
          "appPermission": "ReadMessages",
          "userPermission": "ReadMessages",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetMessageList"
          },
          "queryParameters": "listMessagesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store",
          "method": "delete",
          "tags": [
            "Message Store"
          ],
          "method2": "deleteAll",
          "description": "Deletes conversation(s) by conversation ID(s). \n[Batch request syntax](https://developers.ringcentral.com/guide/basics/batch-requests) is supported - maximum number \nof IDs passed as query/path parameters is 50. Alternative syntax is supported - the user's conversations can be deleted \nby passing multiple IDs in request body as an array of string. Maximum number of conversation IDs passed in request body \nis 100. In this case asterisk '*' is used in the path instead of IDs.\n",
          "summary": "Delete Conversation",
          "operationId": "deleteMessageByFilter",
          "rateLimitGroup": "Medium",
          "appPermission": "EditMessages",
          "userPermission": "EditMessages",
          "withParameter": false,
          "queryParameters": "deleteMessageByFilterParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store/{messageId}",
          "method": "get",
          "tags": [
            "Message Store"
          ],
          "method2": "get",
          "description": "Returns an individual message record or multiple records by the given message ID(s). \nThe length of inbound messages is unlimited. [Bulk syntax](https://developers.ringcentral.com/guide/basics/batch-requests) \nis supported.\n",
          "summary": "Get Message(s)",
          "operationId": "readMessage",
          "rateLimitGroup": "Light",
          "appPermission": "ReadMessages",
          "userPermission": "ReadMessages",
          "withParameter": true,
          "responseSchema": {
            "$ref": "GetMessageInfoResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store/{messageId}",
          "method": "put",
          "tags": [
            "Message Store"
          ],
          "method2": "put",
          "description": "Updates message(s) by their ID(s). Currently, only the `readStatus`\ncan be updated using this method.\n[Bulk syntax](https://developers.ringcentral.com/guide/basics/batch-requests) is supported, \nmaximum number of IDs passed as query/path parameters is 50. Alternative bulk syntax is also \nsupported - the user's messages can be updated by passing multiple IDs in request body as \nan array of string, maximum number of IDs passed in the body is 1000. In this case asterisk '*'\nis used in the path instead of IDs.\n",
          "summary": "Update Message(s)",
          "operationId": "updateMessage",
          "rateLimitGroup": "Medium",
          "appPermission": "EditMessages",
          "userPermission": "EditMessages",
          "withParameter": true,
          "responseSchema": {
            "$ref": "GetMessageInfoResponse"
          },
          "bodyParameters": "updateMessageRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store/{messageId}",
          "method": "delete",
          "tags": [
            "Message Store"
          ],
          "method2": "delete",
          "description": "Deletes message(s) by the given message ID(s). The first call of\nthis method transfers the message to the 'Delete' status. The second call\ntransfers the deleted message to the 'Purged' status. If it is required to\nmake the message 'Purged' immediately (from the first call), then set the\nquery parameter purge to `true`.\n",
          "summary": "Delete Message",
          "operationId": "deleteMessage",
          "rateLimitGroup": "Medium",
          "appPermission": "EditMessages",
          "userPermission": "EditMessages",
          "withParameter": true,
          "queryParameters": "deleteMessageParameters",
          "bodyParameters": "deleteMessageBulkRequest",
          "bodyType": "string[]"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store/{messageId}",
          "method": "patch",
          "tags": [
            "Message Store"
          ],
          "method2": "patch",
          "description": "Patches message(s) by ID(s). Currently, only updating the `readStatus` and\nrestoring deleted messages are supported through this method.\n\nFor changing status of a message send `readStatus` set to either 'Read' or 'Unread' in request.\nIt is possible to restore a message and its attachments (if message status is 'Deleted') by sending\n`availability` attribute set to 'Alive' in request body. If a message is already in 'Purged' state\nthen its attachments cannot be restored and the message itself is about to be physically deleted.\n\nBulk syntax (both traditional and alternative one) is supported.\n",
          "summary": "Patch Message(s)",
          "operationId": "patchMessage",
          "rateLimitGroup": "Medium",
          "appPermission": "EditMessages",
          "userPermission": "EditMessages",
          "withParameter": true,
          "responseSchema": {
            "$ref": "GetMessageInfoResponse"
          },
          "bodyParameters": "patchMessageRequest"
        }
      ],
      "parameter": "messageId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "call-log-sync"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-log-sync",
          "method": "get",
          "tags": [
            "Call Log"
          ],
          "method2": "get",
          "description": "Synchronizes the user call log records.",
          "summary": "Sync User Call Log",
          "operationId": "syncUserCallLog",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallLogSyncResponse"
          },
          "queryParameters": "syncUserCallLogParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "company-pager"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/company-pager",
          "method": "post",
          "tags": [
            "Pager Messages"
          ],
          "method2": "post",
          "description": "Creates and sends an internal text message (company pager message).",
          "summary": "Create Internal Text Message",
          "operationId": "createInternalTextMessage",
          "rateLimitGroup": "Medium",
          "appPermission": "InternalMessages",
          "userPermission": "InternalSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetInternalTextMessageInfoResponse"
          },
          "bodyParameters": "createInternalTextMessageRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "authz-profile"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/authz-profile",
          "method": "get",
          "tags": [
            "User Permissions"
          ],
          "method2": "get",
          "description": "Returns a list of user permissions granted at authorization procedure.\nPlease note: Some permissions may be restricted by extension type.\n",
          "summary": "Get Authorization Profile",
          "operationId": "readAuthorizationProfile",
          "rateLimitGroup": "Medium",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AuthProfileResource"
          },
          "queryParameters": "readAuthorizationProfileParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "assigned-role"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/assigned-role",
          "method": "get",
          "tags": [
            "Role Management"
          ],
          "method2": "get",
          "description": "Returns a list of roles assigned to the current extension.",
          "summary": "List User Assigned Roles",
          "operationId": "listUserAssignedRoles",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadAssignedRoles",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AssignedRolesResource"
          },
          "queryParameters": "listUserAssignedRolesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/assigned-role",
          "method": "put",
          "tags": [
            "Role Management"
          ],
          "method2": "put",
          "description": "Updates a list of roles assigned to the current user.",
          "summary": "Update User Assigned Roles",
          "operationId": "updateUserAssignedRoles",
          "rateLimitGroup": "Medium",
          "appPermission": "RoleManagement",
          "userPermission": "EditAssignedRoles",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AssignedRolesResource"
          },
          "bodyParameters": "assignedRolesResource"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "message-store-templates"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-templates",
          "method": "get",
          "tags": [
            "SMS Templates"
          ],
          "method2": "list",
          "description": "Returns a list of company text message templates.",
          "summary": "List Company Message Templates",
          "operationId": "listCompanyMessageTemplates",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MessageTemplatesListResponse"
          },
          "queryParameters": "listCompanyMessageTemplatesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-templates",
          "method": "post",
          "tags": [
            "SMS Templates"
          ],
          "method2": "post",
          "description": "Creates a new text message template on a company level. Maximum number of company templates is 50.",
          "summary": "Create Company Message Template",
          "operationId": "createCompanyMessageTemplate",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MessageTemplateResponse"
          },
          "bodyParameters": "messageTemplateRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-templates/{templateId}",
          "method": "get",
          "tags": [
            "SMS Templates"
          ],
          "method2": "get",
          "description": "Returns a company text message template by ID.",
          "summary": "Get Company Message Template",
          "operationId": "readCompanyMessageTemplate",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "MessageTemplateResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-templates/{templateId}",
          "method": "put",
          "tags": [
            "SMS Templates"
          ],
          "method2": "put",
          "description": "Updates a company text message template.",
          "summary": "Update Company Message Template",
          "operationId": "updateCompanyMessageTemplate",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "MessageTemplateResponse"
          },
          "bodyParameters": "messageTemplateUpdateRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-templates/{templateId}",
          "method": "delete",
          "tags": [
            "SMS Templates"
          ],
          "method2": "delete",
          "description": "Deletes a company text message template.",
          "summary": "Delete Company Message Template",
          "operationId": "deleteCompanyMessageTemplate",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "withParameter": true
        }
      ],
      "parameter": "templateId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-queues",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}/bulk-assign",
          "method": "post",
          "tags": [
            "Call Queues"
          ],
          "method2": "post",
          "description": "Assigns multiple call queue members to call queue group.\n",
          "summary": "Assign Multiple Call Queue Members",
          "operationId": "assignMultipleCallQueueMembers",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "Groups",
          "withParameter": false,
          "bodyParameters": "callQueueBulkAssignResource"
        }
      ]
    },
    {
      "paths": [
        "rcvideo",
        "v1",
        "account",
        "extension",
        "recordings"
      ],
      "operations": [
        {
          "endpoint": "/rcvideo/v1/account/{accountId}/extension/{extensionId}/recordings",
          "method": "get",
          "tags": [
            "Meeting Recordings"
          ],
          "method2": "get",
          "description": "Returns all recordings available for specific extension.\nThis endpoint is used in admin recording service, not regular web\n",
          "summary": "List User Recordings",
          "operationId": "getExtensionRecordings",
          "rateLimitGroup": "Light",
          "appPermission": "Video",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CloudRecordings"
          },
          "queryParameters": "getExtensionRecordingsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "answering-rule"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/answering-rule",
          "method": "get",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "list",
          "description": "Returns call handling rules of an extension.",
          "summary": "List Call Handling Rules",
          "operationId": "listAnsweringRules",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "UserAnsweringRuleList"
          },
          "queryParameters": "listAnsweringRulesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/answering-rule",
          "method": "post",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "post",
          "description": "Creates a custom call handling rule for a particular caller ID.",
          "summary": "Create Call Handling Rule",
          "operationId": "createAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CustomAnsweringRuleInfo"
          },
          "bodyParameters": "createAnsweringRuleRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/answering-rule/{ruleId}",
          "method": "get",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "get",
          "description": "Returns a call handling rule by ID.",
          "summary": "Get Call Handling Rule",
          "operationId": "readAnsweringRule",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserAnsweringRules",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CallHandlingRuleInfo"
          },
          "queryParameters": "readAnsweringRuleParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/answering-rule/{ruleId}",
          "method": "put",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "put",
          "description": "Updates a custom call handling rule for a particular caller ID.",
          "summary": "Update Call Handling Rule",
          "operationId": "updateAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CallHandlingRuleInfo"
          },
          "bodyParameters": "updateAnsweringRuleRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/answering-rule/{ruleId}",
          "method": "delete",
          "tags": [
            "Call Handling Rules"
          ],
          "method2": "delete",
          "description": "Deletes a custom call handling rule by a particular ID.",
          "summary": "Delete Call Handling Rule",
          "operationId": "deleteAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": true
        }
      ],
      "parameter": "ruleId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "paging-only-groups",
        "users"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/users",
          "method": "get",
          "tags": [
            "Paging Only Groups"
          ],
          "method2": "get",
          "description": "Returns a list of users allowed to page this group.\n",
          "summary": "Get Paging Group Users",
          "operationId": "listPagingGroupUsers",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "PagingOnlyGroupUsers"
          },
          "queryParameters": "listPagingGroupUsersParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "business-hours"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/business-hours",
          "method": "get",
          "tags": [
            "Business Hours"
          ],
          "method2": "get",
          "description": "Returns the user business hours schedule. Business hours (and After hours - all the remaining time) schedules are commonly used for setting call handling rules - `business-hours-rule` and `after-hours-rule` correspondingly. **Please note:** If the user business hours are set to 'Custom hours' then a particular schedule is returned; however if set to '24 hours/7 days a week' the schedule will be empty.",
          "summary": "Get User Business Hours",
          "operationId": "readUserBusinessHours",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetUserBusinessHoursResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/business-hours",
          "method": "put",
          "tags": [
            "Business Hours"
          ],
          "method2": "put",
          "description": "Updates the user business hours schedule.",
          "summary": "Update User Business Hours",
          "operationId": "updateUserBusinessHours",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "UserBusinessHoursUpdateResponse"
          },
          "bodyParameters": "userBusinessHoursUpdateRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "address-book-bulk-upload"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/address-book-bulk-upload",
          "method": "post",
          "tags": [
            "External Contacts"
          ],
          "method2": "post",
          "description": "Uploads multiple contacts for multiple extensions at once.\nMaximum 500 extensions can be uploaded per request. Max amount\nof contacts that can be uploaded per extension is 10,000.\nEach contact uploaded for a certain extension is not visible\nto other extensions.\n",
          "summary": "Upload Multiple User Contacts",
          "operationId": "addressBookBulkUpload",
          "rateLimitGroup": "Heavy",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AddressBookBulkUploadResponse"
          },
          "bodyParameters": "addressBookBulkUploadRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "directory",
        "entries",
        "search"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/directory/entries/search",
          "method": "post",
          "tags": [
            "Internal Contacts"
          ],
          "method2": "post",
          "description": "Returns contact information on corporate users of federated accounts according to the specified filtering and ordering.",
          "summary": "Search Company Directory Entries",
          "operationId": "searchDirectoryEntries",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "DirectoryResource"
          },
          "queryParameters": "searchDirectoryEntriesParameters",
          "bodyParameters": "searchDirectoryEntriesRequest"
        }
      ]
    },
    {
      "paths": [
        "ai",
        "insights",
        "v1",
        "async",
        "analyze-interaction"
      ],
      "operations": [
        {
          "endpoint": "/ai/insights/v1/async/analyze-interaction",
          "method": "post",
          "tags": [
            "Insights"
          ],
          "method2": "post",
          "description": "Returns multiple insights including summaries, emotion, key phrases, questions asked, and more in a single API call.\n",
          "summary": "Interaction Analytics",
          "operationId": "caiAnalyzeInteraction",
          "rateLimitGroup": "Heavy",
          "appPermission": "AI",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CaiAsyncApiResponse"
          },
          "queryParameters": "caiAnalyzeInteractionParameters",
          "bodyParameters": "interactionInput"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "caller-blocking"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking",
          "method": "get",
          "tags": [
            "Call Blocking"
          ],
          "method2": "get",
          "description": "Returns the current caller blocking settings of a user.",
          "summary": "Get Caller Blocking Settings",
          "operationId": "readCallerBlockingSettings",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadBlockedNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallerBlockingSettings"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking",
          "method": "put",
          "tags": [
            "Call Blocking"
          ],
          "method2": "put",
          "description": "Updates the current caller blocking settings of a user.",
          "summary": "Update Caller Blocking Settings",
          "operationId": "updateCallerBlockingSettings",
          "rateLimitGroup": "Light",
          "appPermission": "EditExtensions",
          "userPermission": "EditBlockedNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallerBlockingSettings"
          },
          "bodyParameters": "callerBlockingSettingsUpdate"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "phone-numbers",
        "replace"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/phone-numbers/{phoneNumberId}/replace",
          "method": "post",
          "tags": [
            "Phone Numbers"
          ],
          "method2": "post",
          "description": "Replaces (swaps) phone numbers from inventory with the main, company, direct or company fax numbers.\nThis method is used to replace temporary numbers when the porting process is complete.\n",
          "summary": "Replace Phone Number",
          "operationId": "replacePhoneNumberV2",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyPhoneNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AccountPhoneNumberInfo"
          },
          "bodyParameters": "replacePhoneNumberRequest"
        }
      ]
    },
    {
      "paths": [
        "rcvideo",
        "v1",
        "accounts",
        "extensions",
        "delegators"
      ],
      "operations": [
        {
          "endpoint": "/rcvideo/v1/accounts/{accountId}/extensions/{extensionId}/delegators",
          "method": "get",
          "tags": [
            "Delegation Management"
          ],
          "method2": "get",
          "description": "Returns the list of users who can delegate bridge/meeting creation to the given user.",
          "summary": "Get Delegators",
          "operationId": "rcvListDelegators",
          "rateLimitGroup": "Medium",
          "appPermission": "Video",
          "withParameter": false,
          "responseSchema": {
            "$ref": "DelegatorsListResult"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-recording",
        "extensions"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording/extensions",
          "method": "get",
          "tags": [
            "Call Recording Settings"
          ],
          "method2": "get",
          "description": "Returns the list of extensions to be recorded.",
          "summary": "Get Call Recording Extension List",
          "operationId": "listCallRecordingExtensions",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallRecordingExtensions"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "send-activation-email"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/send-activation-email",
          "method": "post",
          "tags": [
            "Company"
          ],
          "method2": "post",
          "description": "Sends/resends activation email to the system user of unconfirmed account.",
          "summary": "Send/Resend Activation Email",
          "operationId": "sendActivationEmailV2",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "AccountAdministration",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "configuration",
        "v1",
        "company",
        "sessions"
      ],
      "operations": [
        {
          "endpoint": "/webinar/configuration/v1/company/sessions",
          "method": "get",
          "tags": [
            "Webinars and Sessions"
          ],
          "method2": "get",
          "description": "Returns the list of Webinar Sessions hosted by all company users or particular user(s) sorted by\n'scheduledStartTime' or 'creationTime' (if 'scheduledStartTime' is not set) in the ascending ordered.\nThe user must have \"WebinarSettings\" permission granted otherwise the API returns HTTP 403.\n",
          "summary": "List Sessions across Multiple Webinars/Hosts",
          "operationId": "rcwConfigListAllCompanySessions",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "WcsSessionGlobalListResource"
          },
          "queryParameters": "rcwConfigListAllCompanySessionsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}",
          "method": "get",
          "tags": [
            "Call Control"
          ],
          "method2": "get",
          "description": "Returns a call party status by ID.",
          "summary": "Get Call Party Status",
          "operationId": "readCallPartyStatus",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CallParty"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}",
          "method": "delete",
          "tags": [
            "Call Control"
          ],
          "method2": "delete",
          "description": "Deletes a party from a call session by ID. A party can be deleted only if supervised or parked. It is possible to delete only one conference participant per request.",
          "summary": "Delete Call Party",
          "operationId": "deleteCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}",
          "method": "patch",
          "tags": [
            "Call Control"
          ],
          "method2": "patch",
          "description": "Modifies a call party by ID. There is a known limitation for Mute scenario - mute via REST API doesn't work with mute placed via RingCentral apps or HardPhone. It means that if you muted participant via Call Control API and RingCentral Desktop app you need to unmute both endpoints to bring the media back.",
          "summary": "Update Call Party",
          "operationId": "updateCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CallParty"
          },
          "bodyParameters": "partyUpdateRequest"
        }
      ],
      "parameter": "partyId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "greeting",
        "content"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/greeting/{greetingId}/content",
          "method": "get",
          "tags": [
            "Greetings"
          ],
          "method2": "get",
          "description": "Returns extension-level greeting media contents.\n\n**This API must be called via media API entry point, e.g. https://media.ringcentral.com**\n",
          "summary": "Get Extension Greeting Media Content",
          "operationId": "readGreetingContent",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          },
          "queryParameters": "readGreetingContentParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "paging-only-groups",
        "devices"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/devices",
          "method": "get",
          "tags": [
            "Paging Only Groups"
          ],
          "method2": "get",
          "description": "Returns a list of paging devices assigned to this group.\n",
          "summary": "Get Paging Group Devices",
          "operationId": "listPagingGroupDevices",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyDevices",
          "withParameter": false,
          "responseSchema": {
            "$ref": "PagingOnlyGroupDevices"
          },
          "queryParameters": "listPagingGroupDevicesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "assignable-roles"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/assignable-roles",
          "method": "get",
          "tags": [
            "Role Management"
          ],
          "method2": "get",
          "description": "Returns a list of roles which can be assigned to a given extension.",
          "summary": "List Assignable Roles",
          "operationId": "listOfAvailableForAssigningRoles",
          "rateLimitGroup": "Medium",
          "appPermission": "RoleManagement",
          "withParameter": false,
          "responseSchema": {
            "$ref": "RolesCollectionResource"
          },
          "queryParameters": "listOfAvailableForAssigningRolesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "unified-presence"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/unified-presence",
          "method": "get",
          "tags": [
            "Presence"
          ],
          "method2": "get",
          "description": "Returns the unified presence status of the requested user(s). The set of parameters returned by this method differs whether you return the requester's presence or any other user presence.",
          "summary": "Get Unified Presence",
          "operationId": "readUnifiedPresence",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadPresence",
          "userPermission": "ReadPresenceStatus",
          "withParameter": false,
          "responseSchema": {
            "$ref": "UnifiedPresence"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/unified-presence",
          "method": "patch",
          "tags": [
            "Presence"
          ],
          "method2": "patch",
          "description": "Updates the unified presence for the current user specified in path.",
          "summary": "Update Unified Presence",
          "operationId": "updateUnifiedPresence",
          "rateLimitGroup": "Medium",
          "appPermission": "EditPresence",
          "userPermission": "EditPresenceStatus",
          "withParameter": false,
          "responseSchema": {
            "$ref": "UnifiedPresence"
          },
          "bodyParameters": "updateUnifiedPresence"
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "configuration",
        "v1",
        "webinars",
        "sessions"
      ],
      "operations": [
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}/sessions",
          "method": "post",
          "tags": [
            "Webinars and Sessions"
          ],
          "method2": "post",
          "description": "Creates a new Session for a given Webinar",
          "summary": "Create Webinar Session",
          "operationId": "rcwConfigCreateSession",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "WcsSessionResource"
          },
          "bodyParameters": "wcsSessionWithLocaleCodeModel"
        },
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}",
          "method": "get",
          "tags": [
            "Webinars and Sessions"
          ],
          "method2": "get",
          "description": "Returns a Webinar Session by ID.",
          "summary": "Get Webinar Session",
          "operationId": "rcwConfigGetSession",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "WcsSessionResource"
          }
        },
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}",
          "method": "delete",
          "tags": [
            "Webinars and Sessions"
          ],
          "method2": "delete",
          "description": "Deletes a Webinar Session. All child objects (Invitees) will be also deleted.\nIt is disallowed to delete a Session which is in 'Active' or 'Finished' state\n",
          "summary": "Delete Webinar Session",
          "operationId": "rcwConfigDeleteSession",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": true
        },
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}",
          "method": "patch",
          "tags": [
            "Webinars and Sessions"
          ],
          "method2": "patch",
          "description": "Updates a Webinar Session. The payload may contain certain attributes from the Session resource\n(it is a partial update). Changing the 'status' field usually invokes certain workflow actions.\nUpdating a Session in 'Active' or 'Finished' status is prohibited.\nSome status transitions (for example, to 'Active\" or 'Finished') may be prohibited.\n",
          "summary": "Update Webinar Session",
          "operationId": "rcwConfigUpdateSession",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "WcsSessionResource"
          },
          "bodyParameters": "wcsSessionWithLocaleCodeModel"
        }
      ],
      "parameter": "sessionId"
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "phone-numbers",
        "bulk-add"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/phone-numbers/bulk-add",
          "method": "post",
          "tags": [
            "Phone Numbers"
          ],
          "method2": "post",
          "description": "Adds phone numbers to the account Inventory as unassigned. Currently, we support the following values: `Inventory`,\n`InventoryPartnerBusinessMobileNumber` and `PartnerBusinessMobileNumber`. Later we may support some other values like `ForwardedNumber`, etc.\n",
          "summary": "Add Numbers to Inventory",
          "operationId": "addNumbersToInventoryV2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyPhoneNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AddPhoneNumbersResponse"
          },
          "bodyParameters": "addPhoneNumbersRequest"
        },
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/phone-numbers/bulk-add/{taskId}",
          "method": "get",
          "tags": [
            "Phone Numbers"
          ],
          "method2": "get",
          "description": "Returns the result of asynchronous operation which adds phone numbers to the account inventory.\n",
          "summary": "Get Add Numbers Task Results",
          "operationId": "getBulkAddTaskResultsV2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyPhoneNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "GetBulkAddTaskResultsV2Response"
          }
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-recording",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording/bulk-assign",
          "method": "post",
          "tags": [
            "Call Recording Settings"
          ],
          "method2": "post",
          "description": "Creates or updates the list of extensions to be recorded.",
          "summary": "Update Call Recording Extension List",
          "operationId": "updateCallRecordingExtensionList",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "bodyParameters": "bulkAccountCallRecordingsResource"
        }
      ]
    },
    {
      "paths": [
        "analytics",
        "calls",
        "v1",
        "accounts",
        "timeline",
        "fetch"
      ],
      "operations": [
        {
          "endpoint": "/analytics/calls/v1/accounts/{accountId}/timeline/fetch",
          "method": "post",
          "tags": [
            "Business Analytics"
          ],
          "method2": "post",
          "description": "Returns time-value data aggregations filtered by parameters specified",
          "summary": "Calls Timeline Data",
          "operationId": "analyticsCallsTimelineFetch",
          "rateLimitGroup": "Light",
          "appPermission": "Analytics",
          "withParameter": false,
          "responseSchema": {
            "$ref": "TimelineResponse"
          },
          "queryParameters": "analyticsCallsTimelineFetchParameters",
          "bodyParameters": "timelineRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "forwarding-number"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/forwarding-number",
          "method": "get",
          "tags": [
            "Call Forwarding"
          ],
          "method2": "list",
          "description": "Returns the list of extension phone numbers used for call forwarding\nand call flip. The returned list contains all the extension phone numbers\nused for call forwarding and call flip.\n",
          "summary": "List Forwarding Numbers",
          "operationId": "listForwardingNumbers",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserForwardingFlipNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "GetExtensionForwardingNumberListResponse"
          },
          "queryParameters": "listForwardingNumbersParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/forwarding-number",
          "method": "post",
          "tags": [
            "Call Forwarding"
          ],
          "method2": "post",
          "description": "Adds a new forwarding number to the forwarding number list.",
          "summary": "Create Forwarding Number",
          "operationId": "createForwardingNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserForwardingFlipNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ForwardingNumberInfo"
          },
          "bodyParameters": "createForwardingNumberRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/forwarding-number",
          "method": "delete",
          "tags": [
            "Call Forwarding"
          ],
          "method2": "deleteAll",
          "description": "Deletes multiple forwarding numbers from the forwarding number list by IDs.",
          "summary": "Delete Forwarding Numbers",
          "operationId": "deleteForwardingNumbers",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserForwardingFlipNumbers",
          "withParameter": false,
          "bodyParameters": "deleteForwardingNumbersRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/forwarding-number/{forwardingNumberId}",
          "method": "get",
          "tags": [
            "Call Forwarding"
          ],
          "method2": "get",
          "description": "Returns a specific forwarding number.",
          "summary": "Get Forwarding Number",
          "operationId": "readForwardingNumber",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserForwardingFlipNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "ForwardingNumberResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/forwarding-number/{forwardingNumberId}",
          "method": "put",
          "tags": [
            "Call Forwarding"
          ],
          "method2": "put",
          "description": "Updates the existing forwarding number from the forwarding number list.",
          "summary": "Update Forwarding Number",
          "operationId": "updateForwardingNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserForwardingFlipNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "ForwardingNumberInfo"
          },
          "bodyParameters": "updateForwardingNumberRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/forwarding-number/{forwardingNumberId}",
          "method": "delete",
          "tags": [
            "Call Forwarding"
          ],
          "method2": "delete",
          "description": "Deletes a forwarding number from the forwarding number list by its ID.",
          "summary": "Delete Forwarding Number",
          "operationId": "deleteForwardingNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserForwardingFlipNumbers",
          "withParameter": true
        }
      ],
      "parameter": "forwardingNumberId"
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "brand",
        "contracted-country"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/brand/{brandId}/contracted-country",
          "method": "get",
          "tags": [
            "Company"
          ],
          "method2": "list",
          "description": "Returns the list of contracted countries for the given brand.",
          "summary": "List Contracted Countries",
          "operationId": "listContractedCountries",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ContractedCountryListResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/brand/{brandId}/contracted-country/{contractedCountryId}",
          "method": "get",
          "tags": [
            "Company"
          ],
          "method2": "get",
          "description": "Returns the list of domestic countries for account contracted country and brand.\n",
          "summary": "List Domestic Countries",
          "operationId": "listDomesticCountries",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CountryListDictionaryModel"
          },
          "queryParameters": "listDomesticCountriesParameters"
        }
      ],
      "parameter": "contractedCountryId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "address-book-sync"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book-sync",
          "method": "get",
          "tags": [
            "External Contacts"
          ],
          "method2": "get",
          "description": "Synchronizes user contacts.\n",
          "summary": "Address Book Synchronization",
          "operationId": "syncAddressBook",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadContacts",
          "userPermission": "ReadPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AddressBookSync"
          },
          "queryParameters": "syncAddressBookParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "overflow-settings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{callQueueId}/overflow-settings",
          "method": "get",
          "tags": [
            "Call Queues"
          ],
          "method2": "get",
          "description": "Returns overflow settings for a call queue specified in path.",
          "summary": "Get Call Queue Overflow Settings",
          "operationId": "getCallQueueOverflowSettings",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadAccounts",
          "userPermission": "CallQueueToCallQueue",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallQueueOverflowSettings"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{callQueueId}/overflow-settings",
          "method": "put",
          "tags": [
            "Call Queues"
          ],
          "method2": "put",
          "description": "Updates overflow settings for a call queue specified in path.",
          "summary": "Update Call Queue Overflow Settings",
          "operationId": "updateCallQueueOverflowSettings",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "CallQueueToCallQueue",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallQueueOverflowSettings"
          },
          "bodyParameters": "callQueueOverflowSettingsRequestResource"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension-bulk-update",
        "tasks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension-bulk-update/tasks/{taskId}",
          "method": "get",
          "tags": [
            "Extensions"
          ],
          "method2": "get",
          "description": "Returns a status of a task to update multiple extensions.\n",
          "summary": "Get Extension Update Task Status",
          "operationId": "getExtensionBulkUpdateTask",
          "rateLimitGroup": "Light",
          "appPermission": "EditExtensions",
          "userPermission": "EditExtensionInfo",
          "withParameter": true,
          "responseSchema": {
            "$ref": "ExtensionBulkUpdateTaskResource"
          }
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "message-store-configuration"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-configuration",
          "method": "get",
          "tags": [
            "Message Store"
          ],
          "method2": "get",
          "description": "Returns message store settings.",
          "summary": "Get Message Store Configuration",
          "operationId": "readMessageStoreConfiguration",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "AccountAdministration",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MessageStoreConfiguration"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-configuration",
          "method": "put",
          "tags": [
            "Message Store"
          ],
          "method2": "put",
          "description": "Updates message store settings.",
          "summary": "Update Message Store Configuration",
          "operationId": "updateMessageStoreConfiguration",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "AccountAdministration",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MessageStoreConfiguration"
          },
          "bodyParameters": "messageStoreConfiguration"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "supervise"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/supervise",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Allows monitoring a call session in 'Listen' mode. Input parameters should contain internal identifiers of a monitored user and a supervisor's device. Call session should be specified in path. Please note that this method supports single channel audio flow, which means that audio of both call participants is mixed and delivered to the supervisor in single audio channel. Currently this method is supported for Softphone/Hardphone only, since device IDs for WebRTC/Mobile apps cannot be obtained.",
          "summary": "Supervise Call Session",
          "operationId": "superviseCallSession",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SuperviseCallSessionResponse"
          },
          "bodyParameters": "superviseCallSessionRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "administered-sites"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/administered-sites",
          "method": "get",
          "tags": [
            "Site Administration"
          ],
          "method2": "get",
          "description": "Returns a list of sites administered by the current user.",
          "summary": "List User Administered Sites",
          "operationId": "listAdministeredSites",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "BusinessSiteCollectionResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/administered-sites",
          "method": "put",
          "tags": [
            "Site Administration"
          ],
          "method2": "put",
          "description": "Updates the sites administered by the current user.\nPlease note: Only IDs of records are used for update.\n",
          "summary": "Update User Administered Sites",
          "operationId": "updateUserAdministeredSites",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditAssignedRoles",
          "withParameter": false,
          "responseSchema": {
            "$ref": "BusinessSiteCollectionResource"
          },
          "bodyParameters": "businessSiteCollectionRequest"
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "registration",
        "v1",
        "sessions",
        "registrants"
      ],
      "operations": [
        {
          "endpoint": "/webinar/registration/v1/sessions/{sessionId}/registrants",
          "method": "get",
          "tags": [
            "Registrants"
          ],
          "method2": "list",
          "description": "Returns the list of Registrants ordered by \"id\" ascending.\n\nA caller must be an authorized user: either a host of the webinar or an IT Admin:\na user from host's account with \"WebinarSettings\" permission.\n",
          "summary": "List Session Registrants",
          "operationId": "rcwRegListRegistrants",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "RegistrantListResource"
          },
          "queryParameters": "rcwRegListRegistrantsParameters"
        },
        {
          "endpoint": "/webinar/registration/v1/sessions/{sessionId}/registrants",
          "method": "post",
          "tags": [
            "Registrants"
          ],
          "method2": "post",
          "description": "Creates a new Registrant for a given session.\n\nRegistration MUST be open for the session for this call to succeed (otherwise it should return HTTP 403).\n\nA caller must be an authorized user: either a host of the webinar or an IT Admin:\na user from host's account with \"WebinarSettings\" permission.\n",
          "summary": "Create Registrant",
          "operationId": "rcwRegCreateRegistrant",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "RegistrantModelResponsePostWithQuestionnaire"
          },
          "bodyParameters": "registrantBaseModelWithQuestionnaire"
        },
        {
          "endpoint": "/webinar/registration/v1/sessions/{sessionId}/registrants/{registrantId}",
          "method": "get",
          "tags": [
            "Registrants"
          ],
          "method2": "get",
          "description": "Returns a Registrant by ID.\n\nA caller must be an authorized user: either a host of the webinar or an IT Admin:\na user from host's account with \"WebinarSettings\" permission.\n",
          "summary": "Get Registrant",
          "operationId": "rcwRegGetRegistrant",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "RegistrantModelWithQuestionnaire"
          },
          "queryParameters": "rcwRegGetRegistrantParameters"
        },
        {
          "endpoint": "/webinar/registration/v1/sessions/{sessionId}/registrants/{registrantId}",
          "method": "delete",
          "tags": [
            "Registrants"
          ],
          "method2": "delete",
          "description": "Deletes a Registrant by ID.\n\nSession must not be in finished state (otherwise it should return HTTP 403).\n\nA caller must be an authorized user: either a host of the webinar or an IT Admin:\na user from host's account with \"WebinarSettings\" permission.\n",
          "summary": "Delete Registrant",
          "operationId": "rcwRegDeleteRegistrant",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": true
        }
      ],
      "parameter": "registrantId"
    },
    {
      "paths": [
        "rcvideo",
        "v2",
        "account",
        "extension",
        "bridges",
        "default"
      ],
      "operations": [
        {
          "endpoint": "/rcvideo/v2/account/{accountId}/extension/{extensionId}/bridges/default",
          "method": "get",
          "tags": [
            "Bridge Management"
          ],
          "method2": "get",
          "description": "Returns a default bridge (PMI) for the user specified by **accountId**\nand **extensionId** identifiers.\n",
          "summary": "Get User's Default Bridge",
          "operationId": "getDefaultBridge",
          "rateLimitGroup": "Medium",
          "appPermission": "Video",
          "withParameter": false,
          "responseSchema": {
            "$ref": "BridgeResponse"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "message-store-report",
        "archive"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-report/{taskId}/archive",
          "method": "get",
          "tags": [
            "Message Exports"
          ],
          "method2": "get",
          "description": "Returns the created report with message data not including attachments.",
          "summary": "Get Message Store Report Archive",
          "operationId": "readMessageStoreReportArchive",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadMessages",
          "userPermission": "Users",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MessageStoreReportArchive"
          }
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "notifications",
        "v1",
        "subscriptions",
        "renew"
      ],
      "operations": [
        {
          "endpoint": "/webinar/notifications/v1/subscriptions/{subscriptionId}/renew",
          "method": "post",
          "tags": [
            "Webinar Subscriptions"
          ],
          "method2": "post",
          "description": "Renews the existing webinar subscription.",
          "summary": "Renew Webinar Subscription",
          "operationId": "rcwN11sRenewSubscription",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SubscriptionInfo"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "a2p-sms",
        "opt-outs",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/opt-outs/bulk-assign",
          "method": "post",
          "tags": [
            "High Volume SMS"
          ],
          "method2": "post",
          "description": "Adds multiple opt-outs and/or opt-ins for the specified sender number and a set of recipient numbers.\n",
          "summary": "Add Opt-In/Out Numbers",
          "operationId": "addA2PSMSOptOuts",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "OptOutBulkAssignResponse"
          },
          "bodyParameters": "optOutBulkAssignRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "batch-provisioning",
        "users"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/batch-provisioning/users",
          "method": "post",
          "tags": [
            "User Settings"
          ],
          "method2": "post",
          "description": "Creates multiple user extensions with BYOD (customer provided) devices.\nIf \"extensionNumber\" is not specified, the next available extension number will be assigned.\n",
          "summary": "Create Multiple User Extensions",
          "operationId": "postBatchProvisionUsers",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "BatchProvisionUsersResponse"
          },
          "bodyParameters": "batchProvisionUsersRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update"
      ],
      "operations": [],
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "emergency-locations"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/emergency-locations",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "list",
          "description": "Returns a list of emergency response locations available for the particular extension.",
          "summary": "List User Emergency Locations",
          "operationId": "getExtensionEmergencyLocations",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "EmergencyLocationsResource"
          },
          "queryParameters": "getExtensionEmergencyLocationsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/emergency-locations",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Creates a personal emergency response location for the current user.",
          "summary": "Create User Emergency Location",
          "operationId": "createExtensionEmergencyLocation",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "EmergencyFramework",
          "withParameter": false,
          "responseSchema": {
            "$ref": "EmergencyLocationResponseResource"
          },
          "bodyParameters": "createUserEmergencyLocationRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/emergency-locations/{locationId}",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "get",
          "description": "Returns a personal emergency response location for the current user.",
          "summary": "Get User Emergency Location",
          "operationId": "getExtensionEmergencyLocation",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CommonEmergencyLocationResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/emergency-locations/{locationId}",
          "method": "put",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "put",
          "description": "Updates a personal emergency response location by the current user or admin.\n",
          "summary": "Update User Emergency Location",
          "operationId": "updateExtensionEmergencyLocation",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "EmergencyFramework",
          "withParameter": true,
          "responseSchema": {
            "$ref": "EmergencyLocationResponseResource"
          },
          "bodyParameters": "emergencyLocationRequestResource"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/emergency-locations/{locationId}",
          "method": "delete",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "delete",
          "description": "Deletes a personal emergency response location by ID by\nthe current user or admin. Multiple personal emergency response\nlocations can be deleted by single API call.\n",
          "summary": "Delete User Emergency Location",
          "operationId": "deleteExtensionEmergencyLocation",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "EmergencyFramework",
          "withParameter": true,
          "queryParameters": "deleteExtensionEmergencyLocationParameters"
        }
      ],
      "parameter": "locationId"
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1",
        "webinars",
        "sessions",
        "invitees"
      ],
      "operations": [
        {
          "endpoint": "/webinar/history/v1/webinars/{webinarId}/sessions/{sessionId}/invitees",
          "method": "get",
          "tags": [
            "Historical Webinars"
          ],
          "method2": "list",
          "description": "Returns the list of Invitees (co-hosts and panelists) of a given Webinar Session (host interface).\nAn implicit record created for a Webinar 'Host' is always returned.\n",
          "summary": "List Session Invitees",
          "operationId": "rcwHistoryListInvitees",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "InviteeListResource"
          },
          "queryParameters": "rcwHistoryListInviteesParameters"
        },
        {
          "endpoint": "/webinar/history/v1/webinars/{webinarId}/sessions/{sessionId}/invitees/{inviteeId}",
          "method": "get",
          "tags": [
            "Historical Webinars"
          ],
          "method2": "get",
          "description": "Returns a historical session invitee information by ID (host interface).",
          "summary": "Get Session Invitee",
          "operationId": "rcwHistoryGetInvitee",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "InviteeModel"
          }
        }
      ],
      "parameter": "inviteeId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "video-configuration"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/video-configuration",
          "method": "get",
          "tags": [
            "Video Configuration"
          ],
          "method2": "get",
          "description": "Returns information about video configuration settings of the current user.\n",
          "summary": "Get User Video Configuration",
          "operationId": "readUserVideoConfiguration",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "UserVideoConfiguration"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "call-queue-presence"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-queue-presence",
          "method": "get",
          "tags": [
            "Presence"
          ],
          "method2": "get",
          "description": "Returns a list of agent's call queues with the agent presence status (per queue).",
          "summary": "Get Agent’s Call Queue Presence",
          "operationId": "readExtensionCallQueuePresence",
          "rateLimitGroup": "Light",
          "appPermission": "ReadPresence",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ExtensionCallQueuePresenceList"
          },
          "queryParameters": "readExtensionCallQueuePresenceParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-queue-presence",
          "method": "put",
          "tags": [
            "Presence"
          ],
          "method2": "put",
          "description": "Updates availability of the agent for the call queues.",
          "summary": "Update Call Queue Presence",
          "operationId": "updateExtensionCallQueuePresence",
          "rateLimitGroup": "Medium",
          "appPermission": "EditPresence",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ExtensionCallQueuePresenceList"
          },
          "bodyParameters": "extensionCallQueueUpdatePresenceList"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "authz-profile",
        "check"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/authz-profile/check",
          "method": "get",
          "tags": [
            "User Permissions"
          ],
          "method2": "get",
          "description": "Checks if a certain user permission is activated for a particular extension.",
          "summary": "Check User Permission",
          "operationId": "checkUserPermission",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AuthProfileCheckResource"
          },
          "queryParameters": "checkUserPermissionParameters"
        }
      ]
    },
    {
      "paths": [
        "analytics",
        "calls",
        "v1",
        "accounts",
        "aggregation",
        "fetch"
      ],
      "operations": [
        {
          "endpoint": "/analytics/calls/v1/accounts/{accountId}/aggregation/fetch",
          "method": "post",
          "tags": [
            "Business Analytics"
          ],
          "method2": "post",
          "description": "Returns call aggregations filtered by parameters specified",
          "summary": "Calls Aggregation Data",
          "operationId": "analyticsCallsAggregationFetch",
          "rateLimitGroup": "Light",
          "appPermission": "Analytics",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AggregationResponse"
          },
          "queryParameters": "analyticsCallsAggregationFetchParameters",
          "bodyParameters": "aggregationRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "address-book",
        "contact"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book/contact",
          "method": "get",
          "tags": [
            "External Contacts"
          ],
          "method2": "list",
          "description": "Returns the user personal contacts.\n",
          "summary": "List Contacts",
          "operationId": "listContacts",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadContacts",
          "userPermission": "ReadPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ContactList"
          },
          "queryParameters": "listContactsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book/contact",
          "method": "post",
          "tags": [
            "External Contacts"
          ],
          "method2": "post",
          "description": "Creates the user personal contact.\n",
          "summary": "Create User Contact",
          "operationId": "createContact",
          "rateLimitGroup": "Heavy",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "PersonalContactResource"
          },
          "queryParameters": "createContactParameters",
          "bodyParameters": "personalContactRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book/contact/{contactId}",
          "method": "get",
          "tags": [
            "External Contacts"
          ],
          "method2": "get",
          "description": "Returns the user personal contact(s).\n[Batch request syntax](https://developers.ringcentral.com/guide/basics/batch-requests) is supported.\n",
          "summary": "Get User Contact(s)",
          "operationId": "readContact",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadContacts",
          "userPermission": "ReadPersonalContacts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "PersonalContactResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book/contact/{contactId}",
          "method": "put",
          "tags": [
            "External Contacts"
          ],
          "method2": "put",
          "description": "Updates the user personal contact(s) (full resource update).\n[Batch request syntax](https://developers.ringcentral.com/guide/basics/batch-requests) is supported.\n",
          "summary": "Update User Contact(s)",
          "operationId": "updateContact",
          "rateLimitGroup": "Heavy",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "PersonalContactResource"
          },
          "queryParameters": "updateContactParameters",
          "bodyParameters": "personalContactRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book/contact/{contactId}",
          "method": "delete",
          "tags": [
            "External Contacts"
          ],
          "method2": "delete",
          "description": "Deletes the user personal contact(s).\n[Batch request syntax](https://developers.ringcentral.com/guide/basics/batch-requests) is supported.\n",
          "summary": "Delete User Contact(s)",
          "operationId": "deleteContact",
          "rateLimitGroup": "Heavy",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book/contact/{contactId}",
          "method": "patch",
          "tags": [
            "External Contacts"
          ],
          "method2": "patch",
          "description": "Updates particular values of a personal contact attributes specified in request (partial resource update). Omitted attributes will remain unchanged.\nIf any attribute is passed in request body with the null value, then this attribute value will be removed.\n",
          "summary": "Update Contact Attributes",
          "operationId": "patchContact",
          "rateLimitGroup": "Heavy",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "PersonalContactResource"
          },
          "queryParameters": "patchContactParameters",
          "bodyParameters": "personalContactRequest"
        }
      ],
      "parameter": "contactId"
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "extensions",
        "devices",
        "replace"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/extensions/{extensionId}/devices/{deviceId}/replace",
          "method": "post",
          "tags": [
            "Devices"
          ],
          "method2": "post",
          "description": "Replaces the user device with another device, which is assigned to an extension\nor is stored in the inventory of the same account.\nCurrently, the following device types can be swapped - `HardPhone` and `OtherPhone`.\n\nPlease note:\n\n - This method allows replacing a device itself, while a phone number,\n   a digital Line and an emergency address associated with this device remain unchanged\n   and will still work together in a chain with the replacement device.\n - If a target device is from the inventory, then a source device will be moved\n   to the inventory, and a target device will be assigned to the current extension.\n - If a target device is currently assigned to another extension,\n   then the devices will be just swapped.\n",
          "summary": "Swap Devices",
          "operationId": "replaceDevicesJWSPublic",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditUserDevices",
          "withParameter": false,
          "bodyParameters": "swapDeviceRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "paging-only-groups",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/bulk-assign",
          "method": "post",
          "tags": [
            "Paging Only Groups"
          ],
          "method2": "post",
          "description": "Adds and/or removes paging group users and devices.\n",
          "summary": "Assign Paging Group Users and Devices",
          "operationId": "assignMultiplePagingGroupUsersDevices",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "Groups",
          "withParameter": false,
          "bodyParameters": "editPagingGroupRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-monitoring-groups",
        "members"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups/{groupId}/members",
          "method": "get",
          "tags": [
            "Call Monitoring Groups"
          ],
          "method2": "get",
          "description": "Returns a list of members for a call monitoring group specified in path.\n",
          "summary": "List Call Monitoring Group Members",
          "operationId": "listCallMonitoringGroupMembers",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallMonitoringGroupMemberList"
          },
          "queryParameters": "listCallMonitoringGroupMembersParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "address-book-bulk-upload",
        "tasks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/address-book-bulk-upload/tasks/{taskId}",
          "method": "get",
          "tags": [
            "External Contacts"
          ],
          "method2": "get",
          "description": "Returns the status of a task on adding multiple contacts to multiple extensions.\n",
          "summary": "Get Contacts Upload Task",
          "operationId": "getAddressBookBulkUploadTask",
          "rateLimitGroup": "Light",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "AddressBookBulkUploadResponse"
          }
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "ai",
        "ringsense",
        "v1",
        "public",
        "accounts",
        "domains",
        "records"
      ],
      "operations": [],
      "parameter": "sourceRecordId",
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "message-store",
        "content"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store/{messageId}/content/{attachmentId}",
          "method": "get",
          "tags": [
            "Message Store"
          ],
          "method2": "get",
          "description": "Returns media content of a message attachment.\nThe content is typically an audio file (`audio/mpeg` or `audio/wav`) for voicemails,\nTIFF or PDF for faxes and image/audio/video for MMS.\n\n**This API must be called via media API entry point, e.g. https://media.ringcentral.com**\n",
          "summary": "Get Message Attachment Content",
          "operationId": "readMessageContent",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadMessages",
          "withParameter": true,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          },
          "queryParameters": "readMessageContentParameters"
        }
      ],
      "parameter": "attachmentId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "park"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/park",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Parks a call to a virtual location from where it can further be retrieved by any user from any phone of the system. The call session and call party identifiers should be specified in path. Currently, the users can park only their own incoming calls. Up to 50 calls can be parked simultaneously. Park location starts with asterisk (*) and ranges 801-899.",
          "summary": "Call Park",
          "operationId": "callParkParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallParty"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "flip"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/flip",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Performs call flip procedure by holding opposite party and calling to the specified target",
          "summary": "Call Flip on Party",
          "operationId": "callFlipParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "bodyParameters": "callPartyFlip"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "hold"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/hold",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Puts the party to stand-alone mode and starts to play Hold Music according to configuration & state to peers. There is a known limitation for Hold API - hold via REST API doesn't work with hold placed via RingCentral apps or HardPhone. It means that if you muted participant via Call Control API and RingCentral Desktop app, then you need to un-hold both endpoints to remove Hold Music and bring media back.",
          "summary": "Hold Call Party",
          "operationId": "holdCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallParty"
          },
          "bodyParameters": "holdCallPartyRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "assigned-role",
        "default"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/assigned-role/default",
          "method": "put",
          "tags": [
            "Role Management"
          ],
          "method2": "put",
          "description": "Assigns the default role to the currently logged-in user extension.",
          "summary": "Assign Default Role",
          "operationId": "assignDefaultRole",
          "rateLimitGroup": "Medium",
          "appPermission": "RoleManagement",
          "userPermission": "Users",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AssignedRolesResource"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "notification-settings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/notification-settings",
          "method": "get",
          "tags": [
            "User Settings"
          ],
          "method2": "get",
          "description": "Returns notification settings for the current extension.\n\nKnowledge Article: [User Settings - Set Up Message Notifications](https://success.ringcentral.com/articles/RC_Knowledge_Article/9740)\n",
          "summary": "Get Notification Settings",
          "operationId": "readNotificationSettings",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadMessagesNotificationsSettings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "NotificationSettings"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/notification-settings",
          "method": "put",
          "tags": [
            "User Settings"
          ],
          "method2": "put",
          "description": "Updates notification settings for the current extension.\nKnowledge Article: [User Settings - Set Up Message Notifications](https://success.ringcentral.com/articles/RC_Knowledge_Article/9740)\n",
          "summary": "Update Notification Settings",
          "operationId": "updateNotificationSettings",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditMessagesNotificationsSettings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "NotificationSettings"
          },
          "bodyParameters": "notificationSettingsUpdateRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-recording",
        "custom-greetings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording/custom-greetings",
          "method": "get",
          "tags": [
            "Call Recording Settings"
          ],
          "method2": "get",
          "description": "Returns call recording custom greetings.",
          "summary": "Get Call Recording Custom Greeting List",
          "operationId": "listCallRecordingCustomGreetings",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallRecordingCustomGreetings"
          },
          "queryParameters": "listCallRecordingCustomGreetingsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording/custom-greetings",
          "method": "delete",
          "tags": [
            "Call Recording Settings"
          ],
          "method2": "deleteAll",
          "description": "Deletes call recording custom greetings.",
          "summary": "Delete Call Recording Custom Greeting List",
          "operationId": "deleteCallRecordingCustomGreetingList",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyInfo",
          "withParameter": false
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording/custom-greetings/{greetingId}",
          "method": "delete",
          "tags": [
            "Call Recording Settings"
          ],
          "method2": "delete",
          "description": "Deletes call recording custom greeting(s).",
          "summary": "Delete Call Recording Custom Greeting",
          "operationId": "deleteCallRecordingCustomGreeting",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyInfo",
          "withParameter": true
        }
      ],
      "parameter": "greetingId"
    },
    {
      "paths": [
        "ai",
        "ringsense",
        "v1",
        "public",
        "accounts",
        "domains",
        "sessions"
      ],
      "operations": [],
      "parameter": "sourceSessionId",
      "noParentParameter": false
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "reply"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/reply",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Replies with text/pattern without picking up a call.",
          "summary": "Reply with Text",
          "operationId": "replyParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ReplyParty"
          },
          "bodyParameters": "callPartyReply"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "v2",
        "accounts",
        "extensions",
        "call-flip-numbers"
      ],
      "operations": [
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/extensions/{extensionId}/call-flip-numbers",
          "method": "get",
          "tags": [
            "Call Flip"
          ],
          "method2": "get",
          "description": "Returns call flip settings. Call flip destination is an extension level setting.\nThe following numbers can be used for call flip:\n\n* User's DL numbers (added/removed automatically by the System)\n* PSTN numbers in E.164 format (added/removed manually by User)\n\nCall flip list is generally limited up to 10 numbers.\n\n**Please note:** This API is only working with the new Communication Handling flow.\nTo ensure that please check if the 'NewCallHandlingAndForwarding' feature is supported.\n",
          "summary": "Get Call Flip Settings",
          "operationId": "readCallFlipSettings",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallFlipNumberListResource"
          }
        },
        {
          "endpoint": "/restapi/v2/accounts/{accountId}/extensions/{extensionId}/call-flip-numbers",
          "method": "put",
          "tags": [
            "Call Flip"
          ],
          "method2": "put",
          "description": "Updates call flip settings. Call flip destination is an extension level setting.\nThe following numbers can be used for call flip:\n\n* User's DL numbers (added/removed automatically by the System)\n* PSTN numbers in E.164 format (added/removed manually by User)\n\nCall flip list is generally limited up to 10 numbers.\n\n**Please note:** This API is only working with the new Communication Handling flow.\nTo ensure that please check if the 'NewCallHandlingAndForwarding' feature is supported.\n",
          "summary": "Update Call Flip Settings",
          "operationId": "updateCallFlipSettings",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallFlipNumberListResource"
          },
          "bodyParameters": "callFlipNumberListResource"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "unhold"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/unhold",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Brings a party back into a call and stops to play Hold Music. There is a known limitation for Hold API - hold via REST API doesn't work with hold placed via RingCentral apps or HardPhone. It means that if you muted participant via Call Control API and RingCentral Desktop app, then you need to un-hold both endpoints to remove Hold Music and bring media back.",
          "summary": "Un-hold Call Party",
          "operationId": "unholdCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallParty"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "bridge"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/bridge",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Allows the user to connect multiple call session participants over a conference call bridge.\nThe current active call session ID and party ID of the user within this session should be specified\nin path; the bridged call session ID and party ID of the user within that session should be specified\nin request body. Thus, the user connects participants of two sessions into the one conference call\nusing his/her own party IDs from both sessions.\"\n",
          "summary": "Bridge Call Party",
          "operationId": "bridgeCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallParty"
          },
          "bodyParameters": "bridgeTargetRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "ignore"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/ignore",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Ignores a call to a call queue agent in `Setup` or `Proceeding` state.",
          "summary": "Ignore Call in Queue",
          "operationId": "ignoreCallInQueue",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "bodyParameters": "ignoreRequestBody"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "reject"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/reject",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Rejects an inbound call in a \"Setup\" or \"Proceeding\" state",
          "summary": "Reject Call Party",
          "operationId": "rejectParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "answer"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/answer",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Answers a call on a certain device by passing the corresponding device ID in request body. Supported for call forwarding, call transfer, call flip and call queues.",
          "summary": "Answer Call Party",
          "operationId": "answerCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallParty"
          },
          "bodyParameters": "answerTarget"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "pickup"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/pickup",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Picks up a call parked to the specified park location.",
          "summary": "Pickup Call",
          "operationId": "pickupCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallParty"
          },
          "bodyParameters": "pickupTarget"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "message-store-templates"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store-templates",
          "method": "get",
          "tags": [
            "SMS Templates"
          ],
          "method2": "list",
          "description": "Returns a list of user's personal text message templates.",
          "summary": "List User Message Templates",
          "operationId": "listUserMessageTemplates",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MessageTemplatesListResponse"
          },
          "queryParameters": "listUserMessageTemplatesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store-templates",
          "method": "post",
          "tags": [
            "SMS Templates"
          ],
          "method2": "post",
          "description": "Creates a user personal text message template.\nMaximum number of personal templates is 25 per user.\nMax length of the `body` property is 1000 symbols (2-byte UTF-16 encoded).\n",
          "summary": "Create User Message Template",
          "operationId": "createUserMessageTemplate",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "MessageTemplateResponse"
          },
          "bodyParameters": "messageTemplateRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store-templates/{templateId}",
          "method": "get",
          "tags": [
            "SMS Templates"
          ],
          "method2": "get",
          "description": "Returns a user personal text message template by ID.",
          "summary": "Get User Message Template",
          "operationId": "readUserMessageTemplate",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "MessageTemplateResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store-templates/{templateId}",
          "method": "put",
          "tags": [
            "SMS Templates"
          ],
          "method2": "put",
          "description": "Updates a user personal text message template.",
          "summary": "Update User Message Template",
          "operationId": "updateUserMessageTemplate",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "withParameter": true,
          "responseSchema": {
            "$ref": "MessageTemplateResponse"
          },
          "bodyParameters": "messageTemplateUpdateRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store-templates/{templateId}",
          "method": "delete",
          "tags": [
            "SMS Templates"
          ],
          "method2": "delete",
          "description": "Deletes a user personal text message template.",
          "summary": "Delete User Message Template",
          "operationId": "deleteUserMessageTemplate",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "withParameter": true
        }
      ],
      "parameter": "templateId"
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1",
        "webinars",
        "sessions",
        "participants"
      ],
      "operations": [
        {
          "endpoint": "/webinar/history/v1/webinars/{webinarId}/sessions/{sessionId}/participants",
          "method": "get",
          "tags": [
            "Historical Webinars"
          ],
          "method2": "get",
          "description": "Returns the list of participants of a given Webinar Session (host interface).\n",
          "summary": "List Session Participants",
          "operationId": "rcwHistoryListParticipants",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ParticipantListResource"
          },
          "queryParameters": "rcwHistoryListParticipantsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "forward"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/forward",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Forwards a non-answered incoming call to the specified call party. Applicable for a call session in \"Setup\" or \"Proceeding\" state.",
          "summary": "Forward Call Party",
          "operationId": "forwardCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ForwardCallPartyResponse"
          },
          "bodyParameters": "forwardTarget"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-monitoring-groups",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups/{groupId}/bulk-assign",
          "method": "post",
          "tags": [
            "Call Monitoring Groups"
          ],
          "method2": "post",
          "description": "Updates a list of call monitoring groups.\n",
          "summary": "Update Call Monitoring Group List",
          "operationId": "updateCallMonitoringGroupList",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "Groups",
          "withParameter": false,
          "bodyParameters": "callMonitoringBulkAssign"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "transfer"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/transfer",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Transfers an answered call to the specified call party. Applicable for a call session in \"Answered\" or \"Hold\" state.",
          "summary": "Transfer Call Party",
          "operationId": "transferCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallParty"
          },
          "bodyParameters": "transferTarget"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "bring-in"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/bring-in",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Adds a new party to the call session by bringing in an established\nSIP call connection. The maximum number of parties to bring in is 10; only\n1 call party can be added per request. Currently, the method is supported for\nsessions of the `Conference` origin only.\n",
          "summary": "Bring-In Call Party",
          "operationId": "createCallPartyWithBringIn",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CallParty"
          },
          "bodyParameters": "addPartyRequest"
        }
      ]
    },
    {
      "paths": [
        "webinar",
        "configuration",
        "v1",
        "webinars",
        "sessions",
        "invitees"
      ],
      "operations": [
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees",
          "method": "get",
          "tags": [
            "Invitees"
          ],
          "method2": "list",
          "description": "Returns the list of Invitees (co-hosts and panelists in phase 1\nand also invited attendees in subsequent phases) of a given Webinar Session.\nAn implicit record created for a Webinar 'Host' is always returned.\n",
          "summary": "List Session Invitees",
          "operationId": "rcwConfigListInvitees",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "WcsInviteeListResource"
          },
          "queryParameters": "rcwConfigListInviteesParameters"
        },
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees",
          "method": "patch",
          "tags": [
            "Invitees"
          ],
          "method2": "patch",
          "description": "Adds, updates and deletes Webinar Session invitees in bulk (co-hosts and panelists in phase 1\nand also invited attendees in subsequent phases).\nThe payload may contain multiple added, updated or deleted invitees.\nFor each added record 'role' and either 'firstName'/'lastName'/'email' (for non-authenticated users)\nor 'linkedUser.*' (for authenticated users) must be specified, but not both.\nFor updated invitees 'id'  and 'role' must be specified, 'linkedUser' change is not supported.\nFor deleted invitees only there ids should be specified.\nThe response contains added/updated records (full) and deleted records (ids only).\n\nDeleting an invitee for a Session in 'Active' or 'Finished' status is prohibited.\n",
          "summary": "Bulk Add/Delete Session Invitees",
          "operationId": "rcwConfigUpdateInvitees",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "BulkUpdateInviteesResponse"
          },
          "bodyParameters": "bulkUpdateInviteesRequest"
        },
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees/{inviteeId}",
          "method": "get",
          "tags": [
            "Invitees"
          ],
          "method2": "get",
          "description": "Returns a Session Invitee information by ID",
          "summary": "Get Session Invitee",
          "operationId": "rcwConfigGetInvitee",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "InviteeResource"
          }
        },
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees/{inviteeId}",
          "method": "put",
          "tags": [
            "Invitees"
          ],
          "method2": "put",
          "description": "Updates a Session Invitee. 'role' is required (it can be changed from 'Panelist' to 'CoHost' or vise versa).\nIt is disallowed to update 'linkedUser': it should be done by deleting then adding an invitee.\nFor non-authenticated users 'firstName'/'lastName'/'email' can be specified, but not both.\nImplicit record created for a Webinar 'Host' cannot be modified.\nAlso it is disallowed to change any other role to 'Host'.\n",
          "summary": "Update Session Invitee",
          "operationId": "rcwConfigUpdateInvitee",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": true,
          "responseSchema": {
            "$ref": "InviteeResource"
          },
          "bodyParameters": "updateInviteeRequest"
        },
        {
          "endpoint": "/webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees/{inviteeId}",
          "method": "delete",
          "tags": [
            "Invitees"
          ],
          "method2": "delete",
          "description": "Deletes a Session Invitee. Implicit record created for a Webinar 'Host' cannot be deleted.\nDeleting an invitee for a Session in 'Active' or 'Finished' status is prohibited (HTTP 403).\n",
          "summary": "Delete Session Invitee",
          "operationId": "rcwConfigDeleteInvitee",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditWebinars",
          "withParameter": true
        }
      ],
      "parameter": "inviteeId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "tasks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/tasks/{taskId}",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "get",
          "description": "Returns results of the task created within the frame of Automatic\nLocation Updates feature. Currently four task types are supported: 'Wireless\nPoints Bulk Create', 'Wireless Points Bulk Update', 'Switches Bulk Create',\n'Switches Bulk Update'.\n",
          "summary": "Get Emergency Map Configuration Task",
          "operationId": "readAutomaticLocationUpdatesTask",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "AutomaticLocationUpdatesTaskInfo"
          }
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "users"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/users",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "get",
          "description": "Returns a list of users with their status of Automatic Location\nUpdates feature.\n",
          "summary": "List Users",
          "operationId": "listAutomaticLocationUpdatesUsers",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "AutomaticLocationUpdatesUserList"
          },
          "queryParameters": "listAutomaticLocationUpdatesUsersParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "supervise"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/supervise",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Allows to monitor a call party in 'Listen' mode. Input parameters\nare extension number of a monitored user and internal identifier of a supervisor's\ndevice. Call session and party identifiers should be specified in path. Please\nnote that for this method dual channel audio flow is supported, which means\nthat you need to make one more request for monitoring the second participant\nof a call. And as a result of each monitoring request the client receives\nSIP invite with the following header `p-rc-api-monitoring-ids` containing\nIDs of the monitored party and session. The flow is supported for calls with\nno more than 2 participants. Currently, this method is supported for Softphone/Hardphone devices\nonly, since device IDs for WebRTC/Mobile apps cannot be obtained.\n",
          "summary": "Supervise Call Party",
          "operationId": "superviseCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "PartySuperviseResponse"
          },
          "bodyParameters": "partySuperviseRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "recordings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/recordings",
          "method": "post",
          "tags": [
            "Call Control"
          ],
          "method2": "post",
          "description": "Starts a new call recording for a call party.\n*Please note* this API does not allow conference calls to be recorded.\n",
          "summary": "Create Recording",
          "operationId": "startCallRecording",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/recordings/{recordingId}",
          "method": "patch",
          "tags": [
            "Call Control"
          ],
          "method2": "patch",
          "description": "Pause/resume recording",
          "summary": "Pause/Resume Recording",
          "operationId": "pauseResumeCallRecording",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": true,
          "responseSchema": {
            "$ref": "CallRecording"
          },
          "queryParameters": "pauseResumeCallRecordingParameters",
          "bodyParameters": "callRecordingUpdate"
        }
      ],
      "parameter": "recordingId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "devices"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/devices",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "get",
          "description": "Returns a list of common devices with their status of Automatic\nLocation Updates feature.\n",
          "summary": "List Devices",
          "operationId": "listDevicesAutomaticLocationUpdates",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ListDevicesAutomaticLocationUpdates"
          },
          "queryParameters": "listDevicesAutomaticLocationUpdatesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "networks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/networks",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "list",
          "description": "Returns a corporate network map with emergency addresses assigned\nto the current account.\n",
          "summary": "Get Network Map",
          "operationId": "listNetworks",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "NetworksList"
          },
          "queryParameters": "listNetworksParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/networks",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Creates a new network in a corporate ethernet map for assignment\nof emergency addresses to network access points.\n",
          "summary": "Create Network",
          "operationId": "createNetwork",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "NetworkInfo"
          },
          "bodyParameters": "createNetworkRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/networks/{networkId}",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "get",
          "description": "Returns the specified network with emergency addresses assigned\nto the current account.\n",
          "summary": "Get Network",
          "operationId": "readNetwork",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "NetworkInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/networks/{networkId}",
          "method": "put",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "put",
          "description": "Updates a network in a corporate ethernet map for assignment of emergency\naddresses to network access points.\n",
          "summary": "Update Network",
          "operationId": "updateNetwork",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "NetworkInfo"
          },
          "bodyParameters": "updateNetworkRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/networks/{networkId}",
          "method": "delete",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "delete",
          "description": "Deletes network(s) in a corporate ethernet map for Automatic Location\nUpdates feature.\n",
          "summary": "Delete Network",
          "operationId": "deleteNetwork",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true
        }
      ],
      "parameter": "networkId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "switches"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "list",
          "description": "Returns a corporate map of configured network switches with the assigned\nemergency addresses for the logged-in account.\n",
          "summary": "List Account Switches",
          "operationId": "listAccountSwitches",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SwitchesList"
          },
          "queryParameters": "listAccountSwitchesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Creates a new switch in corporate map based on chassis ID and used\nfor Automatic Locations Update feature.\n",
          "summary": "Create Switch",
          "operationId": "createSwitch",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SwitchInfo"
          },
          "bodyParameters": "createSwitchInfo"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches/{switchId}",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "get",
          "description": "Returns the specified switch with the assigned emergency address.",
          "summary": "Get Switch",
          "operationId": "readSwitch",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "SwitchInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches/{switchId}",
          "method": "put",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "put",
          "description": "Updates switch. Partial update is not supported, all switch parameters\nshould be specified. If null value is received or parameter is missing, its\nvalue is removed.\n",
          "summary": "Update Switch",
          "operationId": "updateSwitch",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "SwitchInfo"
          },
          "bodyParameters": "updateSwitchInfo"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches/{switchId}",
          "method": "delete",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "delete",
          "description": "Deletes wireless switch(es) in a network configuration for Automatic\nLocation Updates feature.\n",
          "summary": "Delete Switch",
          "operationId": "deleteSwitch",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true
        }
      ],
      "parameter": "switchId"
    },
    {
      "paths": [
        "webinar",
        "history",
        "v1",
        "webinars",
        "sessions",
        "participants",
        "self"
      ],
      "operations": [
        {
          "endpoint": "/webinar/history/v1/webinars/{webinarId}/sessions/{sessionId}/participants/self",
          "method": "get",
          "tags": [
            "Historical Webinars"
          ],
          "method2": "get",
          "description": "Returns the participant information specific to a webinar session. Accessible by any authenticated participant.\nFor a non-authenticated participant, API returns error.\n",
          "summary": "Get Participant Information",
          "operationId": "rcwHistoryGetParticipantInfo",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadWebinars",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ParticipantReducedModel"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "caller-blocking",
        "phone-numbers"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers",
          "method": "get",
          "tags": [
            "Call Blocking"
          ],
          "method2": "list",
          "description": "Returns the lists of blocked and allowed phone numbers.",
          "summary": "List Blocked/Allowed Phone Numbers",
          "operationId": "listBlockedAllowedNumbers",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadBlockedNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "BlockedAllowedPhoneNumbersList"
          },
          "queryParameters": "listBlockedAllowedNumbersParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers",
          "method": "post",
          "tags": [
            "Call Blocking"
          ],
          "method2": "post",
          "description": "Updates either blocked or allowed phone number list with a new phone number.",
          "summary": "Add Blocked/Allowed Number",
          "operationId": "createBlockedAllowedNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditBlockedNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "BlockedAllowedPhoneNumberInfo"
          },
          "bodyParameters": "addBlockedAllowedPhoneNumber"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers/{blockedNumberId}",
          "method": "get",
          "tags": [
            "Call Blocking"
          ],
          "method2": "get",
          "description": "Returns blocked or allowed phone number(s) by their ID(s).\n[Batch request syntax](https://developers.ringcentral.com/guide/basics/batch-requests) is supported.\n",
          "summary": "Get Blocked/Allowed Number",
          "operationId": "readBlockedAllowedNumber",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadBlockedNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "BlockedAllowedPhoneNumberInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers/{blockedNumberId}",
          "method": "put",
          "tags": [
            "Call Blocking"
          ],
          "method2": "put",
          "description": "Updates blocked or allowed phone number(s) by their ID(s).\n[Batch request syntax](https://developers.ringcentral.com/guide/basics/batch-requests) is supported.\n",
          "summary": "Update Blocked/Allowed Number",
          "operationId": "updateBlockedAllowedNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditBlockedNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "BlockedAllowedPhoneNumberInfo"
          },
          "bodyParameters": "addBlockedAllowedPhoneNumber"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers/{blockedNumberId}",
          "method": "delete",
          "tags": [
            "Call Blocking"
          ],
          "method2": "delete",
          "description": "Deletes blocked or allowed phone number(s) by their ID(s). \n[Batch request](https://developers.ringcentral.com/guide/basics/batch-requests) is supported.\n",
          "summary": "Delete Blocked/Allowed Number",
          "operationId": "deleteBlockedAllowedNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditBlockedNumbers",
          "withParameter": true
        }
      ],
      "parameter": "blockedNumberId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "phone-number",
        "sms-configuration"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/phone-number/{phoneNumberId}/sms-configuration",
          "method": "get",
          "tags": [
            "Phone Numbers"
          ],
          "method2": "get",
          "description": "Returns SMS configuration for the specified phone number of the extension.\n",
          "summary": "Get SMS Configuration",
          "operationId": "smsConfigurationInfo",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "SmsConfigurationResource"
          }
        }
      ]
    },
    {
      "paths": [
        "ai",
        "ringsense",
        "v1",
        "public",
        "accounts",
        "domains",
        "records",
        "insights"
      ],
      "operations": [
        {
          "endpoint": "/ai/ringsense/v1/public/accounts/{accountId}/domains/{domain}/records/{sourceRecordId}/insights",
          "method": "get",
          "tags": [
            "RingSense"
          ],
          "method2": "get",
          "description": "Returns the insights of a call recording",
          "summary": "Get Recording Insights",
          "operationId": "getRecordingInsights",
          "rateLimitGroup": "Light",
          "appPermission": "RingSense",
          "withParameter": false,
          "responseSchema": {
            "$ref": "RecordingInsights"
          },
          "queryParameters": "getRecordingInsightsParameters"
        }
      ]
    },
    {
      "paths": [
        "ai",
        "ringsense",
        "v1",
        "public",
        "accounts",
        "domains",
        "sessions",
        "insights"
      ],
      "operations": [
        {
          "endpoint": "/ai/ringsense/v1/public/accounts/{accountId}/domains/{domain}/sessions/{sourceSessionId}/insights",
          "method": "get",
          "tags": [
            "RingSense"
          ],
          "method2": "get",
          "description": "Returns the insights of all call recordings in a session",
          "summary": "Get Session Insights",
          "operationId": "getSessionInsights",
          "rateLimitGroup": "Light",
          "appPermission": "RingSense",
          "withParameter": false,
          "responseSchema": {
            "type": "object",
            "required": [
              "records",
              "paging"
            ],
            "properties": {
              "records": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RecordingInsights"
                }
              },
              "paging": {
                "$ref": "#/components/schemas/RSPagingModel"
              }
            }
          },
          "queryParameters": "getSessionInsightsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "metadata",
        "multichannel-recordings"
      ],
      "operations": [],
      "parameter": "metadataId",
      "noParentParameter": true
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "wireless-points"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "list",
          "description": "Returns account wireless points configured and used for Automatic\nLocation Updates feature.\n",
          "summary": "List Wireless Points",
          "operationId": "listWirelessPoints",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "WirelessPointsList"
          },
          "queryParameters": "listWirelessPointsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Creates a new wireless point in network configuration with the\nemergency address assigned.\n",
          "summary": "Create Wireless Point",
          "operationId": "createWirelessPoint",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "WirelessPointInfo"
          },
          "bodyParameters": "createWirelessPoint"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points/{pointId}",
          "method": "get",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "get",
          "description": "Returns the specified wireless access point of a corporate map\nwith the emergency address assigned.\n",
          "summary": "Get Wireless Point",
          "operationId": "readWirelessPoint",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "WirelessPointInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points/{pointId}",
          "method": "put",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "put",
          "description": "Updates the specified wireless access point of a corporate map\nby ID.\n",
          "summary": "Update Wireless Point",
          "operationId": "updateWirelessPoint",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "WirelessPointInfo"
          },
          "bodyParameters": "updateWirelessPoint"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points/{pointId}",
          "method": "delete",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "delete",
          "description": "Deletes wireless point(s) of a corporate map by ID(s).",
          "summary": "Delete Wireless Point",
          "operationId": "deleteWirelessPoint",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true
        }
      ],
      "parameter": "pointId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "users",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/users/bulk-assign",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Enables or disables Automatic Location Updates feature for multiple\naccount users.\n",
          "summary": "Enable Automatic Location Updates for Users",
          "operationId": "assignMultipleAutomaticLocationUpdatesUsers",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "bodyParameters": "emergencyAddressAutoUpdateUsersBulkAssignResource"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "devices",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/devices/bulk-assign",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Enables or disables Automatic Location Updates feature for the\nspecified common phones.\n",
          "summary": "Enable Automatic Location Updates Feature",
          "operationId": "assignMultipleDevicesAutomaticLocationUpdates",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "bodyParameters": "assignMultipleDevicesAutomaticLocationUpdates"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "metadata",
        "multichannel-recordings",
        "content"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/metadata/multichannel-recordings/{metadataId}/content",
          "method": "get",
          "tags": [
            "Telephony Metadata"
          ],
          "method2": "get",
          "description": "Returns media content of a multichannel call recording\n\n**This API must be called via media API entry point, e.g. https://media.ringcentral.com**\n",
          "summary": "Get Multichannel Call Recording Content",
          "operationId": "readMultichannelCallRecordingContent",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallRecording",
          "withParameter": false,
          "queryParameters": "readMultichannelCallRecordingContentParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "switches-bulk-create"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches-bulk-create",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Creates multiple switches in corporate map. The maximum number\nof switches per request is 10 000; limitation for account is 10 000.\n",
          "summary": "Create Multiple Switches",
          "operationId": "createMultipleSwitches",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CreateMultipleSwitchesResponse"
          },
          "bodyParameters": "createMultipleSwitchesRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "switches-bulk-update"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches-bulk-update",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Updates multiple switches in corporate map. The maximum number\nof switches per request is 10 000; limitation for account is 10 000.\n",
          "summary": "Update Multiple Switches",
          "operationId": "updateMultipleSwitches",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "UpdateMultipleSwitchesResponse"
          },
          "bodyParameters": "updateMultipleSwitchesRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "switches-bulk-validate"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches-bulk-validate",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Validates switches before creation or update. The maximum number\nof switches per request is 10 000.\n",
          "summary": "Validate Multiple Switches",
          "operationId": "validateMultipleSwitches",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ValidateMultipleSwitchesResponse"
          },
          "bodyParameters": "validateMultipleSwitchesRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "wireless-points-bulk-create"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points-bulk-create",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Creates multiple wireless points in a corporate map. The maximum\nnumber of wireless points per request is 10 000; limitation for account is\n70 000.\n",
          "summary": "Create Multiple Wireless Points",
          "operationId": "createMultipleWirelessPoints",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "CreateMultipleWirelessPointsResponse"
          },
          "bodyParameters": "createMultipleWirelessPointsRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "wireless-points-bulk-update"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points-bulk-update",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Updates wireless points in corporate map. The maximum number of\nwireless points per request is 10 000; limitation for account is 70 000.\n",
          "summary": "Update Multiple Wireless Points",
          "operationId": "updateMultipleWirelessPoints",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "UpdateMultipleWirelessPointsResponse"
          },
          "bodyParameters": "updateMultipleWirelessPointsRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "wireless-points-bulk-validate"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points-bulk-validate",
          "method": "post",
          "tags": [
            "Automatic Location Updates"
          ],
          "method2": "post",
          "description": "Validates wireless points before creation or update. The maximum\nnumber of wireless points per request is 10 000.\n",
          "summary": "Validate Multiple Wireless Points",
          "operationId": "validateMultipleWirelessPoints",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "ValidateMultipleWirelessPointsResponse"
          },
          "bodyParameters": "validateMultipleWirelessPointsRequest"
        }
      ]
    }
  ]
}